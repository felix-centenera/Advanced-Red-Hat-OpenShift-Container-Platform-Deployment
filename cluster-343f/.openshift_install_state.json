{
    "*bootkube.CVOOverrides": {
        "FileList": [
            {
                "Filename": "templates/cvo-overrides.yaml.template",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLXZlcnNpb24KICBuYW1lOiB2ZXJzaW9uCnNwZWM6CiAgdXBzdHJlYW06IGh0dHBzOi8vYXBpLm9wZW5zaGlmdC5jb20vYXBpL3VwZ3JhZGVzX2luZm8vdjEvZ3JhcGgKICBjaGFubmVsOiBzdGFibGUtNC4xCiAgY2x1c3RlcklEOiB7ey5DVk9DbHVzdGVySUR9fQo="
            }
        ]
    },
    "*bootkube.EtcdCAConfigMap": {
        "FileList": [
            {
                "Filename": "templates/etcd-ca-bundle-configmap.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtY2EtYnVuZGxlCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCmRhdGE6CiAgY2EtYnVuZGxlLmNydDogfAogICAge3suRXRjZENhQnVuZGxlIHwgaW5kZW50IDR9fQo="
            }
        ]
    },
    "*bootkube.EtcdClientSecret": {
        "FileList": [
            {
                "Filename": "templates/etcd-client-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtY2xpZW50CiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCnR5cGU6IFNlY3JldFR5cGVUTFMKZGF0YToKICB0bHMuY3J0OiB7eyAuRXRjZFNpZ25lckNsaWVudENlcnQgfX0KICB0bHMua2V5OiB7eyAuRXRjZFNpZ25lckNsaWVudEtleSB9fQo="
            }
        ]
    },
    "*bootkube.EtcdHostService": {
        "FileList": [
            {
                "Filename": "templates/etcd-host-service.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBob3N0LWV0Y2QKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1ldGNkCiAgbGFiZWxzOgogICAgIyB0aGlzIGxhYmVsIGlzIHVzZWQgdG8gaW5kaWNhdGUgdGhhdCBpdCBzaG91bGQgYmUgc2NyYXBlZCBieSBwcm9tZXRoZXVzCiAgICBrOHMtYXBwOiBldGNkCnNwZWM6CiAgY2x1c3RlcklQOiBOb25lCiAgcG9ydHM6CiAgLSBuYW1lOiBldGNkCiAgICBwb3J0OiAyMzc5CiAgICBwcm90b2NvbDogVENQCg=="
            }
        ]
    },
    "*bootkube.EtcdHostServiceEndpoints": {
        "FileList": [
            {
                "Filename": "templates/etcd-host-service-endpoints.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogRW5kcG9pbnRzCm1ldGFkYXRhOgogIG5hbWU6IGhvc3QtZXRjZAogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWV0Y2QKICBhbm5vdGF0aW9uczoKICAgIGFscGhhLmluc3RhbGxlci5vcGVuc2hpZnQuaW8vZG5zLXN1ZmZpeDoge3suRXRjZEVuZHBvaW50RE5TU3VmZml4fX0Kc3Vic2V0czoKLSBhZGRyZXNzZXM6Cnt7LSByYW5nZSAkaWR4LCAkbWVtYmVyIDo9IC5FdGNkRW5kcG9pbnRIb3N0bmFtZXMgfX0KICAtIGlwOiAxOTIuMC4yLnt7IGFkZCAkaWR4IDEgfX0KICAgIGhvc3RuYW1lOiB7eyAkbWVtYmVyIH19Cnt7LSBlbmQgfX0KICBwb3J0czoKICAtIG5hbWU6IGV0Y2QKICAgIHBvcnQ6IDIzNzkKICAgIHByb3RvY29sOiBUQ1AK"
            }
        ]
    },
    "*bootkube.EtcdMetricClientSecret": {
        "FileList": [
            {
                "Filename": "templates/etcd-metric-client-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtbWV0cmljLWNsaWVudAogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNvbmZpZwp0eXBlOiBTZWNyZXRUeXBlVExTCmRhdGE6CiAgdGxzLmNydDoge3sgLkV0Y2RNZXRyaWNTaWduZXJDbGllbnRDZXJ0IH19CiAgdGxzLmtleToge3sgLkV0Y2RNZXRyaWNTaWduZXJDbGllbnRLZXkgfX0K"
            }
        ]
    },
    "*bootkube.EtcdMetricServingCAConfigMap": {
        "FileList": [
            {
                "Filename": "templates/etcd-metric-serving-ca-configmap.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtbWV0cmljLXNlcnZpbmctY2EKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKZGF0YToKICBjYS1idW5kbGUuY3J0OiB8CiAgICB7ey5FdGNkTWV0cmljQ2FDZXJ0IHwgaW5kZW50IDR9fQo="
            }
        ]
    },
    "*bootkube.EtcdMetricSignerSecret": {
        "FileList": [
            {
                "Filename": "templates/etcd-metric-signer-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtbWV0cmljLXNpZ25lcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNvbmZpZwp0eXBlOiBTZWNyZXRUeXBlVExTCmRhdGE6CiAgdGxzLmNydDoge3sgLkV0Y2RNZXRyaWNTaWduZXJDZXJ0IH19CiAgdGxzLmtleToge3sgLkV0Y2RNZXRyaWNTaWduZXJLZXkgfX0K"
            }
        ]
    },
    "*bootkube.EtcdNamespace": {
        "FileList": [
            {
                "Filename": "templates/etcd-namespace.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogIG5hbWU6IG9wZW5zaGlmdC1ldGNkCiAgYW5ub3RhdGlvbnM6CiAgICBvcGVuc2hpZnQuaW8vbm9kZS1zZWxlY3RvcjogIiIKICBsYWJlbHM6CiAgICBvcGVuc2hpZnQuaW8vcnVuLWxldmVsOiAiMSIK"
            }
        ]
    },
    "*bootkube.EtcdService": {
        "FileList": [
            {
                "Filename": "templates/etcd-service.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBldGNkCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtZXRjZAogIGxhYmVsczoKICAgICMgdGhpcyBsYWJlbCBpcyB1c2VkIHRvIGluZGljYXRlIHRoYXQgaXQgc2hvdWxkIGJlIHNjcmFwZWQgYnkgcHJvbWV0aGV1cwogICAgazhzLWFwcDogZXRjZApzcGVjOgogIHNlbGVjdG9yOgogICAgazhzLWFwcDogZXRjZAogIHBvcnRzOgogIC0gbmFtZTogZXRjZAogICAgcG9ydDogMjM3OQogICAgcHJvdG9jb2w6IFRDUAogIC0gbmFtZTogZXRjZC1tZXRyaWNzCiAgICBwb3J0OiA5OTc5CiAgICBwcm90b2NvbDogVENQCg=="
            }
        ]
    },
    "*bootkube.EtcdServingCAConfigMap": {
        "FileList": [
            {
                "Filename": "templates/etcd-serving-ca-configmap.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2Qtc2VydmluZy1jYQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNvbmZpZwpkYXRhOgogIGNhLWJ1bmRsZS5jcnQ6IHwKICAgIHt7LkV0Y2RDYUJ1bmRsZSB8IGluZGVudCA0fX0K"
            }
        ]
    },
    "*bootkube.EtcdSignerSecret": {
        "FileList": [
            {
                "Filename": "templates/etcd-signer-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2Qtc2lnbmVyCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCnR5cGU6IFNlY3JldFR5cGVUTFMKZGF0YToKICB0bHMuY3J0OiB7eyAuRXRjZFNpZ25lckNlcnQgfX0KICB0bHMua2V5OiB7eyAuRXRjZFNpZ25lcktleSB9fQo="
            }
        ]
    },
    "*bootkube.KubeCloudConfig": {
        "FileList": [
            {
                "Filename": "templates/kube-cloud-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg=="
            }
        ]
    },
    "*bootkube.KubeSystemConfigmapRootCA": {
        "FileList": [
            {
                "Filename": "templates/kube-system-configmap-root-ca.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICB7ey5Sb290Q2FDZXJ0IHwgaW5kZW50IDR9fQo="
            }
        ]
    },
    "*bootkube.MachineConfigServerTLSSecret": {
        "FileList": [
            {
                "Filename": "templates/machine-config-server-tls-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiB7ey5NY3NUTFNDZXJ0fX0KICB0bHMua2V5OiB7ey5NY3NUTFNLZXl9fQo="
            }
        ]
    },
    "*bootkube.OpenshiftConfigSecretPullSecret": {
        "FileList": [
            {
                "Filename": "templates/openshift-config-secret-pull-secret.yaml.template",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0CnR5cGU6IGt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKICBuYW1lOiBwdWxsLXNlY3JldApkYXRhOgogIC5kb2NrZXJjb25maWdqc29uOiB7ey5QdWxsU2VjcmV0QmFzZTY0fX0K"
            }
        ]
    },
    "*bootkube.OpenshiftMachineConfigOperator": {
        "FileList": [
            {
                "Filename": "templates/04-openshift-machine-config-operator.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogIGxhYmVsczoKICAgIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg=="
            }
        ]
    },
    "*bootstrap.Bootstrap": {
        "Config": {
            "ignition": {
                "config": {},
                "security": {
                    "tls": {}
                },
                "timeouts": {},
                "version": "2.2.0"
            },
            "networkd": {},
            "passwd": {
                "users": [
                    {
                        "name": "core",
                        "sshAuthorizedKeys": [
                            ""
                        ]
                    }
                ]
            },
            "storage": {
                "files": [
                    {
                        "filesystem": "root",
                        "path": "/etc/motd",
                        "user": {
                            "name": "root"
                        },
                        "append": true,
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,VGhpcyBpcyB0aGUgYm9vdHN0cmFwIG5vZGU7IGl0IHdpbGwgYmUgZGVzdHJveWVkIHdoZW4gdGhlIG1hc3RlciBpcyBmdWxseSB1cC4KClRoZSBwcmltYXJ5IHNlcnZpY2UgaXMgImJvb3RrdWJlLnNlcnZpY2UiLiBUbyB3YXRjaCBpdHMgc3RhdHVzLCBydW4gZS5nLgoKICBqb3VybmFsY3RsIC1iIC1mIC11IGJvb3RrdWJlLnNlcnZpY2UK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/root/.docker/config.json",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,eyJhdXRocyI6eyJjbG91ZC5vcGVuc2hpZnQuY29tIjp7ImF1dGgiOiJiM0JsYm5Ob2FXWjBMWEpsYkdWaGMyVXRaR1YySzJabGJHbDRZMlZ1ZEdWdVpYSmhiV1Z5YVc1dk1XcDRlRGswT1dSdGMzWjNZWEIwYW0xbmVHOXphbkJzT1hab09rNUVTMHhJU2xGWFMwZE9RVUl4TURWVlJGZFpSMXBXU1RaVVUwRTVOMHhFTVRCTE1rZ3dNMDFIUzBsVFNFdE5RVFpSVGt4YU9WYzNRbGN6UTFwUlVGbz0iLCJlbWFpbCI6ImZlbGl4LmNlbnQubWVyaW5vQGhvdG1haWwuZXMifSwicXVheS5pbyI6eyJhdXRoIjoiYjNCbGJuTm9hV1owTFhKbGJHVmhjMlV0WkdWMksyWmxiR2w0WTJWdWRHVnVaWEpoYldWeWFXNXZNV3A0ZURrME9XUnRjM1ozWVhCMGFtMW5lRzl6YW5Cc09YWm9PazVFUzB4SVNsRlhTMGRPUVVJeE1EVlZSRmRaUjFwV1NUWlVVMEU1TjB4RU1UQkxNa2d3TTAxSFMwbFRTRXROUVRaUlRreGFPVmMzUWxjelExcFJVRm89IiwiZW1haWwiOiJmZWxpeC5jZW50Lm1lcmlub0Bob3RtYWlsLmVzIn0sInJlZ2lzdHJ5LmNvbm5lY3QucmVkaGF0LmNvbSI6eyJhdXRoIjoiTlRFNE5qVTVNVGg4ZFdoakxURktlRmc1TkRsRVRWTldWMkZ3VkdwdFoxaFBjMHB3YkRsV1NEcGxlVXBvWWtkamFVOXBTbE5WZWxWNFRXbEtPUzVsZVVwNlpGZEphVTlwU1hoWlYwcHFXbXBqTkUxSFZtcFBSMUV3VFZkRk1WbHFhR3BOYWxGM1drUk5lbGt5VlRCWlZGVXdXWGxLT1M1TmVuZGllRzQzZFdScFVGTnZiazQzWnpWdFJqZzBjRVV5Tm5saVVrdElXRkp1UVd0dlgxUkZRV1J2TTFCUldYTkNUalJLTUUxMWJ6QjNUbWhHZEVOeFkzTm1ZMUk1T1Vac2VUTjZNRmRxVVc5cVFYcFlWVGR2UmtRNU9WWnJMV05KVEdsM1JIaG1SbVJmY3psb2VVRnZOM0UzYVVKeFVrZEtaSEpYZERSaWRXWlJiaTFHVms4MWNHMHpiRzVHVFVsRU5GTXphMkpCYTNVd2FFdDBjV0ZLTjNkVGNITkdiVmc0T1dsQmNucHVWakZvUlRCaVIxcGZVV2xCTm5CaFNVUjBWMWxoT1ZCaVdYZ3paV1JrWVdKT1pWZzJhVVUxTTJ4S1l6ZDZZazl6UlZCUU0xcG5Za3hPWkZkc1FsZFdaamhPTjBweE9FeDRiMDlzYWt3M1ptZEhYM0paVjNKSmIxWkVabFY0VFMxRlZWbHFVMlpmVVVRNWIyOVdiMjB3WWkxWE1tUjVaREl3WlRGdlRsbENPR3R0YXpOd2NrODViSFZRWkV0VkxWVldiakJqVkVOQ1FqVk5XbkZZZGpkbE5XbGtjV3BEZVdOV1JVaHNRMmhWTVZKclZXRkpNSGhuVFMxSk1sb3plRlJhWDNwVmNrRkdOV2RhWm1KdE4wSkJUbTFuYzNJNE5GbFRPRWN4VkRkcFJsODJZMlpLVm1kMGRUWklVMEZFYlRKcU5WaHNUVmx1ZEdWRll5MHdURTFhZFMxdVVYVlFPR1p0ZUVwMVltTTNUV05mUW5ORFNUaHBaMHhCTVZKVVNqUnhlRGxvWVVoWmMyUjVWbmhmWjBSTVppMUlOVlYxZERFelQzRmlPSEo1VEdGeFYwRXhjSGx2TkRkblJYTTRhWG8xUVd3MFpHWjJRbGhOYTJwd2VGUjVUamRQZFdwVFpFbFdZWEZzYzJscFh6WmtSREJoVDFOM2VXaHNieTFNV0VGaWVrTjRNVWt0WkVSNVlpMUpjSE5tWWxaemMwVnBNbnBrTm5sR2FHTlhjMjVVZG1kTGVsSnpiMWRKTjBWTlZFZFZUSGR5ZWpseU1tSmhhSEpXVTBObFZrcHRlbDg0YlROMVFVSjZWbXhqWkdOMVRtRkRWV2xsVUdwUU5ucFJibVJ0U25FNFVuSjJiVTVQVlc1amEwbGhWVEEyTWtocVQzRnhaMHBIY3c9PSIsImVtYWlsIjoiZmVsaXguY2VudC5tZXJpbm9AaG90bWFpbC5lcyJ9LCJyZWdpc3RyeS5yZWRoYXQuaW8iOnsiYXV0aCI6Ik5URTROalU1TVRoOGRXaGpMVEZLZUZnNU5EbEVUVk5XVjJGd1ZHcHRaMWhQYzBwd2JEbFdTRHBsZVVwb1lrZGphVTlwU2xOVmVsVjRUV2xLT1M1bGVVcDZaRmRKYVU5cFNYaFpWMHBxV21wak5FMUhWbXBQUjFFd1RWZEZNVmxxYUdwTmFsRjNXa1JOZWxreVZUQlpWRlV3V1hsS09TNU5lbmRpZUc0M2RXUnBVRk52Yms0M1p6VnRSamcwY0VVeU5ubGlVa3RJV0ZKdVFXdHZYMVJGUVdSdk0xQlJXWE5DVGpSS01FMTFiekIzVG1oR2RFTnhZM05tWTFJNU9VWnNlVE42TUZkcVVXOXFRWHBZVlRkdlJrUTVPVlpyTFdOSlRHbDNSSGhtUm1SZmN6bG9lVUZ2TjNFM2FVSnhVa2RLWkhKWGREUmlkV1pSYmkxR1ZrODFjRzB6Ykc1R1RVbEVORk16YTJKQmEzVXdhRXQwY1dGS04zZFRjSE5HYlZnNE9XbEJjbnB1VmpGb1JUQmlSMXBmVVdsQk5uQmhTVVIwVjFsaE9WQmlXWGd6WldSa1lXSk9aVmcyYVVVMU0yeEtZemQ2WWs5elJWQlFNMXBuWWt4T1pGZHNRbGRXWmpoT04wcHhPRXg0YjA5c2FrdzNabWRIWDNKWlYzSkpiMVpFWmxWNFRTMUZWVmxxVTJaZlVVUTViMjlXYjIwd1lpMVhNbVI1WkRJd1pURnZUbGxDT0d0dGF6Tndjazg1YkhWUVpFdFZMVlZXYmpCalZFTkNRalZOV25GWWRqZGxOV2xrY1dwRGVXTldSVWhzUTJoVk1WSnJWV0ZKTUhoblRTMUpNbG96ZUZSYVgzcFZja0ZHTldkYVptSnROMEpCVG0xbmMzSTRORmxUT0VjeFZEZHBSbDgyWTJaS1ZtZDBkVFpJVTBGRWJUSnFOVmhzVFZsdWRHVkZZeTB3VEUxYWRTMXVVWFZRT0dadGVFcDFZbU0zVFdOZlFuTkRTVGhwWjB4Qk1WSlVTalJ4ZURsb1lVaFpjMlI1Vm5oZlowUk1aaTFJTlZWMWRERXpUM0ZpT0hKNVRHRnhWMEV4Y0hsdk5EZG5SWE00YVhvMVFXdzBaR1oyUWxoTmEycHdlRlI1VGpkUGRXcFRaRWxXWVhGc2MybHBYelprUkRCaFQxTjNlV2hzYnkxTVdFRmlla040TVVrdFpFUjVZaTFKY0hObVlsWnpjMFZwTW5wa05ubEdhR05YYzI1VWRtZExlbEp6YjFkSk4wVk5WRWRWVEhkeWVqbHlNbUpoYUhKV1UwTmxWa3B0ZWw4NGJUTjFRVUo2Vm14alpHTjFUbUZEVldsbFVHcFFObnBSYm1SdFNuRTRVbkoyYlU1UFZXNWphMGxoVlRBMk1raHFUM0Z4WjBwSGN3PT0iLCJlbWFpbCI6ImZlbGl4LmNlbnQubWVyaW5vQGhvdG1haWwuZXMifX19Cg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/usr/local/bin/approve-csr.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKS1VCRUNPTkZJRz0iJHsxfSIKCmVjaG8gIkFwcHJvdmluZyBhbGwgQ1NSIHJlcXVlc3RzIHVudGlsIGJvb3RzdHJhcHBpbmcgaXMgY29tcGxldGUuLi4iCndoaWxlIFsgISAtZiAvb3B0L29wZW5zaGlmdC9ib290a3ViZS5kb25lIF0KZG8KICAgIG9jIC0tY29uZmlnPSIkS1VCRUNPTkZJRyIgZ2V0IGNzciAtLW5vLWhlYWRlcnMgfCBncmVwIFBlbmRpbmcgfCBcCiAgICAgICAgYXdrICd7cHJpbnQgJDF9JyB8IFwKICAgICAgICB4YXJncyAtLW5vLXJ1bi1pZi1lbXB0eSBvYyAtLWNvbmZpZz0iJEtVQkVDT05GSUciIGFkbSBjZXJ0aWZpY2F0ZSBhcHByb3ZlCglzbGVlcCAyMApkb25lCg==",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/usr/local/bin/bootkube.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/usr/local/bin/installer-gather.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/usr/local/bin/installer-masters-gather.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKQVJUSUZBQ1RTPSIkezE6LS90bXAvYXJ0aWZhY3RzfSIKbWtkaXIgLXAgIiR7QVJUSUZBQ1RTfSIKCmVjaG8gIkdhdGhlcmluZyBtYXN0ZXIgam91cm5hbHMgLi4uIgpta2RpciAtcCAiJHtBUlRJRkFDVFN9L2pvdXJuYWxzIgpmb3Igc2VydmljZSBpbiBrdWJlbGV0IGNyaW8KZG8KICAgIGpvdXJuYWxjdGwgLS1ib290IC0tbm8tcGFnZXIgLS1vdXRwdXQ9c2hvcnQgLS11bml0PSIke3NlcnZpY2V9IiA+ICIke0FSVElGQUNUU30vam91cm5hbHMvJHtzZXJ2aWNlfS5sb2ciCmRvbmUKCmVjaG8gIkdhdGhlcmluZyBtYXN0ZXIgY29udGFpbmVycyAuLi4iCm1rZGlyIC1wICIke0FSVElGQUNUU30vY29udGFpbmVycyIKZm9yIGNvbnRhaW5lciBpbiAkKGNyaWN0bCBwcyAtLWFsbCAtLXF1aWV0KQpkbwogICAgY29udGFpbmVyX25hbWU9JChjcmljdGwgcHMgLWEgLS1pZCAiJHtjb250YWluZXJ9IiAtdiB8IGdyZXAgLW9QICJOYW1lOiBcXEsoLiopIikKICAgIGNyaWN0bCBsb2dzICIke2NvbnRhaW5lcn0iID4mICIke0FSVElGQUNUU30vY29udGFpbmVycy8ke2NvbnRhaW5lcl9uYW1lfS0ke2NvbnRhaW5lcn0ubG9nIgogICAgY3JpY3RsIGluc3BlY3QgIiR7Y29udGFpbmVyfSIgPiYgIiR7QVJUSUZBQ1RTfS9jb250YWluZXJzLyR7Y29udGFpbmVyX25hbWV9LSR7Y29udGFpbmVyfS5pbnNwZWN0Igpkb25lCmZvciBjb250YWluZXIgaW4gJChwb2RtYW4gcHMgLS1hbGwgLS1xdWlldCkKZG8KICAgIHBvZG1hbiBsb2dzICIke2NvbnRhaW5lcn0iID4mICIke0FSVElGQUNUU30vY29udGFpbmVycy8ke2NvbnRhaW5lcn0ubG9nIgogICAgcG9kbWFuIGluc3BlY3QgIiR7Y29udGFpbmVyfSIgPiYgIiR7QVJUSUZBQ1RTfS9jb250YWluZXJzLyR7Y29udGFpbmVyfS5pbnNwZWN0Igpkb25lCgplY2hvICJXYWl0aW5nIGZvciBsb2dzIC4uLiIKd2FpdAo=",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/usr/local/bin/openshift.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaApzZXQgLWUKCktVQkVDT05GSUc9IiQxIgoKa3ViZWN0bCgpIHsKCWVjaG8gIkV4ZWN1dGluZyBrdWJlY3RsICQqIiA+JjIKCXdoaWxlIHRydWUKCWRvCgkJc2V0ICtlCgkJb3V0PSQob2MgLS1jb25maWc9IiRLVUJFQ09ORklHIiAiJEAiIDI+JjEpCgkJc3RhdHVzPSQ/CgkJc2V0IC1lCgoJCWlmIGdyZXAgLS1xdWlldCAiQWxyZWFkeUV4aXN0cyIgPDw8ICIkb3V0IgoJCXRoZW4KCQkJZWNobyAiJG91dCwgc2tpcHBpbmciID4mMgoJCQlyZXR1cm4KCQlmaQoKCQllY2hvICIkb3V0IgoJCWlmIFsgIiRzdGF0dXMiIC1lcSAwIF0KCQl0aGVuCgkJCXJldHVybgoJCWZpCgoJCWVjaG8gImt1YmVjdGwgJCogZmFpbGVkLiBSZXRyeWluZyBpbiA1IHNlY29uZHMuLi4iID4mMgoJCXNsZWVwIDUKCWRvbmUKfQoKZm9yIGZpbGUgaW4gJChmaW5kIC4gLW1heGRlcHRoIDEgLXR5cGUgZiB8IHNvcnQpCmRvCgllY2hvICJDcmVhdGluZyBvYmplY3QgZnJvbSBmaWxlOiAkZmlsZSAuLi4iCglrdWJlY3RsIGNyZWF0ZSAtLWZpbGVuYW1lICIkZmlsZSIKCWVjaG8gIkRvbmUgY3JlYXRpbmcgb2JqZWN0IGZyb20gZmlsZTogJGZpbGUgLi4uIgpkb25lCgojIFdvcmthcm91bmQgZm9yIGh0dHBzOi8vZ2l0aHViLmNvbS9vcGVuY29udGFpbmVycy9ydW5jL3B1bGwvMTgwNwp0b3VjaCAvb3B0L29wZW5zaGlmdC8ub3BlbnNoaWZ0LmRvbmUKCmVjaG8gIk9wZW5TaGlmdCBpbnN0YWxsYXRpb24gaXMgZG9uZSIK",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/usr/local/bin/report-progress.sh",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,IyEvdXNyL2Jpbi9lbnYgYmFzaAoKS1VCRUNPTkZJRz0iJHsxfSIKCndhaXRfZm9yX2V4aXN0YW5jZSgpIHsKCXdoaWxlIFsgISAtZSAiJHsxfSIgXQoJZG8KCQlzbGVlcCA1Cglkb25lCn0KCmVjaG8gIldhaXRpbmcgZm9yIGJvb3RzdHJhcCB0byBjb21wbGV0ZS4uLiIKd2FpdF9mb3JfZXhpc3RhbmNlIC9vcHQvb3BlbnNoaWZ0Ly5ib290a3ViZS5kb25lCndhaXRfZm9yX2V4aXN0YW5jZSAvb3B0L29wZW5zaGlmdC8ub3BlbnNoaWZ0LmRvbmUKCmVjaG8gIlJlcG9ydGluZyBpbnN0YWxsIHByb2dyZXNzLi4uIgp3aGlsZSAhIG9jIC0tY29uZmlnPSIkS1VCRUNPTkZJRyIgY3JlYXRlIC1mIC0gPDwtRU9GCglhcGlWZXJzaW9uOiB2MQoJa2luZDogQ29uZmlnTWFwCgltZXRhZGF0YToKCSAgbmFtZTogYm9vdHN0cmFwCgkgIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KCWRhdGE6CgkgIHN0YXR1czogY29tcGxldGUKRU9GCmRvCglzbGVlcCA1CmRvbmUK",
                            "verification": {}
                        },
                        "mode": 365
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/04-openshift-machine-config-operator.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogIGxhYmVsczoKICAgIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-config.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnN0YWxsLWNvbmZpZzogfAogICAgYXBpVmVyc2lvbjogdjEKICAgIGJhc2VEb21haW46IHNhbmRib3gxNjYzLm9wZW50bGMuY29tCiAgICBjb21wdXRlOgogICAgLSBoeXBlcnRocmVhZGluZzogRW5hYmxlZAogICAgICBuYW1lOiB3b3JrZXIKICAgICAgcGxhdGZvcm06IHt9CiAgICAgIHJlcGxpY2FzOiAzCiAgICBjb250cm9sUGxhbmU6CiAgICAgIGh5cGVydGhyZWFkaW5nOiBFbmFibGVkCiAgICAgIG5hbWU6IG1hc3RlcgogICAgICBwbGF0Zm9ybToKICAgICAgICBhd3M6CiAgICAgICAgICByb290Vm9sdW1lOgogICAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICAgIHNpemU6IDEyMAogICAgICAgICAgICB0eXBlOiBncDIKICAgICAgICAgIHR5cGU6IG00LnhsYXJnZQogICAgICAgICAgem9uZXM6CiAgICAgICAgICAtIGV1LWNlbnRyYWwtMWEKICAgICAgICAgIC0gZXUtY2VudHJhbC0xYgogICAgICAgICAgLSBldS1jZW50cmFsLTFjCiAgICAgIHJlcGxpY2FzOiAzCiAgICBtZXRhZGF0YToKICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgbmFtZTogY2x1c3Rlci0zNDNmCiAgICBuZXR3b3JraW5nOgogICAgICBjbHVzdGVyTmV0d29yazoKICAgICAgLSBjaWRyOiAxMC4xMjguMC4wLzE0CiAgICAgICAgaG9zdFByZWZpeDogMjMKICAgICAgbWFjaGluZUNJRFI6IDEwLjAuMC4wLzE2CiAgICAgIG5ldHdvcmtUeXBlOiBPcGVuU2hpZnRTRE4KICAgICAgc2VydmljZU5ldHdvcms6CiAgICAgIC0gMTcyLjMwLjAuMC8xNgogICAgcGxhdGZvcm06CiAgICAgIGF3czoKICAgICAgICByZWdpb246IGV1LWNlbnRyYWwtMQogICAgcHVsbFNlY3JldDogIiIKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGNsdXN0ZXItY29uZmlnLXYxCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-dns-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogY2x1c3Rlci0zNDNmLnNhbmRib3gxNjYzLm9wZW50bGMuY29tCiAgcHJpdmF0ZVpvbmU6CiAgICB0YWdzOgogICAgICBOYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otaW50CiAgICAgIGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9jbHVzdGVyLTM0M2YtOGZqa2o6IG93bmVkCiAgcHVibGljWm9uZToKICAgIGlkOiBaMjM5TjhCMDRRN1lLVgpzdGF0dXM6IHt9Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-infrastructure-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmZyYXN0cnVjdHVyZQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICBjbG91ZENvbmZpZzoKICAgIG5hbWU6ICIiCnN0YXR1czoKICBhcGlTZXJ2ZXJJbnRlcm5hbFVSSTogaHR0cHM6Ly9hcGktaW50LmNsdXN0ZXItMzQzZi5zYW5kYm94MTY2My5vcGVudGxjLmNvbTo2NDQzCiAgYXBpU2VydmVyVVJMOiBodHRwczovL2FwaS5jbHVzdGVyLTM0M2Yuc2FuZGJveDE2NjMub3BlbnRsYy5jb206NjQ0MwogIGV0Y2REaXNjb3ZlcnlEb21haW46IGNsdXN0ZXItMzQzZi5zYW5kYm94MTY2My5vcGVudGxjLmNvbQogIGluZnJhc3RydWN0dXJlTmFtZTogY2x1c3Rlci0zNDNmLThmamtqCiAgcGxhdGZvcm06IEFXUwo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-ingress-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5jbHVzdGVyLTM0M2Yuc2FuZGJveDE2NjMub3BlbnRsYy5jb20Kc3RhdHVzOiB7fQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-network-01-crd.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,Ci0tLQojIFRoaXMgaXMgdGhlIGFkdmFuY2VkIG5ldHdvcmsgY29uZmlndXJhdGlvbiBDUkQKIyBPbmx5IG5lY2Vzc2FyeSBpZiB5b3UgbmVlZCB0byB0d2VhayBjZXJ0YWluIHNldHRpbmdzLgojIFNlZSBodHRwczovL2dpdGh1Yi5jb20vb3BlbnNoaWZ0L2NsdXN0ZXItbmV0d29yay1vcGVyYXRvciNjb25maWd1cmluZwphcGlWZXJzaW9uOiBhcGlleHRlbnNpb25zLms4cy5pby92MWJldGExCmtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgptZXRhZGF0YToKICBuYW1lOiBuZXR3b3Jrcy5vcGVyYXRvci5vcGVuc2hpZnQuaW8Kc3BlYzoKICBncm91cDogb3BlcmF0b3Iub3BlbnNoaWZ0LmlvCiAgbmFtZXM6CiAgICBraW5kOiBOZXR3b3JrCiAgICBsaXN0S2luZDogTmV0d29ya0xpc3QKICAgIHBsdXJhbDogbmV0d29ya3MKICAgIHNpbmd1bGFyOiBuZXR3b3JrCiAgc2NvcGU6IENsdXN0ZXIKICB2ZXJzaW9uczoKICAtIG5hbWU6IHYxCiAgICBzZXJ2ZWQ6IHRydWUKICAgIHN0b3JhZ2U6IHRydWUK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cluster-network-02-config.yml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogIC0gY2lkcjogMTAuMTI4LjAuMC8xNAogICAgaG9zdFByZWZpeDogMjMKICBuZXR3b3JrVHlwZTogT3BlblNoaWZ0U0ROCiAgc2VydmljZU5ldHdvcms6CiAgLSAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/cvo-overrides.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLXZlcnNpb24KICBuYW1lOiB2ZXJzaW9uCnNwZWM6CiAgdXBzdHJlYW06IGh0dHBzOi8vYXBpLm9wZW5zaGlmdC5jb20vYXBpL3VwZ3JhZGVzX2luZm8vdjEvZ3JhcGgKICBjaGFubmVsOiBzdGFibGUtNC4xCiAgY2x1c3RlcklEOiAxNDk1M2UxOS1mZDM0LTQ5ZDAtYjhjZS1kODM1ODQzMTlkMzYK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-ca-bundle-configmap.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtY2EtYnVuZGxlCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCmRhdGE6CiAgY2EtYnVuZGxlLmNydDogfAogICAgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCiAgICBNSUlER0RDQ0FnQ2dBd0lCQWdJSUkyWUJta3pHdmtJd0RRWUpLb1pJaHZjTkFRRUxCUUF3S2pFU01CQUdBMVVFCiAgICBDeE1KYjNCbGJuTm9hV1owTVJRd0VnWURWUVFERXd0bGRHTmtMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUxCiAgICBOVGxhRncweU9URXlNRFl4TURVMU5UbGFNQ294RWpBUUJnTlZCQXNUQ1c5d1pXNXphR2xtZERFVU1CSUdBMVVFCiAgICBBeE1MWlhSalpDMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNpCiAgICBBYm5kdEYvaHkzUjNncktxbGNTUEcyNjNLOC9oSXFHdWVEWVBhSXA1bTNBdW1mMGkrMjA2bkZ2VVZEdnQ0K29VCiAgICB3QzhNVWZ5RjVtZ3FobnZDTGdFOW9SYWJkc012aHhQODBIaHBVWUdhT2Iwb2d5R2Y3Unp4N3dyY1hWNmpqMkowCiAgICBNZlFBSC9pZ3MzU2Y0Z2N2b1dYekx6cTJ3MUpmSEJtRHo2cDNpSFpwMUh2QWVLUVlOTHFJOFhpd1VRSjdhZXp0CiAgICBXUFBwbWdhVlFZOS8vSE01QU5VVjZPV0dvOVdlbkVia01jWU5KZURra1grNVhuV1BPMFZ0WER3V2ZvZ1NZNzFuCiAgICB3MGl5QytGWnZGNG9NU1dvcko4YitmSVVYS3NSVWlCYjlHNmtwVDFlc0tyRk5hRndsb3h1T0N6cURrRDVxeWxICiAgICBZdUJCd2dGY2dreUFEcjR3YmxPekFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CCiAgICBBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJ3VDZtYXBNVkJBWS9NV0swWkQxdDhIZFdSU1RBTkJna3Foa2lHCiAgICA5dzBCQVFzRkFBT0NBUUVBV2g3RGI2V0EyazB3ZDllNUdmV1Z1SXhDTjUxekc2UXdWSjBWRXIybU1FV2x2Ym1wCiAgICB1bE9SbHg3ZVViRCsya09udjBDQUtlRW5VY1pCTVpjWXl5Q044WGdnRS9KeTFnU2V2Zk14TUZISHVyMTZBRWZjCiAgICBJV0RPYnZyVC9vVzc1d0RPZ1BxenBVSUhicDlaVHIrNDlhNnZ5MGJ0OVY0L1UyMHBlM2RveFV1RDJaZnVCaWs4CiAgICBxUFNSQVNac3JLV1JQQkhWZ01rdDMrUGVuN3VSZ2ZXSG5SWW5QOERJSnFrQkhzbXFKTTZYNmJXZ3Y5SkhqUUdBCiAgICB5U3hXUnhiVUsyWWxHQklHUHgxdWp6dWhjVDZJYzdMQ1ZhS1RJUjVFYjVaWm95amFhaDVJL3c0cGVYMVhDaUJOCiAgICBFd292a25ybFRmWkxUZE5IdFBVRFZpVnNjaGtzdU1oRkNDRkEvdz09CiAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-client-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtY2xpZW50CiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCnR5cGU6IFNlY3JldFR5cGVUTFMKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSUWVrTkRRV2xsWjBGM1NVSkJaMGxKU0dWdVlWUTJVamhqUTBsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZExha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTVVhkRloxbEVWbEZSUkVWM2RHeGtSMDVyVEZoT2NGb3lOV3hqYWtGbFJuY3dlRTlVUlhsTlJHdDRUVVJWTVFwT1ZHeGhSbmN3ZVU5VVJYbE5SRmw0VFVSVk1rMUVRbUZOUWpSNFJGUkJURUpuVGxaQ1FYTlVRa2RXTUZreVVYaEVWRUZNUW1kT1ZrSkJUVlJDUjFZd0Nsa3lVWGRuWjBWcFRVRXdSME5UY1VkVFNXSXpSRkZGUWtGUlZVRkJORWxDUkhkQmQyZG5SVXRCYjBsQ1FWRkROa1JsTmtSR1ZETlNWVWszZEdGaFYwOEtabnBKWkVGVFRGVnhaM05rVUZScllqSktUWEJMWTJsSlZHeHRUWFpJYzA5WlVFbHdkVlZDU1N0d1VITm9OVzV6VDFKUGJFOHhaeXR1VjFGYU1IaGpWd3BDWW5SUkwzSmhWSHBQVGxNck9EZHJhbTVuTjBocldXaHlTMVZVVm1sSGVXcFdNVmRRVTFkTVkyOXZOak5oVDNaMVFqSlFTR3RSV20xR1JGZHBXRkowQ205b1RETkJRMjFVUm1aV1JGUnVVM1V6YmpkYWFWWkZZV0ZOYkhjNVRXVk5lblZCVUdscVNXOXlNR0oxWlZWU2F6aGpRbTFXVmk5WGMwdzNXa292TUZNS05XeG5aREpHY0ZSdWJsRlBiR3BaU25GWFVESnZXRTB5YzNwcGJHMTFXRGxJYW5obWMydG5iSFZSWlRZd1FXbEdVekYyU0ZCMVJFdDVSVGN2VUdONFl3cEphalpOUWtFNGJWUnRSbFpYWlU1emIwSmxNRFF4UWsxaldHZG9WRkpUTUhSSloweFFjV0ZYUlhoMmFIaDVPREUzTjBaR2NtUXZSRVp5VW5OVFZHcENDbXByV0ZaQlowMUNRVUZIYW1SVVFucE5RVFJIUVRGVlpFUjNSVUl2ZDFGRlFYZEpSa2xFUVZSQ1owNVdTRk5WUlVSRVFVdENaMmR5UW1kRlJrSlJZMFFLUVdwQlRVSm5UbFpJVWsxQ1FXWTRSVUZxUVVGTlFqQkhRVEZWWkVSblVWZENRbEozVkRadFlYQk5Wa0pCV1M5TlYwc3dXa1F4ZERoSVpGZFNVMVJCWmdwQ1owNVdTRk5OUlVkRVFWZG5RbEozVkRadFlYQk5Wa0pCV1M5TlYwc3dXa1F4ZERoSVpGZFNVMVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJjMFpCUVU5RENrRlJSVUZDYWtGc1JHTmFaVWxpYTJsQlNtcGFTWGxOVm1SblVWQnhLMlpZY21vcmMzQTJZMlU1UlM4eGFHSktTV2xQTDBkdFpERlJlRUkwTDJObFNFNEtVVFZ0YmpSMWJrOXZWemxOUW5vMkwzWk9hVVU1YUhSU2FXRlNMekpRWms1MWNXcEhiMGw0ZEV4dlZUWndTV0Z5VFhCYWNXOHlUbTF5VUdoQ2FtMDJTd3BYUmtSaVZVa3dNbkJFYVVSc09WVmpiemhGV0doblVHUjRUMm8yTkVoSFpIWkpRVGxTYVc5cmVDOVNUMVJ5Y2tsWlFWZG1RMGN4VERNckwwRkZaRGxyQ2xwalExQmxiSEp0V0dacFNteGxWSEJwUW1GME0zUldZbFpGYWpaTFRqbHhRVmhLWW5WTVNWZEdibGxYWmxCbWFXRXZTMDFDY1hBeVMxRnllbEUxTUVvS2FFMWpWSFZwUVZOMFltOHlPSEpCVFV4UU5rMVJUVFpLZUN0YVdteENjMHh6V0ZOS2JUTXdTWFYzUlRWeVUxQm5jV1J2VGpGblUzUjJiQ3RzTVRKWlRBcFFUVTE2Y1VVMmJFNUVVM0ZhYkZjM2RYZE9lVU54UlU4eVVUMDlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICB0bHMua2V5OiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZjRUZKUWtGQlMwTkJVVVZCZFdjemRXZDRWVGt3VmtOUE4xZHRiR3B1T0hsSVVVVnBNVXR2VEVoVU1EVkhPV2xVUzFOdVNXbEZOVnBxVEhnM0NrUnRSSGxMWW14QlUxQnhWRGRKWlZvM1JHdFVjRlIwV1ZCd01XdEhaRTFZUm1kWE4xVlFOakpyT0hwcVZYWjJUelZKTlRSUGVEVkhTV0Y1YkVVeFdXZ0tjMjh4WkZacU1HeHBNMHRMVDNReWFuSTNaMlJxZURWRlIxcG9VVEZ2YkRCaVlVbFRPWGRCY0d0NFdERlJNRFV3Y25RMUt6SlpiRkpIYldwS1kxQlVTQXBxVFRkblJEUnZlVXRMT1VjM2JteEZXbEJJUVZwc1ZtWXhja01yTWxObU9VVjFXbGxJWkdoaFZUVTFNRVJ3V1RKRFlXeHFPWEZHZWs1eVRUUndXbkpzQ2k5U05EaFlOMHBKU21KclNIVjBRVWxvVlhSaWVIbzNaM2x6YUU4dmVqTk5XRU5KSzJwQlVWQkthelZvVmxadWFtSkxRVmgwVDA1UlZFaEdORWxWTUZVS2RFeFRTVU42Tm0xc2FFMWlOR05qZGs1bEszaFNZVE5tZDNoaE1HSkZhelIzV1RWR01WRkpSRUZSUVVKQmIwbENRVVE0Vm1KRVMySTJRM0p3WjNCNWVRb3ZiMUo2VldveVRsaG5Oek5ZVHpsalF6bHZTMDA1VGpSTVJuTjZTRm92WmxwSFdEWnlkMFpCYnpkQ1lUZG1OemM1TUN0dFFuRm5NbXd2VVdKRU5EZEhDa05SVkZwcGNYRnhkM0ZOV1dwR1pHUnpPR1pDUjNKclNYbGpVM1pOWjFZNVdtTXlVbkYyTUV4dVNXaE5iazUyWVhaS05XVTRaamRPZURBNVlWZHpXbm9LVFhKMlpHZFZjVzlxYmtGc2RVNVNTMkpNZGtORGQyRmtWRnBsUkV4bk9EUlBlV3d3VWpVM1UybHliMXBIVDJOYU0ybFVSRk5CSzBKbE1FUjZVbFkwWndwSVQyVkxiMHR5T0ZwdGJ6TlRiRlpNY3pFelozUkRjUzh4Y0RsNmJ6aFdjRUpLU0Vab2NrVjFUMVZwTVU0d1ZXRjNiRllyVFhSVFpVZFdjRUpHZFRKYUNtcFNLMDB2ZEhod1RuUkljVzl1UzBaSVptWm9ibTlTTUV0VWFrRmxOVWw2TkROb1drTkRkR1p1TjBGWUx6TldObXRLSzBWbGJrNTJWRWhzZURkTmFtMEtiVTVCTVZOWU1FTm5XVVZCTVRCV1pXZGxhR0Z6Y2xKSmFtSlhka2xPUlU5bUsweDJUMmhXUkRoblpXTmlNMVI2VUU0MU0zbHFNMWRuWjJ4UGNHcEdhZ3BzYTI0d1lYZHlNa296TjBoTFV6azVXR3h0WjA0MFNVSlJka1ZOYWtoRlowWkhOVmQzYm05b0wxazVkMUpZZFRCSkswTnBkbGtyVDJwWlVXUkhSSE50Q2t0eU0yOUVia1YwWjBWM2RFeEtWa2RyTTJWYWJsaHRlWEVyVUdkdFl6a3hkbFJOWm5Zd1YwSkhka3BaWldVNVdFOUJiemxKV0hORFoxbEZRVE5WUmpJS1IyZzNLMWsyZWxOR1R6TnVia05STm1WSFZYaElZbmRqYWpSYVlUVk1VM1pDVG14SFVUVTBVelYyTmpaaWMzcDRSbXRqY1dKTWFVVmtORzlwTVhGUllncHlPVUpEY0dScVoyUXJNMVF6ZGt3M2EyVkxTSGt4VG5kUlJrNTZiRXhYZFdWRlIwRmtORXg2VGtwSlR6aDVjMDB5TVVKRlJtOU5jbUZGWjJsNWFGUnlDbVZFTUVWNWJYWmhhV0YxWmxwUk5tVndPSHBGYTBSUU5XVjFSVUppSzNjMk9GaGpTM3BQT0VObldVVkJkMHR0U0VGalJWRnRNblZoYlRadFJsTldkVklLU0VsbVowUjRNMFpLTjBsRlNXZFRURkpYYW1Rd1VsVjZSRVZMUlV3eE1UUm5ZVTVEY1hsTGRWWXpObmhvU0hwTFQxVXdRbWhYZUVjNFRVTklkVXBJZFFwWmFIRXlZakoxWWxSRVJ6WkROVmhDUkZoTldXTTBjM1I2UWpNeldrSTFZamxHYW5WbVV6VjRlVXRrYTNKeloxTXlRbmh6VlZoSUwzQk1UbGcyY0VOM0NrVldjbGREVUhWT2NIRTFTek5UWVVZMmRGQlFSR3N3UTJkWlFtWjRXVmx3Y1VkRVZrcEhiVXhTWVN0TWJIVk1ORmRzVkRSWFoxUkRNalZXWTJsb2JEUUtURGxUUzFWR1NTdFRkVlJKVFZVemNVcHpVRzFoTjJoeVVtY3ZkV1ZRY2tSRU5VeEtNWGxpVTNkekswUkpaM0JxUXpOMFkwNDNTRkJLYkVKU1puQk5Wd295YzA5Uk9UZ3pkVmswY1RGR01URndWVlZWYm5WWUswRnNSR28yTkVST1RYbEtlbUZSWmxaSGQyeE5jMjE2WkhoNWRVVkxlVzVUYWtNclNtcFpRVE5xQ213elVFWlpVVXRDWjFGRGVFdHNhRVpNU0RCRGMyRnZlRzVNTDBaVVEyTldVRWRYT0hsUU56Y3JiSFZDY21zNFVFRjRhbHAzUkhWU2REUlpWSEJLZHpnS2RtUm9WR1EwU0dSbFIwOHlaU3Q0WlhkT2F6aHVOemswUmtzclJFdGxiREEwTWt0TVNtZHRVbk5PVFZJeVJqTTFhV2xMY3pjMk1rUkdUVEZSTTFoa1VRcHVNemxyUW1kcVZTdEhjMkZVWjBSRkwzaFZNelphYzBKS1ExTXhOMjVNY1VaWmFFVlVSelJhU1ZCSFFuSmhSRkpCV0RScGRWRTlQUW90TFMwdExVVk9SQ0JTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFvPQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-host-service-endpoints.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogRW5kcG9pbnRzCm1ldGFkYXRhOgogIG5hbWU6IGhvc3QtZXRjZAogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWV0Y2QKICBhbm5vdGF0aW9uczoKICAgIGFscGhhLmluc3RhbGxlci5vcGVuc2hpZnQuaW8vZG5zLXN1ZmZpeDogY2x1c3Rlci0zNDNmLnNhbmRib3gxNjYzLm9wZW50bGMuY29tCnN1YnNldHM6Ci0gYWRkcmVzc2VzOgogIC0gaXA6IDE5Mi4wLjIuMQogICAgaG9zdG5hbWU6IGV0Y2QtMAogIC0gaXA6IDE5Mi4wLjIuMgogICAgaG9zdG5hbWU6IGV0Y2QtMQogIC0gaXA6IDE5Mi4wLjIuMwogICAgaG9zdG5hbWU6IGV0Y2QtMgogIHBvcnRzOgogIC0gbmFtZTogZXRjZAogICAgcG9ydDogMjM3OQogICAgcHJvdG9jb2w6IFRDUAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-host-service.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBob3N0LWV0Y2QKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1ldGNkCiAgbGFiZWxzOgogICAgIyB0aGlzIGxhYmVsIGlzIHVzZWQgdG8gaW5kaWNhdGUgdGhhdCBpdCBzaG91bGQgYmUgc2NyYXBlZCBieSBwcm9tZXRoZXVzCiAgICBrOHMtYXBwOiBldGNkCnNwZWM6CiAgY2x1c3RlcklQOiBOb25lCiAgcG9ydHM6CiAgLSBuYW1lOiBldGNkCiAgICBwb3J0OiAyMzc5CiAgICBwcm90b2NvbDogVENQCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-metric-client-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtbWV0cmljLWNsaWVudAogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNvbmZpZwp0eXBlOiBTZWNyZXRUeXBlVExTCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUldSRU5EUVdwNVowRjNTVUpCWjBsSlVsaExVbGh4YUVweGNWVjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGROVkVWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxU2MzZEhVVmxFVmxGUlJFVjRTbXhrUjA1clRGY3hiR1JJU25CWmVURjZZVmRrZFZwWVNYZElhR05PVFZScmVBcE5ha0UxVFZSQk1VNXFRWGRYYUdOT1RXcHJlRTFxUVRKTlZFRXhUbXBCZDFkcVFYTk5VbEYzUldkWlJGWlJVVXhGZDNSc1pFZE9hMHhYTVd4a1NFcHdDbGw2UlZWTlFrbEhRVEZWUlVGNFRVeGFXRkpxV2tNeGRGcFlVbmxoVjAxM1oyZEZhVTFCTUVkRFUzRkhVMGxpTTBSUlJVSkJVVlZCUVRSSlFrUjNRWGNLWjJkRlMwRnZTVUpCVVVOc2RXRlNja0l2ZW5aUldqbFBkMmxxUVhJMFp6RnZSMEpNVmt4RWFreE5PRUZMZURCellYcHBaV0YyTkdRMU4xUlBaVWhaVHdwWlVUTldMeloxVm1samRXcEdkV3RXZDJoQlYxbHVOVGgxTUV0WlVuWmpObU4yVVZZclFTc3JhWEZFZVd4aFRHVldia3d4VW0xeGR6RjZhR05GV0RSTENuVnNhRnB5VG0xV1VVWnJObU5tV0dzeFNuaGhhamxqV0dFMmFWaE9UWEZTWTB4NU4xcHVXbkp2ZGpVekwwZDBZamRtUmtVeVVFRlJiR2hhVG01WFdGY0tRbmd2T1hSSFkxVkhUVFpUT1daa2VHODVPWFZqUXpaVlUzZHJSSFpCU1U5cWVFZGFPSFIwV1dkRFVrcHJiMDVRWlUxaFFVNTFZM0ZOYVc5dVltVnpPQXBTUjFrNU5GZE9UVVpuV1RKVE4yMTRibkZ6UjJ3dlMyWnNkek5NTUdWVk5tMURkazVWWVdabkx6WlRialZ3UlVnelNpOWlVVlZ5VUc1SmR6WnpNWFphQ210bFZ6ZENUR1JsVEdJdlVXOXRNVzFtZHpJNGFGSlVSMjFvV1dOV1ltOXlRV2ROUWtGQlIycGtWRUo2VFVFMFIwRXhWV1JFZDBWQ0wzZFJSVUYzU1VZS2IwUkJWRUpuVGxaSVUxVkZSRVJCUzBKblozSkNaMFZHUWxGalJFRnFRVTFDWjA1V1NGSk5Ra0ZtT0VWQmFrRkJUVUl3UjBFeFZXUkVaMUZYUWtKU2FncDVRalZQWjNvNVZXdzJiMDAySzNsNE9HOVFTRkZ2YkVWMmFrRm1RbWRPVmtoVFRVVkhSRUZYWjBKU2FubENOVTluZWpsVmJEWnZUVFlyZVhnNGIxQklDbEZ2YkVWMmFrRk9RbWRyY1docmFVYzVkekJDUVZGelJrRkJUME5CVVVWQmVHWTNhemxpY2s1NVEwVkhhVXBITm1kVVF6QlVjRGcyZVVkck4yY3pZVmNLVEdsclkyRmpkWE40Vnk4cmFtcE5UbU5LY25NdmJYUlNTbmQ0U1ZCUFkyZHdPSFJhUmtkSVdsWkRSbkZYTVVkVVoydHJMeXQwUWpGeGFsTnRhMHhRWlFwVVVrOHdUa0pKV25KWk9VWkZiVFl4Y1RoaFQyRTRhMlpDUTFaWVNqTk9XWGhGVTI5QlJHdE1UVUZFY1hkSE5rOTRTMFZCTVZST2RWRlRVMWQ2T0hkTENsbHBVRlpyV21OSU5WRkdhRk1yV0VKSWEySnVlRGsxV2xwTUwyeDNLemhRWlhKV1ZrVklaVE5sUVVkMGMxQnZRbmRpT1hRelFXaGlSbmRaV1ZKQk9EWUtTbllyYld4bU9YUlRhRlpDZUV4NmFIRnNOMDEwTTFoeWJVcGFVV3hITVd4dFNETkhNVk51U1VZNU1GVnhjSFZPY1ZKa09VSTFWMjkyUjBGa00zRm1hd3BITmpKcFQzQnRjUzlZYWpOR1ZVRlRPVkUwVmpnM1dXeDNUMUpsVFUxNE1rSkpTVTlPVEVjM05YcERTMWR1ZWxKRGIycEtlVUU5UFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIyZEpRa0ZCUzBOQlVVVkJjR0p0YTJGM1pqZzNNRWRtVkhOSmIzZExLMGxPWVVKblV6RlRkelI1ZWxCQlEzTmtURWR6Tkc1dGNpdElaV1V3Q25wdWFESkViVVZPTVdZcmNteFpia3h2ZUdKd1JtTkpVVVp0U2l0bVRIUkRiVVZpTTA5dVREQkdabWRRZG05eFp6aHdWMmt6YkZwNU9WVmFjWE5PWXpRS1dFSkdLME55Y0ZsWFlYcGFiRlZDV2s5dVNERTFUbE5qVjI4dldFWXlkVzlzZWxSTGExaERPSFV5V2pKaE5rd3JaQzk0Y2xjck0zaFNUbXAzUlVwWlZ3cFVXakZzTVdkalppOWlVbTVHUW1wUGEzWllNMk5oVUdaaWJrRjFiRVZ6U2tFM2QwTkViemhTYldaTVlsZEpRV3RUV2t0RVZETnFSMmRFWW01TGFrbHhDa295TTNKUVJWSnRVR1ZHYWxSQ1dVZE9hM1UxYzFvMmNrSndabmx1TldOT2VUbEliRTl3WjNKNlZrZHVORkFyYTNBcllWSkNPWGxtTWpCR1MzbzFlVTBLVDNKT1lqSmFTR3gxZDFNeldHa3lMekJMU25SYWJqaE9ka2xWVlhod2IxZElSbGMyUzNkSlJFRlJRVUpCYjBsQ1FVRnpUelJTWVROUFRIaHhVRFIzVFFwNmNGWlZORko2WVRjM1NETkhOM0E0TkdVNFlqaFdNVzFhYVdaRU9HVk1hVGxEUTFkNmVVaFZabWQ2WVdVMFQwWTFNREpvYlV4dU16aG5WR05YTlRWT0NrUklkVWQxVEZwM2RIcE1SVVUyUkdWT1ZFVmhjRkI0Tmk5cU5qVnFVMHg0Y1ZoUlZGRnlja3RvYkhsMFpWQk9TbXRQY1dsalozSnlNazlpSzBaQ1kyVUtLM1ZtYTBGUFVrWm9iMHB0Y1hRMGVIbFNUVTlvT0dSb2EwTnFUWGxYZG5JeE1WZzJWelUwZW1aa01VVlVWRFpVTUZOaVNqRlNSMUYwWmtoVFEyZGlTUW93YmsxUWRFMVZUMmg2U1VWc1NXaERRblZsUjNNcloyTmpRblpXUkVKSmJXTnNaM2MxVm5wSlF6UkpNR2RGYTI0eGVHbFlNVnBNV1hKRk4zY3JSMG9yQ21sdmRVUmhaMkZ6VWtOeFRVUmtSREoyU1doSVlsbHpOMlJMWmlzMGJERXpkbEp3U0dFNGQycFRTVkIzUnk5WlYzcHhZV3BXTkVOT2RFMWFkVmM0Wlc0S2EzbGhRakpvUlVObldVVkJNVE5vZVdwMFZEVkJVR1pLYUU5NGFXOUdWR3c1VVU1TlJXcEVjazQxWVV0UWRWUlFhRWw2VkdwNWJVeFVkQzh6WldOTmNncDFPVVZXYzFkcGVIRjRWMFpVVlRoRlVVZFlRbXQzVUZVNFFuQjBRVzV4YkhsUE5FZFlXbEZYU21vNFZEaGlTSFpZTDBVMFFUVnhSazg0YUZwbVdHUnBDbW8wWVZJNFVVUk9PRXhLVFVwMmRqZFhNelpRVjJwNVNqZHpXRE5tU3prMEswMTZUM2t4TlhOSFRsWXpTU3RNTlRGa1JGSjFWRTFEWjFsRlFYaFBXRThLYzBOeU5UUjZiVGN6TDNkUVRESjZhVFZuTWpCR2QzaEpSRk5YVmxKd1NXRnFNREJ2ZGtwNVZTOUliRGR1VFdOa2FUWTBWRmhNWVZWREswMDBaa1JyVFFwb1FXbE9XbmQ2WWxwUGJYTnFTVXRGYVdSUmFFc3ZVbk5UZG1GbU9UVm1WMnRZVmxReFlUSkdaRUZ3V0c0dldrSlpUa3R1VjNBMGJUTnJTbFpNTUdVeENqUlhhMjlTYm5aSFlUQlFkSEp1WTAxRk9IUjZka0ZsYlRka05tUTBXWG95TlhvdlQzRjVhME5uV1VGc1REQlpiRE5DT0RCNVdUVm1aME5RZEVremJXb0tPVkJQTVRFdlpHWXlibm94UzJGMVpWcHRaRVZPTld0M0wxaHVTalkyUzNGblVWUk1XSGhRTmxGSVlVZDRka2x0TkhWcGNrcEhaMnhJTkhCalpWTnZVQXBMVUZNd1VscEJheTlhU0VacWFqSlFVWGxQTVdrek9HVjFRVFp3YkcxaVRpdG9NVXBwUTJkRFRpdE1iMll5WmpkbVJGaHNSSEp0U0VkWFkwTm1ORE5UQ2pob1ZtMUNNU3RGVldGTFJEaFFTRWx6YjJKbEwxRkxRbWRGVFhWVFpsSjJOVmN3ZWsxTVp5dDZOSFZXT0cxRlpWRmthM1pXY0VsMGVGbzBZbXRpV21RS1ZrVXpkV1Y1VFdRM1EwSldReXMyZUhsWFpIbzBSbGRwUWtrM1YwSkZRVEJxZEV0bVdESm5lVVp4Tm0xb1kxSnNVR0ZCTm5WSmVHNVZOMDUwSzJ0alRncExhbkZhUW5oVVRuaHdTVTExYzJadVpVUlRRME0yT0VGSlVVdE9la1JCU2pacVZVdFlSM2RUT1VaRU0zazBXV2htS3pacVEyTkVWbTFVWW5oSGRteFRDa2Q0YW5CQmIwZEJTM0JhWWpKeFlWZDVkME55WjIwd2RYTkJkWFpxUlhSdWFVTnZhblZDVnpSTFowMDRhVXh6VlVwRVN5OVJhSFJLWW05dE9WVTJPWGdLT0dNME0yaFVja3BUVVVVeVF5dERSVUZXYm1nMFZESmtlREZMTVRKcFJEa3ZaMHMxTlZsa2NYWkVNRlZsUTAxQmVIWlpSMFp2UVhwd2FUTkdhbTR3VXdwWEt6RkVTVWQzZWtKeU0xSkdhRmxSVWtaWk1DdENjREZUVTI5RU9HNTRMMU4xTUU1eVRXNWhObFVyUVhKWFkxWk9SbEU5Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-metric-serving-ca-configmap.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtbWV0cmljLXNlcnZpbmctY2EKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKZGF0YToKICBjYS1idW5kbGUuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURKakNDQWc2Z0F3SUJBZ0lJQVM5NUNudnJQbGN3RFFZSktvWklodmNOQVFFTEJRQXdNVEVTTUJBR0ExVUUKICAgIEN4TUpiM0JsYm5Ob2FXWjBNUnN3R1FZRFZRUURFeEpsZEdOa0xXMWxkSEpwWXkxemFXZHVaWEl3SGhjTk1Ua3gKICAgIE1qQTVNVEExTmpBd1doY05Namt4TWpBMk1UQTFOakF3V2pBeE1SSXdFQVlEVlFRTEV3bHZjR1Z1YzJocFpuUXgKICAgIEd6QVpCZ05WQkFNVEVtVjBZMlF0YldWMGNtbGpMWE5wWjI1bGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKICAgIGdnRVBBRENDQVFvQ2dnRUJBTWRZdkVLQjBqT3JsSE1KejllWFlWVENwU2k5bW5mQUtKMTYydmcwZUQzS0pCTXcKICAgIGlnMjFSTzNFYVdMVUl4L2lJU1NLSWwwYU0zNVRreUtPb3FPT1ZzMUNDRTZ0TGx1Z2oydkdOUis4bnBzWGUrN0MKICAgIHBsQUhvU1ZYN0MwaGlIWWovQmhzREhrYWtFclcwYThpZzNIb1Z0WnlTdVBCSnAyTUpSRHdLVTQ1STNxMmxoVnIKICAgIDBWYThuQ05zNmd2WHNsV1FaVVZpcXVjR0ZMQjJOM2ZQdDJuZTFBWVczUHluRUw2NmdxMWtQeWdPRjBoRlJWQkgKICAgIGMxMnlVOTNGeS9ZRnNVTEM2c2NLNjFFYUlwME1NU1I3NUZYVVBvbWlaMkRZZUxIR1dDVDdvVERnWitwMnRiaUsKICAgIGJMcnkyNmo4M1VUZC9lQnVnc0lYQmFYa1ZlZGpuQ3NjZ3A4cEJEc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KICAgIEJBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkdQSUhrNkRQMVNYcWd6cjdMSHkKICAgIGc4ZENpVVMrTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBTTB3ZEo0dy9zUGlOWjE3eU5MU2IxeURTWXpwQjMKICAgIFBYTGFZK05hZUVVNkYrZ3VrcWxHa0VnOW5QcFRXZENWZVp1NERQVVVLK2hFT1pvb0Q1cU0yNndqWjdNVWVVdUUKICAgICt0a01zNi82U1lLUC9QZmN0ekZVbklhaC9RRTVIQlNiNmQ2a1VHaW81aUdWdDV4OUZwejZnV0Zrd0lLbmNoMW4KICAgIDdXUGNvVWJzSmU0QU84Y2xSNHVtYzVudlEydm5vOVFYcVRneVNsNTd1MzhPN1p1M25NdzJ4dXY5d2w2VkZXTk4KICAgIG14eDBrR2tLUEZoNXRzaWFnRU5xTnVjaitHT01HT2RNd09QSFBsS2p2Q21wZEoyOHA2R0k1VURRU2lMKzBFKzkKICAgIFUvcDFNbzlsVHhjY2JkdkhMdkh5Zm4xZTVmamgxRCs4OVVmZVJRbnlyTTIxMmV6elNlaTRnN3pJCiAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-metric-signer-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtbWV0cmljLXNpZ25lcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNvbmZpZwp0eXBlOiBTZWNyZXRUeXBlVExTCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUktha05EUVdjMlowRjNTVUpCWjBsSlFWTTVOVU51ZG5KUWJHTjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGROVkVWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxU2MzZEhVVmxFVmxGUlJFVjRTbXhrUjA1clRGY3hiR1JJU25CWmVURjZZVmRrZFZwWVNYZElhR05PVFZScmVBcE5ha0UxVFZSQk1VNXFRWGRYYUdOT1RXcHJlRTFxUVRKTlZFRXhUbXBCZDFkcVFYaE5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRDa2Q2UVZwQ1owNVdRa0ZOVkVWdFZqQlpNbEYwWWxkV01HTnRiR3BNV0U1d1dqSTFiR05xUTBOQlUwbDNSRkZaU2t0dldrbG9kbU5PUVZGRlFrSlJRVVFLWjJkRlVFRkVRME5CVVc5RFoyZEZRa0ZOWkZsMlJVdENNR3BQY214SVRVcDZPV1ZZV1ZaVVEzQlRhVGx0Ym1aQlMwb3hOakoyWnpCbFJETkxTa0pOZHdwcFp6SXhVazh6UldGWFRGVkplQzlwU1ZOVFMwbHNNR0ZOTXpWVWEzbExUMjl4VDA5V2N6RkRRMFUyZEV4c2RXZHFNblpIVGxJck9HNXdjMWhsS3pkRENuQnNRVWh2VTFaWU4wTXdhR2xJV1dvdlFtaHpSRWhyWVd0RmNsY3dZVGhwWnpOSWIxWjBXbmxUZFZCQ1NuQXlUVXBTUkhkTFZUUTFTVE54TW14b1ZuSUtNRlpoT0c1RFRuTTJaM1pZYzJ4WFVWcFZWbWx4ZFdOSFJreENNazR6WmxCME1tNWxNVUZaVnpOUWVXNUZURFkyWjNFeGExQjVaMDlHTUdoR1VsWkNTQXBqTVRKNVZUa3pSbmt2V1VaelZVeERObk5qU3pZeFJXRkpjREJOVFZOU056VkdXRlZRYjIxcFdqSkVXV1ZNU0VkWFExUTNiMVJFWjFvcmNESjBZbWxMQ21KTWNua3lObW80TTFWVVpDOWxRblZuYzBsWVFtRllhMVpsWkdwdVEzTmpaM0E0Y0VKRWMwTkJkMFZCUVdGT1EwMUZRWGRFWjFsRVZsSXdVRUZSU0M4S1FrRlJSRUZuUzJ0TlFUaEhRVEZWWkVWM1JVSXZkMUZHVFVGTlFrRm1PSGRJVVZsRVZsSXdUMEpDV1VWR1IxQkpTR3MyUkZBeFUxaHhaM3B5TjB4SWVRcG5PR1JEYVZWVEswMUJNRWREVTNGSFUwbGlNMFJSUlVKRGQxVkJRVFJKUWtGUlFVMHdkMlJLTkhjdmMxQnBUbG94TjNsT1RGTmlNWGxFVTFsNmNFSXpDbEJZVEdGWkswNWhaVVZWTmtZclozVnJjV3hIYTBWbk9XNVFjRlJYWkVOV1pWcDFORVJRVlZWTEsyaEZUMXB2YjBRMWNVMHlObmRxV2pkTlZXVlZkVVVLSzNSclRYTTJMelpUV1V0UUwxQm1ZM1I2UmxWdVNXRm9MMUZGTlVoQ1UySTJaRFpyVlVkcGJ6VnBSMVowTlhnNVJuQjZObWRYUm10M1NVdHVZMmd4YmdvM1YxQmpiMVZpYzBwbE5FRlBPR05zVWpSMWJXTTFiblpSTW5adWJ6bFJXSEZVWjNsVGJEVTNkVE00VHpkYWRUTnVUWGN5ZUhWMk9YZHNObFpHVjA1T0NtMTRlREJyUjJ0TFVFWm9OWFJ6YVdGblJVNXhUblZqYWl0SFQwMUhUMlJOZDA5UVNGQnNTMnAyUTIxd1pFb3lPSEEyUjBrMVZVUlJVMmxNS3pCRkt6a0tWUzl3TVUxdk9XeFVlR05qWW1SMlNFeDJTSGxtYmpGbE5XWnFhREZFS3pnNVZXWmxVbEZ1ZVhKTk1qRXlaWHA2VTJWcE5HYzNla2tLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgdGxzLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjJkSlFrRkJTME5CVVVWQmVERnBPRkZ2U0ZOTk5uVlZZM2R1VURFMVpHaFdUVXRzUzB3eVlXUTRRVzl1V0hKaEswUlNORkJqYjJ0RmVrTkxDa1JpVmtVM1kxSndXWFJSYWtnclNXaEtTVzlwV0ZKdmVtWnNUMVJKYnpacGJ6UTFWM3BWU1VsVWNUQjFWelpEVUdFNFdURklOM2xsYlhoa056ZHpTMjBLVlVGbGFFcFdabk5NVTBkSlpHbFFPRWRIZDAxbFVuRlJVM1JpVW5KNVMwUmpaV2hYTVc1S1N6UTRSVzF1V1hkc1JWQkJjRlJxYTJwbGNtRlhSbGQyVWdwV2NubGpTVEo2Y1VNNVpYbFdXa0pzVWxkTGNUVjNXVlZ6U0ZrelpEZ3JNMkZrTjFWQ2FHSmpMMHRqVVhaeWNVTnlWMUV2UzBFMFdGTkZWa1pWUldSNkNsaGlTbFF6WTFoTU9XZFhlRkZ6VEhGNGQzSnlWVkp2YVc1UmQzaEtTSFpyVm1SUksybGhTbTVaVG1nMGMyTmFXVXBRZFdoTlQwSnVObTVoTVhWSmNITUtkWFpNWW5GUWVtUlNUak01TkVjMlEzZG9ZMFp3WlZKV05USlBZMHQ0ZVVOdWVXdEZUM2RKUkVGUlFVSkJiMGxDUVVVdmJ6SjZZVkl3WkVKVGNFZFNhd281TkUxR2RFMWxSV0Y1Tld0eGRXNDRRbTkyZVU1d2NYVmtaRVJZUjJoVWVreFVVVWhwVVZWRE5tWm1jVGM1VjFaRlVrbFVjVmRxUnpKM1RqRjJlRXB2Q2s5UWRqRlZRV2hvZDNaREt6ZFZiR1p0U0RWellYUnJOVUpDT1VwcU5qSk1TelUwUkVsUE4xZFRkRGxuYUU1S1R6VkllSEIxTm5CRlNYSnNUbGRoY1hBS00wTlZjVXhNTUhvdldqbEZlWGhVTW0wNWEzQllTRll4TlVOdlNrWjBla2MxTUZncmJUSmFWRWxSZFUxU2IySlBSWEJCZUhwbWVHdDRkWGt2ZHpNeU9BcDFhRFpQVkhKRlNWSk1lbXBUVUVjMU1GSmlibHBUY0ZVMVkzRXZUR0pYY1RCVk5UZERUbWt3WlU1MlFWSm5NRWRUTmpkT2JVUnBWbUZuZW5CTFJFUk5DbTUwYzFjMU4zbG5aM2hMVVVaM1lYRTJSeXMzZUc1WmR6aDVUM0VyTkZneksxcDZZbk5VTm0xbk9WQXJhbGh3V2tkTFdVNUpNSGRoYlM5d00zQTNOR01LY1ZaeVJsaElhME5uV1VWQkwxWlhMMHRMUld0dlVpdFBibXhvZUd0VU9HTkZUblY1ZFVsaFlWQXpjVkZTWkZwdWRXdFFSbTlxZUhoWmNYSkVMMHd2UXdwdE5GQlBiVzVOUTJnNGNWTlhURFF2ZDJ4dFVXVTRhbXBhWWt0WmNYaEtZbTVSTVZWc01rdERjbk5GVUZCS1IwcHpNMmhQT1VndlpXZHpUVkZpVFhCS0NsaFJiRk5CUlU5T1pXRTFLMFZZVjJwSVQzaDBjelpQTkdKV1dUWnBWM0F2Ym5NclZIWktXR2h6YjNWc1RtaHhaemxtWnpOVFkyTkRaMWxGUVhsWVIxZ0tOWGMxYWsxNlVEZFpWRTVUYm5FNVZURlBZaTkzTURkNFJtdExaM0k0SzBrNGEzQnJhMUZKY1ZadVZsSmlLM0ZwVUZoclZHWnVhbU54ZUc1VWN6RkJVUXBXWXpOT2FGWTVRV1l4WjBKVlltUndWVVpwUlZjek16TnVXamhZYlVwb2JFcHhPV1phVDNOVWRUZDVkMnB0Y0RCM1YxUXhiR1pTTkRneVUxUmFURGhvQ2pWdVozQkpTMFlyY2pSdk1VRTVUSGRxUVc4M2RGVkZZWFpHVlM5YU4zVnJZblZPVVd0bE1FTm5XVUl5WVRVeU1qbFdVekZEU2xwWVUwbHhWakZqVm1RS01FRlZSVWx6T1RWMWRWbDZOM2g0TDNkdGVHaEJVbGxVYUVSWGJrMVdRbUk1T0c5a1FXOVFPVk1yUlV4SlMzVllVWFI1TmsxR1lYb3hSRGwyVVVZMldRb3hTVVpzV0c5UmRVRnJjMGxEYUZGMlZUVTJPSGhuVlZOYVVFdEtiVU50YUVaMGJFSkVSa3hYZGxreGNYaGxNbWRsU21oNlREWllibGhxV25kM09YRjVDazUxUVdSbFNXRlFUM0F6V1RRMmRUUk1kbHBTVVhkTFFtZEZkaTlxUWxORGVrSkJhMDh5UjBoalJrMXVlVXhTZERGbE5VVlhVbHBTTW5KbFdtSTBkMmdLV0hWSFMxWkthVGQxUW1GdFEyTkdlR0pXV2xsdFRVRkJhRmR5ZGl0TmJUSldRMUpQVGtaSlYzcExRMk4wY1VjeVZUTkZSa1JEWTNWUU1FOHhjM1YxZFFwWVEyOUNkV3BqYjNvNU9XRTRSMDlMUTBaRmFtODBTVWd6YzJWNWFVVkxaamhNZHpjd1ZWTXJkWEJQVUhkSGNrVTNXbEJNVmxJdllXUlpjRmxOTkdkWENsRkhOV1JCYjBkQlRTdEJRa3BoTm1ad1ltcE1NbVZXVERoM1RuaGpRVzh4ZEdkUFoySmtRa3RMVjNoMmIzSXdUa2RoTmtjNVprczJOMHBGVEVnNVdVMEtaRFpqU0M5TU1HTmhhSEF6ZUhReWF6ZFFSR2x6U0ZOTEsxVXlaM2RCTXpCRGJqWlhTRzV1Y1V0TFVrRlBWQzlTYVhscmQzWm9kVWRtYkdGNVNIcG5hQXBYZWtSM1dWbFVVMUZwYkd4SFNrd3hiMUptUVU1RFJFcFhLMVZzV0cxb09VNXRibnBRWW5JNVJYWjFXQzgzUW5oRlVrazlDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-namespace.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogIG5hbWU6IG9wZW5zaGlmdC1ldGNkCiAgYW5ub3RhdGlvbnM6CiAgICBvcGVuc2hpZnQuaW8vbm9kZS1zZWxlY3RvcjogIiIKICBsYWJlbHM6CiAgICBvcGVuc2hpZnQuaW8vcnVuLWxldmVsOiAiMSIK",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-service.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBldGNkCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtZXRjZAogIGxhYmVsczoKICAgICMgdGhpcyBsYWJlbCBpcyB1c2VkIHRvIGluZGljYXRlIHRoYXQgaXQgc2hvdWxkIGJlIHNjcmFwZWQgYnkgcHJvbWV0aGV1cwogICAgazhzLWFwcDogZXRjZApzcGVjOgogIHNlbGVjdG9yOgogICAgazhzLWFwcDogZXRjZAogIHBvcnRzOgogIC0gbmFtZTogZXRjZAogICAgcG9ydDogMjM3OQogICAgcHJvdG9jb2w6IFRDUAogIC0gbmFtZTogZXRjZC1tZXRyaWNzCiAgICBwb3J0OiA5OTc5CiAgICBwcm90b2NvbDogVENQCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-serving-ca-configmap.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2Qtc2VydmluZy1jYQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNvbmZpZwpkYXRhOgogIGNhLWJ1bmRsZS5jcnQ6IHwKICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgTUlJREdEQ0NBZ0NnQXdJQkFnSUlJMllCbWt6R3ZrSXdEUVlKS29aSWh2Y05BUUVMQlFBd0tqRVNNQkFHQTFVRQogICAgQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMQogICAgTlRsYUZ3MHlPVEV5TURZeE1EVTFOVGxhTUNveEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVVNQklHQTFVRQogICAgQXhNTFpYUmpaQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDaQogICAgQWJuZHRGL2h5M1IzZ3JLcWxjU1BHMjYzSzgvaElxR3VlRFlQYUlwNW0zQXVtZjBpKzIwNm5GdlVWRHZ0NCtvVQogICAgd0M4TVVmeUY1bWdxaG52Q0xnRTlvUmFiZHNNdmh4UDgwSGhwVVlHYU9iMG9neUdmN1J6eDd3cmNYVjZqajJKMAogICAgTWZRQUgvaWdzM1NmNGdjdm9XWHpMenEydzFKZkhCbUR6NnAzaUhacDFIdkFlS1FZTkxxSThYaXdVUUo3YWV6dAogICAgV1BQcG1nYVZRWTkvL0hNNUFOVVY2T1dHbzlXZW5FYmtNY1lOSmVEa2tYKzVYbldQTzBWdFhEd1dmb2dTWTcxbgogICAgdzBpeUMrRlp2RjRvTVNXb3JKOGIrZklVWEtzUlVpQmI5RzZrcFQxZXNLckZOYUZ3bG94dU9DenFEa0Q1cXlsSAogICAgWXVCQndnRmNna3lBRHI0d2JsT3pBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgogICAgQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSd1Q2bWFwTVZCQVkvTVdLMFpEMXQ4SGRXUlNUQU5CZ2txaGtpRwogICAgOXcwQkFRc0ZBQU9DQVFFQVdoN0RiNldBMmswd2Q5ZTVHZldWdUl4Q041MXpHNlF3VkowVkVyMm1NRVdsdmJtcAogICAgdWxPUmx4N2VVYkQrMmtPbnYwQ0FLZUVuVWNaQk1aY1l5eUNOOFhnZ0UvSnkxZ1NldmZNeE1GSEh1cjE2QUVmYwogICAgSVdET2J2clQvb1c3NXdET2dQcXpwVUlIYnA5WlRyKzQ5YTZ2eTBidDlWNC9VMjBwZTNkb3hVdUQyWmZ1QmlrOAogICAgcVBTUkFTWnNyS1dSUEJIVmdNa3QzK1Blbjd1UmdmV0huUlluUDhESUpxa0JIc21xSk02WDZiV2d2OUpIalFHQQogICAgeVN4V1J4YlVLMllsR0JJR1B4MXVqenVoY1Q2SWM3TENWYUtUSVI1RWI1WlpveWphYWg1SS93NHBlWDFYQ2lCTgogICAgRXdvdmtucmxUZlpMVGROSHRQVURWaVZzY2hrc3VNaEZDQ0ZBL3c9PQogICAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQogICAgCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/etcd-signer-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2Qtc2lnbmVyCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCnR5cGU6IFNlY3JldFR5cGVUTFMKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSSFJFTkRRV2REWjBGM1NVSkJaMGxKU1RKWlFtMXJla2QyYTBsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZExha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTVVhkRloxbEVWbEZSUkVWM2RHeGtSMDVyVEZoT2NGb3lOV3hqYWtGbFJuY3dlRTlVUlhsTlJHdDRUVVJWTVFwT1ZHeGhSbmN3ZVU5VVJYbE5SRmw0VFVSVk1VNVViR0ZOUTI5NFJXcEJVVUpuVGxaQ1FYTlVRMWM1ZDFwWE5YcGhSMnh0WkVSRlZVMUNTVWRCTVZWRkNrRjRUVXhhV0ZKcVdrTXhlbUZYWkhWYVdFbDNaMmRGYVUxQk1FZERVM0ZIVTBsaU0wUlJSVUpCVVZWQlFUUkpRa1IzUVhkblowVkxRVzlKUWtGUlEya0tRV0p1WkhSR0wyaDVNMUl6WjNKTGNXeGpVMUJITWpZelN6Z3ZhRWx4UjNWbFJGbFFZVWx3TlcwelFYVnRaakJwS3pJd05tNUdkbFZXUkhaME5DdHZWUXAzUXpoTlZXWjVSalZ0WjNGb2JuWkRUR2RGT1c5U1lXSmtjMDEyYUhoUU9EQklhSEJWV1VkaFQySXdiMmQ1UjJZM1VucDROM2R5WTFoV05tcHFNa293Q2sxbVVVRklMMmxuY3pOVFpqUm5ZM1p2VjFoNlRIcHhNbmN4U21aSVFtMUVlalp3TTJsSVduQXhTSFpCWlV0UldVNU1jVWs0V0dsM1ZWRktOMkZsZW5RS1YxQlFjRzFuWVZaUldUa3ZMMGhOTlVGT1ZWWTJUMWRIYnpsWFpXNUZZbXROWTFsT1NtVkVhMnRZS3pWWWJsZFFUekJXZEZoRWQxZG1iMmRUV1RjeGJncDNNR2w1UXl0R1duWkdORzlOVTFkdmNrbzRZaXRtU1ZWWVMzTlNWV2xDWWpsSE5tdHdWREZsYzB0eVJrNWhSbmRzYjNoMVQwTjZjVVJyUkRWeGVXeElDbGwxUWtKM1owWmpaMnQ1UVVSeU5IZGliRTk2UVdkTlFrRkJSMnBSYWtKQlRVRTBSMEV4VldSRWQwVkNMM2RSUlVGM1NVTndSRUZRUW1kT1ZraFNUVUlLUVdZNFJVSlVRVVJCVVVndlRVSXdSMEV4VldSRVoxRlhRa0pTZDFRMmJXRndUVlpDUVZrdlRWZExNRnBFTVhRNFNHUlhVbE5VUVU1Q1oydHhhR3RwUndvNWR6QkNRVkZ6UmtGQlQwTkJVVVZCVjJnM1JHSTJWMEV5YXpCM1pEbGxOVWRtVjFaMVNYaERUalV4ZWtjMlVYZFdTakJXUlhJeWJVMUZWMngyWW0xd0NuVnNUMUpzZURkbFZXSkVLekpyVDI1Mk1FTkJTMlZGYmxWaldrSk5XbU5aZVhsRFRqaFlaMmRGTDBwNU1XZFRaWFptVFhoTlJraElkWEl4TmtGRlptTUtTVmRFVDJKMmNsUXZiMWMzTlhkRVQyZFFjWHB3VlVsSVluQTVXbFJ5S3pRNVlUWjJlVEJpZERsV05DOVZNakJ3WlROa2IzaFZkVVF5V21aMVFtbHJPQXB4VUZOU1FWTmFjM0pMVjFKUVFraFdaMDFyZERNclVHVnVOM1ZTWjJaWFNHNVNXVzVRT0VSSlNuRnJRa2h6YlhGS1RUWllObUpYWjNZNVNraHFVVWRCQ25sVGVGZFNlR0pWU3pKWmJFZENTVWRRZURGMWFucDFhR05VTmtsak4weERWbUZMVkVsU05VVmlOVnBhYjNscVlXRm9OVWt2ZHpSd1pWZ3hXRU5wUWs0S1JYZHZkbXR1Y214VVpscE1WR1JPU0hSUVZVUldhVlp6WTJocmMzVk5hRVpEUTBaQkwzYzlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgdGxzLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjNkSlFrRkJTME5CVVVWQmIyZEhOVE5pVW1ZMFkzUXdaRFJMZVhGd1dFVnFlSFIxZEhsMlVEUlRTMmh5Ym1jeVJESnBTMlZhZEhkTWNHNDVDa2wyZEhSUGNIaGlNVVpSTnpkbFVIRkdUVUYyUkVaSU9HaGxXbTlMYjFvM2QyazBRbEJoUlZkdE0ySkVURFJqVkM5T1FqUmhWa2RDYldwdE9VdEpUV2dLYmlzd1l6aGxPRXN6UmpGbGJ6UTVhV1JFU0RCQlFpODBiMHhPTUc0clNVaE1Oa1pzT0hrNE5uUnpUbE5ZZUhkYVp6Z3JjV1EwYURKaFpGSTNkMGhwYXdwSFJGTTJhVkJHTkhOR1JVTmxNbTV6TjFacWVqWmFiMGRzVlVkUVppOTRlazlSUkZaR1pXcHNhSEZRVm01d2VFYzFSRWhIUkZOWVp6VktSaTkxVmpVeENtcDZkRVppVm5jNFJtNDJTVVZ0VHpsYU9FNUpjMmQyYUZkaWVHVkxSRVZzY1V0NVprY3ZibmxHUm5seVJWWkpaMWN2VW5Wd1MxVTVXSEpEY1hoVVYyZ0tZMHBoVFdKcVozTTJaelZCSzJGemNGSXlUR2RSWTBsQ1dFbEtUV2RCTml0TlJ6VlVjM2RKUkVGUlFVSkJiMGxDUVVWR1NWbHpZVlpVWlVodFNUUjFXZ3BNYW1kU1dFRkRlVGxFTVRWMVV6UnRlak5LU0ROTWFpdDZibHBOYW1KemNITkdhblJoYTIxd1FXeFJaMnRZYlN0VmRrTkVkRlJJU1hjdlMwNU5NRXRZQ25GTU1Vb3pjRkZuUjNOVlVUWlllRFJsVkZKNVMxZE9MMUppVDBwUGRFWmtZbWx3VFRKV1NXZHRiMkpOVmxSMWFIQjJTR1IzTURWa2F6aHViVXB6VUdFS2VVUjVTVlpHV0ZodVZtaFRaM2h1ZVdJNVIzVXlRMjFOTkhaTGJqSmxOblExVFc1c2JXRkhRMU50YUVnclIzWlVVVlV6VjFwMU1tTkxlVkIzTTA1dWJncFRibEpZYldRd2RGWmFVamMxVVZBdlRqUlhiRVZRTW5wbE9XSklOMlZsYzFwVVVtbzFOSFl4WWxOaGRtbFlWVWRyTkdsTlVUZ3ZVVWcxTm1ReVkyWjJDazlzTVRZeGJsTmtaVFpMUzBGd05XMUlNemhuT1ZsU0sydzFVMkZUY1daT1pWWkVNM0pSWms1RGJFbHBSWG8yZGtGQlZsQnljVlJIYVZGaWFHVTJNMmNLVTB4TVoyazBSVU5uV1VWQmVFazVRa0ZXU25WdGMzVklVbkZ5T1VKNFJ5dERUR2xKYVZjclVVMTBaV3B0YlU1VlVUTjJVM051WVM5cWIyOU1SV1V2TlFwMFptbzJTMVF5ZG1aS1JtMUhhRFpOTWsxYU9YUnFTblIzVlc5S1RuZG5kRUpSZFdoNlVqbDFaRTVsVkhNeE16RlNSRmh2YTNORlZUaExlRkl6U0c1WENreHljakZyZUU5MlpucERNVXhUYURCaVNEbFNMME5SYkVFMU16aE9kV0ZtYlVWV1dXNDNSbEZ3VFVwdlpIVmxiM1pYTjI5YWJrMURaMWxGUVRCMkswMEtaR1ZqVWxsWFpHRTRSR3gzUVcxVWNWQlhWMVk1ZVZGM2RYVTNPRzlNYVdRNGF6TmFSV3RNVHpKbk5UTnVaVEJ2UzNwc1UzUmliWGxGWnk5WE4yVnNSd3AzZGxjMlUzaG9RamhQYnpKRVpXWnFXR3g2V201eU1sZGhOM2hJUTNoSVRsZGlMMmRtTDB0WVdVVTJhbVZLVG5ONllXMHpTbUp3YW5aSVdrTmtTbk5wQ21Sc1NuRTVaRTV6WkRoYUwxazVTVmxaYlU1aWFtRjRSRVJDZVVkT1JVRmxXRWhrVm5walJVTm5XVUpzVjFobmNrNXNXRkpsZVVKR1ZDdFZibll2TkRnS1owOXViRGcyUW0xc2MyNUZNRmhMYUZkVVpFdDZaUzh6YW5wWmJVTmFZVFJRWVdrdmJYYzNhRXhDWkRWWlJXTXZabmhzVXpKTE1pc3ZSek5FT0c1T1JRcEtjblJJUTA4emNsVlVlbGhRTlhNemEwcFNZa1o2VHpBMVUxWlJhVmxJYld4dlFVcFdhREJ1WkM5WWVsVjFhVEZEVUVVNVJWZFpSV1F6UjFVelZsWjBDa3hzVTBWQmRXMVRRM0YyVTI4MlFtVkVUa2hKUVZGTFFtZEVTRTlZVDNWbU5XSjRiVll4VFVwWEsxWlZlVTgxUWxGdmMyRkpaRFpsWkRCbVFrUktaV0lLZUV4bVNYbFhZM3B5ZDNrMldrcGlMMkYzVXpKc2RFRnZjVkZXZWpSV05ETXZkMlZ0TjBSdVowd3lOVTAxUzBSeWNtWnpTWEZoT0RSMlJsSnBiVmRUY3dwS1IxSlFZMWRuYzFvck5GbGljME5HV2xaUmEydFdTakZZS3paRGFVUnZRamR1Yld0MFNpODFXRk42UlRsVWFWVldOVWw2Y2xsbU5GYzNNazUyVW5vMkNteHRhVUpCYjBkQ1FVbzVWVlYyU0dwTFVUUlJUelIzTWl0ck5uZEZiVGxRY201d2NtaG9RbGRLVlV0UmNsTXdhbUpDY1dsRU9FdGpibTF0T0ZsSk5WSUtPRGxMTkdscU1HZFJMM2hrZDNCTU1YQTVUMll3TjJWd2MybDFPVXRVVFhoc1FYTlRZMWh4UVhSR1FUaFBTSFV6V2xGc2IwNTFVMEpxWkRGamVYTXpVZ3BWWlVsUE5VSkZPVGRZWVZOdFkwWkhlV1Y0VjJoWU56UlRPVzVJYldOTk1WaDBTRmhsVUhaalF5OTFOR1V3WVV0dlJIbGFDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/kube-cloud-config.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/kube-system-configmap-root-ca.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURFRENDQWZpZ0F3SUJBZ0lJU3VKUFBLNC96Lzh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKICAgIEN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNU1USXdPVEV3TlRVMU9Gb1gKICAgIERUSTVNVEl3TmpFd05UVTFPRm93SmpFU01CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHkKICAgIGIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0Q1dWQysrQ3VHb0gKICAgIERhTnFRMlFYZWdNRlJpQmY5WHN1ek95ckxTSThGcis1RTFudXBFekp2WTQ4NnRKWE02bkFpK2o1bVo1MDBDZGYKICAgIEMya2ZBTVVzaHo0Vlk1dlhQbG9xaHhWRG1aSHJTenNWTkw0VU9XbkZ1Q3BkZkxvdmg4MXRzVDlXS3FBMWEyVjUKICAgIG1jV0FiNFltcGlJSmZSaFk3TVBhVDcyS3pnakFtR0JSV3FYQktlaTdBTXFHRnRJTjQ4eTZhU3ExbFBhTU53cnoKICAgIEdxMzlhQnRTNmltZjRpZ3dIcTFxNUJqcEluOUIvNXNLR2hTV3lMa0F0ZXZZelI4c0FBZHBnZzI0bFp5bFJucTkKICAgIGpYMkJ2d2h2V2wzNEErd2xadmovYmtqT3hKYVpJRmMrNDJaTWUrVVMyYUpxTmhQY0J2SXJBTitKN09yYW15VzEKICAgIDcvTVFmZjhVZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKICAgIC96QWRCZ05WSFE0RUZnUVVRU0xEZ1NDQ0NsbE5VbmZaQnh0MnRQM01LZGd3RFFZSktvWklodmNOQVFFTEJRQUQKICAgIGdnRUJBR2krZ3Q0ZFdSUkFlUk13eGVXN0JZQnZoSERvc2xnMEZyZXkram5sQ0c3UkNPL05ZczRNK290VjNlbFUKICAgIDBjL3FLeDVjWUZHTDFtVGFhUDFmemlHdGdNamlnZVljL3NiN01ISCtDa3Z5OHNmMi9OdmJna040RUtodDhUTWIKICAgIDdrUVlSbkxRT0JmME5majVqcmRHWFVLYU5Oc3h1MzNRbDJsNzdxdnpZMzJLMExtdUhDK3llL1F3Sm9kdUk3aFMKICAgIGNmdjI4azVyVkprY0owK0s3SCtpRzVscmZZV1NSY3JPZzlFcDBuL0JTWHV6NkxvZG5zNlljZnFqeGdzc2trTXYKICAgIE5hT1BIRUVYRzc2RUc3UGt1dEx1WDRJeTV3N2wvUzBvSng5ekgxNkFIbzVSY3JvQStzVzdINnBzbS9rMkg3b2MKICAgIGQxRUJGeklXQllIT2V2ZUVBUnl1YTVzSWJidz0KICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgIAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/machine-config-server-tls-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSbWVrTkRRVzFsWjBGM1NVSkJaMGxKUVZsNVkyVnJjVE5TYlRCM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVVMVRWUkpkMDlVUlhkT1ZGVXhUMFp2V0FwRVZFazFUVlJKZDA1cVJYZE9WRmwzVFZadmQwNTZSVEZOUkUxSFFURlZSVUY0VFhOWldFSndURmRzZFdSRE5XcGlTRlo2WkVkV2VVeFVUVEJOTWxsMUNtTXlSblZhUjBwMlpVUkZNazVxVFhWaU0wSnNZbTVTYzFsNU5XcGlNakIzWjJkRmFVMUJNRWREVTNGSFUwbGlNMFJSUlVKQlVWVkJRVFJKUWtSM1FYY0taMmRGUzBGdlNVSkJVVVJLZUZSRlZVeG1jbGMzUm1odVRFcGpOMGhaVTFwUk9UazFRalJ0U0ZsVU16UjJibnBUTjI5MGNsSTRiV1U1ZDBSRlZGUXpXUXB6TXl0SmRFbDZVR2x4VVd0cVUzWktRM1V3WkhGa05DOWpMMjFQWlhaWGFVNXljMmhvUVRCNVJubDRTa1JMWlVSTU0zSkpPV2hLVHpOSmVWbHNkbUZrQ21sRk1XTnNSMVIxUldwR1RIcHNZbFZoTldsR2JtRlViM2wzTWxkV1RGUnFlRVp4ZGtOek5rWnFaVFp6ZGpGbVVsUjJObFoyYzFVdk5VaHplVmxEZUdVS2NEZzFMelp4UkZacVlYUlJVbkZYUTBObWMzWkNPRGs1ZG14d1dsWlBha2wzZURaamJERjRTWFp0WjBaWVNWSk1Welo1VEU1WFpHVTFZWFUyVWtwbVFnb3ZXa2x1ZG5sWWQyMDNkRUZZWjNnMGQzcFJkVzVuVlVoaVFrVnVkRXhpUm5oMFJXazViVmhVWTNaMWR6bEZTVTlZTDBKV1ltSlNNSGRFVUd3d1MwWlpDbE5DVGtadU9UaE9NemhFVUdoS1RsQXhZMHBEU0hoR2VTOXhaM292T0haYVFXZE5Ra0ZCUjJwbldqaDNaMXAzZDBWM1dVUldVakJzUWtGM2QwTm5XVWtLUzNkWlFrSlJWVWhCZDBWM1JFRlpSRlpTTUZSQlVVZ3ZRa0ZKZDBGRVFXUkNaMDVXU0ZFMFJVWm5VVlZSVTB4RVoxTkRRME5zYkU1VmJtWmFRbmgwTWdwMFVETk5TMlJuZDBoM1dVUldVakJxUWtKbmQwWnZRVlZSVTB4RVoxTkRRME5zYkU1VmJtWmFRbmgwTW5SUU0wMUxaR2QzVG5kWlJGWlNNRkpDUkVGM0NreHZTWE5aV0VKd1RGZHNkV1JETldwaVNGWjZaRWRXZVV4VVRUQk5NbGwxWXpKR2RWcEhTblpsUkVVeVRtcE5kV0l6UW14aWJsSnpXWGsxYW1JeU1IY0tSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRVVJuWjBWQ1FVTlFNQzlYVUVkcVVtbE9jbVY1VGtSU2VEQlFiMWs1V2pCck1tNDFPRTlxUlRRNFJFOUdVd29ySzNrNFZWUk9WMUJMV0hrMVdVNWthVFJ3Tm1RdlQwTndLMUZ4TTFVeE9XTllWMjlyTWtrclpWbGpUWFVyZDB4RVdVdE1XSGc0VUZneVN6UlhSRTlIQ210b2JuUm5jeTkxVEdJclZVeDBjbWt3WW1kMlpUWlRRbEJOTjBabVdUUTJUMnB0VmtGa1pEaGlSMFkxWnpRMFJGcEhURnBoVEdFemFVVkVkMWhuUm1rS1ZFMXBRVWg2WjBGU2RIRTRlbGhzWTJwNGVHSkROa1JKU201dmEzWTFVazFRTUUxU1ZVZHJObmRRV2s5b2JHTlpUbEZrVlhaT2VYWkJNMVJtYVc1VWJRcHNlRFYyWmpNMGIxY3ZiR1pCVHpCS1VtaE1ZelJSUTNZeWFHdE5kamd6WldaMWVXSXZUMHcyTUdnMk9XNUpNbmh2YXpZNWRuZEZOWE5pTmpSbWJFMU1Da0pLUW5sWlJETjZRVVJQYmk4clNrMTBRVFpSVVhvdk1HdDBWREVyVFVGdGMwZG9UbGRvYzNKTFdrMUhRMVpKUFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIzZEpRa0ZCUzBOQlVVVkJlV05WZUVaRE16WXhkWGhaV25sNVdFOTRNa1Z0VlZCbVpWRmxTbWd5UlRrclREVTRNSFUyVEdFd1prcHVkbU5CQ25oRk1Ea3lURTR2YVV4VFRYbzBjV3RLU1RCeWVWRnlkRWhoYm1WUU0xQTFhbTV5TVc5cVlUZEpXVkZPVFdoamMxTlJlVzVuZVRrMmVWQlpVMVIwZVUwS2JVcGlNbTVaYUU1WVNsSnJOMmhKZUZNNE5WY3hSM1ZaYUZveWF6Wk5jMDVzYkZNd05EaFNZWEozY2s5b1dUTjFja3c1V0RCVk55dHNZamRHVUN0U053cE5iVUZ6V0hGbVQyWXJjV2N4V1RKeVZVVmhiR2RuYmpkTWQyWlFabUkxWVZkV1ZHOTVUVTFsYmtwa1kxTk1OVzlDVm5sRlV6RjFjMmw2Vm01WWRWZHlDblZyVTFoM1pqSlRTamM0YkRoS2RUZFJSalJOWlUxTk1FeHdORVpDTW5kU1NqZFRNbmhqWWxKSmRscHNNRE5NTjNOUVVrTkViQzkzVmxjeU1HUk5RWG9LTldSRGFGZEZaMVJTV2k5bVJHUXZRWG8wVTFSVU9WaERVV2c0VW1OMk5tOU5MeTlNTWxGSlJFRlJRVUpCYjBsQ1FVWXdXVXhMVEdjM1EwZEtMM1ZtY2dwMlVVMDNhRlpwY0RWcmQxUllSRTF2WmsweGRVcHRNakJRYjA5TVNtTXpRWEpaZG14RU5tOVRaRGM1T1dad1MzSndlbmgxU0d0MWRWUlBWVzgwVkVKd0NuUkVWVE5MYlhCcU1HdGxUMmhCUVdWcVVVcFFXVzFMTWpNelNXeG9lVVF6ZUdFNFNubEdUelk1WldKSVYxTkpNMHB4VDFKWGNVczNNbWt5WTBwUFFqY0tMelZNYWtadGMxbDROMkZJZUNzek4wcExjSHA0Ymt3clpscDRaRVJIUjBSNVZTdENTV3RDVkVWWGNrdHVaRE4xYUc1S1FUaG9aVEpTUkRoNlpqUlZWQW8xZUdaRlEyWmhNR0UxWlRkSFMwbFhUR05aV1hGWlFqaG1iR012V21ad2IyYzNlRVF5YlZCTk5VMWlZbEZEV0dwNmVGZFNXams1ZWxObE0zTjVaMjlJQ2t4V1JETTVkR1ZoVGs5U2VFdDVjVlUxUTA5elYzUmtkV0ZUTXpSNVoxTnNUMGxqVDJaeE9WTm5ValJQYUhCUmVFSjBjVXhLTUhScldGbHJjRlI1U21zS1kyOU5XVVJ0UlVObldVVkJNRVJWY0U5WVJsbFJZbkZXVFVoU1NGUkdVa051ZGpBMVRtMW9aVTlpV1U5eFdVOVZVbVkwTW14aWExTjRibmxaUjBGaVNncG5ZMmRqYkV4RVUxa3pRa1o1VlRCVFJraDJVakpGTW5CNU5UaElUMk16T1hwMk9YQkxNWFJIYVdJMVQwVnplR1JQYzBGUmQwOTVXak5OWjBsMFlqQnlDaXRoY1ZBeFNpODFlV3BZYWtoaVVXMWhjbFYyY2t4VVRYaGpXRVZ1ZDNsVVRqQndhRzk2Y0U5eVltNVdNbWhHU1VsS1p6aDFLekJEWjFsRlFTdENXRUVLZUZKSUwxbHVORnBoVFNzeU1VdERaRmR0UVRkSllWWjBZVlZpU25SMmMxcDJVVmRTUlRoTlRYZHBaSE56YmpVM2JsUXpZa05wUWpnM01WVkpaSEpvTUFwR01XcDJSVFZRUTJaaU5UWmtNbXN4VTJsd2RYTm5RMDlvU1dseUwxbzJSMkkyYUM5V2JHeDVUa0l6Y25SalpFWlNiRTVEZVRaVlJFY3dVWFUxYmpOVUNtUjFWamw0WW5wU2RsSlJjbVZHVlRSRWNVUTFTV2d4VW5oUVVsTTVORkF3U2l0Q09GTm9NRU5uV1VWQmVsRnNPVXB0WkRkaVdXTnpRV3RMVVUxQ1prOEtXRGR0Y0ZSUE5ITXhTa28wUkM5R1Z6VkVTemRYUjJsbmJEZDZPVWh5VVZsWWRXeE9Wa0pTY0hFMmJGWTBRelEwZG5Sc1RYaHpSamhyT1hoNFFtcHFXUXBYU3k5dWVIUXliRTF0UzNCcGFFOWtVVUV3UTNOeGNVNTJkMFo1Y1d3Mk16TnhPV0kwZURCRWNGZEhOVE51WlZwWFdEVkRhVGhoYXpOaFMzSjRZVVpvQ201S1NuZFpiMnMyUlVKVmVFSjNXRGQ2VEZZdlNXVlZRMmRaUW05b1QyMXdXRmhNUjAxVVFrNVhlVE5DUjFWWlUwaElZblJNZDBGUmJWcFdSV1JVWjJJS2VtVjFXV04wVnl0UGRGQjBkelpKWVRGclQyaFhXbmx3VkVvM04xQmhNRlJhVWtkamIzVlZVRU41UVZocVVXazFhbGhWUkc4ek5XNHdhR280UTJwNlJBcGpRemQwTVRGT2NFbzJNekU0VGxZM01HNXdVM2c1ZFhWTmFWTTRWVkZwTVdvcmVGVlZZaTltZEVVMk5FeE9ZMjlQY1U5aWRuUlRSR05TWnk5V1lWZFpDalF4WjFvNVVVdENaME52V0dwbmVUaHhURkpGZVVSTVJsQnBOemRzVmxBeFYwRlBSMU5RV0hjMGFEZE1kbFJuUTBSTWJtOUNUWEZpWlVSTEwzaFBjMFlLUTFWQ1VUZHpTbTlHTDNsclZrWXpUa0ZNVlVWdmVEQklaV3MyY3pOWUx6Y3hjV0V5T0ZCTlZ6VTRlVEJhVUhSR1JYaG9XRmxyVVhGcEwzazJiM1JTZVFwbFNEaGxWM2dyYVRkNlZsUnJjSEpSYjNWTFNVNDJOV2xVU1ZkNE1EbHJTamcyUXpsRU4zaDBORGcxUWxoTVpIUjBka3B3Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/manifests/openshift-config-secret-pull-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0CnR5cGU6IGt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKICBuYW1lOiBwdWxsLXNlY3JldApkYXRhOgogIC5kb2NrZXJjb25maWdqc29uOiBleUpoZFhSb2N5STZleUpqYkc5MVpDNXZjR1Z1YzJocFpuUXVZMjl0SWpwN0ltRjFkR2dpT2lKaU0wSnNZbTVPYjJGWFdqQk1XRXBzWWtkV2FHTXlWWFJhUjFZeVN6SmFiR0pIYkRSWk1sWjFaRWRXZFZwWVNtaGlWMVo1WVZjMWRrMVhjRFJsUkdzd1QxZFNkR016V2pOWldFSXdZVzB4Ym1WSE9YcGhia0p6VDFoYWIwOXJOVVZUTUhoSlUyeEdXRk13WkU5UlZVbDRUVVJXVmxKR1pGcFNNWEJYVTFSYVZWVXdSVFZPTUhoRlRWUkNURTFyWjNkTk1ERklVekJzVkZORmRFNVJWRnBTVkd0NFlVOVdZek5SYkdONlVURndVbFZHYnowaUxDSmxiV0ZwYkNJNkltWmxiR2w0TG1ObGJuUXViV1Z5YVc1dlFHaHZkRzFoYVd3dVpYTWlmU3dpY1hWaGVTNXBieUk2ZXlKaGRYUm9Jam9pWWpOQ2JHSnVUbTloVjFvd1RGaEtiR0pIVm1oak1sVjBXa2RXTWtzeVdteGlSMncwV1RKV2RXUkhWblZhV0Vwb1lsZFdlV0ZYTlhaTlYzQTBaVVJyTUU5WFVuUmpNMW96V1ZoQ01HRnRNVzVsUnpsNllXNUNjMDlZV205UGF6VkZVekI0U1ZOc1JsaFRNR1JQVVZWSmVFMUVWbFpTUm1SYVVqRndWMU5VV2xWVk1FVTFUakI0UlUxVVFreE5hMmQzVFRBeFNGTXdiRlJUUlhST1VWUmFVbFJyZUdGUFZtTXpVV3hqZWxFeGNGSlZSbTg5SWl3aVpXMWhhV3dpT2lKbVpXeHBlQzVqWlc1MExtMWxjbWx1YjBCb2IzUnRZV2xzTG1WekluMHNJbkpsWjJsemRISjVMbU52Ym01bFkzUXVjbVZrYUdGMExtTnZiU0k2ZXlKaGRYUm9Jam9pVGxSRk5FNXFWVFZOVkdnNFpGZG9ha3hVUmt0bFJtYzFUa1JzUlZSV1RsZFdNa1ozVmtkd2RGb3hhRkJqTUhCM1lrUnNWMU5FY0d4bFZYQnZXV3RrYW1GVk9YQlRiRTVXWld4V05GUlhiRXRQVXpWc1pWVndObHBHWkVwaFZUbHdVMWhvV2xZd2NIRlhiWEJxVGtVeFNGWnRjRkJTTVVWM1ZGWmtSazFXYkhGaFIzQk9ZV3hHTTFkclVrNWxiR3Q1VmxSQ1dsWkdWWGRYV0d4TFQxTTFUbVZ1WkdsbFJ6UXpaRmRTY0ZWR1RuWmlhelF6V25wV2RGSnFaekJqUlZWNVRtNXNhVlZyZEVsWFJrcDFVVmQwZGxneFVrWlJWMUoyVFRGQ1VsZFlUa05VYWxKTFRVVXhNV0o2UWpOVWJXaEhaRVZPZUZrelRtMVpNVWsxVDFWYWMyVlVUalpOUm1SeFZWYzVjVkZZY0ZsV1ZHUjJVbXRSTlU5V1duSk1WMDVLVkVkc00xSklhRzFTYlZKbVkzcHNiMlZWUm5aT00wVXpZVlZLZUZWclpFdGFTRXBZWkVSU2FXUlhXbEppYVRGSFZtczRNV05ITUhwaVJ6VkhWRlZzUlU1R1RYcGhNa3BDWVROVmQyRkZkREJqVjBaTFRqTmtWR05JVGtkaVZtYzBUMWRzUW1OdWNIVldha1p2VWxSQ2FWSXhjR1pWVjJ4Q1RtNUNhRk5WVWpCV01XeG9UMVpDYVZkWVozcGFWMUpyV1ZkS1QxcFdaekpoVlZVeFRUSjRTMWw2WkRaWmF6bDZVbFpDVVUweGNHNVphM2hQV2taa2MxRnNaRmRhYW1oUFRqQndlRTlGZURSaU1EbHpZV3QzTTFwdFpFaFlNMHBhVmpOS1NtSXhXa1ZhYkZZMFZGTXhSbFpXYkhGVk1scG1WVlZSTldJeU9WZGlNakIzV1dreFdFMXRValZhUkVsM1dsUkdkbFJzYkVOUFIzUjBZWHBPZDJOck9EVmlTRlpSV2tWMFZreFdWbGRpYWtKcVZrVk9RMUZxVms1WGJrWlpaR3BrYkU1WGJHdGpWM0JFWlZkT1YxSlZhSE5STW1oV1RWWktjbFpYUmtwTlNHaHVWRk14U2sxc2IzcGxSbEpoV0ROd1ZtTnJSa2RPVjJSaFdtMUtkRTR3U2tKVWJURnVZek5KTkU1R2JGUlBSV040VmtSa2NGSnNPREpaTWxwTFZtMWtNR1JVV2tsVk1FWkZZbFJLY1U1V2FITlVWbXgxWkVkV1JsbDVNSGRVUlRGaFpGTXhkVlZZVmxGUFIxcDBaVVZ3TVZsdFRUTlVWMDVtVVc1T1JGTlVhSEJhTUhoQ1RWWktWVk5xVW5obFJHeHZXVlZvV21NeVVqVldibWhtV2pCU1RWcHBNVWxPVmxZeFpFUkZlbFF6Um1sUFNFbzFWRWRHZUZZd1JYaGpTR3gyVGtSa2JsSllUVFJoV0c4eFVWZDNNRnBIV2pKUmJHaE9ZVEp3ZDJWR1VqVlVhbVJRWkZkd1ZGcEZiRmRaV0Vaell6SnNjRmg2V210U1JFSm9WREZPTTJWWGFITmllVEZOVjBWR2FXVnJUalJOVld0MFdrVlNOVmxwTVVwalNFNXRXV3hhZW1Nd1ZuQk5ibkJyVG01c1IyRkhUbGhqTWpWVlpHMWtUR1ZzU25waU1XUktUakJXVGxaRlpGWlVTR1I1Wldwc2VVMXRTbWhoU0VwWFZUQk9iRlpyY0hSbGJEZzBZbFJPTVZGVlNqWldiWGhxV2tkT01WUnRSa1JXVjJ4c1ZVZHdVVTV1Y0ZKaWJWSjBVMjVGTkZWdVNqSmlWVFZRVmxjMWFtRXdiR2hXVkVFeVRXdG9jVlF6Um5oYU1IQklZM2M5UFNJc0ltVnRZV2xzSWpvaVptVnNhWGd1WTJWdWRDNXRaWEpwYm05QWFHOTBiV0ZwYkM1bGN5SjlMQ0p5WldkcGMzUnllUzV5WldSb1lYUXVhVzhpT25zaVlYVjBhQ0k2SWs1VVJUUk9hbFUxVFZSb09HUlhhR3BNVkVaTFpVWm5OVTVFYkVWVVZrNVhWakpHZDFaSGNIUmFNV2hRWXpCd2QySkViRmRUUkhCc1pWVndiMWxyWkdwaFZUbHdVMnhPVm1Wc1ZqUlVWMnhMVDFNMWJHVlZjRFphUm1SS1lWVTVjRk5ZYUZwV01IQnhWMjF3YWs1Rk1VaFdiWEJRVWpGRmQxUldaRVpOVm14eFlVZHdUbUZzUmpOWGExSk9aV3hyZVZaVVFscFdSbFYzVjFoc1MwOVROVTVsYm1ScFpVYzBNMlJYVW5CVlJrNTJZbXMwTTFwNlZuUlNhbWN3WTBWVmVVNXViR2xWYTNSSlYwWktkVkZYZEhaWU1WSkdVVmRTZGsweFFsSlhXRTVEVkdwU1MwMUZNVEZpZWtJelZHMW9SMlJGVG5oWk0wNXRXVEZKTlU5VlduTmxWRTQyVFVaa2NWVlhPWEZSV0hCWlZsUmtkbEpyVVRWUFZscHlURmRPU2xSSGJETlNTR2h0VW0xU1ptTjZiRzlsVlVaMlRqTkZNMkZWU25oVmEyUkxXa2hLV0dSRVVtbGtWMXBTWW1reFIxWnJPREZqUnpCNllrYzFSMVJWYkVWT1JrMTZZVEpLUW1FelZYZGhSWFF3WTFkR1MwNHpaRlJqU0U1SFlsWm5ORTlYYkVKamJuQjFWbXBHYjFKVVFtbFNNWEJtVlZkc1FrNXVRbWhUVlZJd1ZqRnNhRTlXUW1sWFdHZDZXbGRTYTFsWFNrOWFWbWN5WVZWVk1VMHllRXRaZW1RMldXczVlbEpXUWxGTk1YQnVXV3Q0VDFwR1pITlJiR1JYV21wb1QwNHdjSGhQUlhnMFlqQTVjMkZyZHpOYWJXUklXRE5LV2xZelNrcGlNVnBGV214V05GUlRNVVpXVm14eFZUSmFabFZWVVRWaU1qbFhZakl3ZDFscE1WaE5iVkkxV2tSSmQxcFVSblpVYkd4RFQwZDBkR0Y2VG5kamF6ZzFZa2hXVVZwRmRGWk1WbFpYWW1wQ2FsWkZUa05SYWxaT1YyNUdXV1JxWkd4T1YyeHJZMWR3UkdWWFRsZFNWV2h6VVRKb1ZrMVdTbkpXVjBaS1RVaG9ibFJUTVVwTmJHOTZaVVpTWVZnemNGWmphMFpIVGxka1lWcHRTblJPTUVwQ1ZHMHhibU16U1RST1JteFVUMFZqZUZaRVpIQlNiRGd5V1RKYVMxWnRaREJrVkZwSlZUQkdSV0pVU25GT1ZtaHpWRlpzZFdSSFZrWlplVEIzVkVVeFlXUlRNWFZWV0ZaUlQwZGFkR1ZGY0RGWmJVMHpWRmRPWmxGdVRrUlRWR2h3V2pCNFFrMVdTbFZUYWxKNFpVUnNiMWxWYUZwak1sSTFWbTVvWmxvd1VrMWFhVEZKVGxaV01XUkVSWHBVTTBacFQwaEtOVlJIUm5oV01FVjRZMGhzZGs1RVpHNVNXRTAwWVZodk1WRlhkekJhUjFveVVXeG9UbUV5Y0hkbFJsSTFWR3BrVUdSWGNGUmFSV3hYV1ZoR2MyTXliSEJZZWxwclVrUkNhRlF4VGpObFYyaHpZbmt4VFZkRlJtbGxhMDQwVFZWcmRGcEZValZaYVRGS1kwaE9iVmxzV25wak1GWndUVzV3YTA1dWJFZGhSMDVZWXpJMVZXUnRaRXhsYkVwNllqRmtTazR3Vms1V1JXUldWRWhrZVdWcWJIbE5iVXBvWVVoS1YxVXdUbXhXYTNCMFpXdzROR0pVVGpGUlZVbzJWbTE0YWxwSFRqRlViVVpFVmxkc2JGVkhjRkZPYm5CU1ltMVNkRk51UlRSVmJrb3lZbFUxVUZaWE5XcGhNR3hvVmxSQk1rMXJhSEZVTTBaNFdqQndTR04zUFQwaUxDSmxiV0ZwYkNJNkltWmxiR2w0TG1ObGJuUXViV1Z5YVc1dlFHaHZkRzFoYVd3dVpYTWlmWDE5Cg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_binding-discovery.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjFiZXRhMQptZXRhZGF0YToKICBuYW1lOiBkaXNjb3ZlcnkKcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IENsdXN0ZXJSb2xlCiAgbmFtZTogc3lzdGVtOmRpc2NvdmVyeQpzdWJqZWN0czoKLSBraW5kOiBHcm91cAogIG5hbWU6ICdzeXN0ZW06dW5hdXRoZW50aWNhdGVkJwotIGtpbmQ6IEdyb3VwCiAgbmFtZTogJ3N5c3RlbTphdXRoZW50aWNhdGVkJwo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_cloud-creds-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMKZGF0YToKICBhd3NfYWNjZXNzX2tleV9pZDogUVV0SlFWcE9WekpOUjBjelNGcElTVE5hUjB3PQogIGF3c19zZWNyZXRfYWNjZXNzX2tleTogUTFodFVrVlJXWEIxUkRWSldFdHhaVzFFVUdkMWNrTkpRVzR2Y1U1Nk1VWnNUa2hDVWxoSGRnPT0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_kubeadmin-password-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IEpESmhKREV3SkRBNGFFOUpZV2h6T0hsMVJFVTFaelExY0hseGN5NUxlVFJJVEVOTWVGQnJaSEpvY1dVd1lYbGpURzVuWnpSWFdXRnVXSE5QCg==",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_role-cloud-creds-secret-reader.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIG5hbWU6IGF3cy1jcmVkcy1zZWNyZXQtcmVhZGVyCnJ1bGVzOgotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJzZWNyZXRzIl0KICByZXNvdXJjZU5hbWVzOiBbImF3cy1jcmVkcyJdCiAgdmVyYnM6IFsiZ2V0Il0K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-user-data-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmtpbmQ6IExpc3QKYXBpVmVyc2lvbjogdjEKbWV0YWRhdGE6CiAgcmVzb3VyY2VWZXJzaW9uOiAiIgogIHNlbGZMaW5rOiAiIgppdGVtczoKLSBhcGlWZXJzaW9uOiB2MQogIGtpbmQ6IFNlY3JldAogIG1ldGFkYXRhOgogICAgbmFtZTogbWFzdGVyLXVzZXItZGF0YQogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKICB0eXBlOiBPcGFxdWUKICBkYXRhOgogICAgZGlzYWJsZVRlbXBsYXRpbmc6ICJkSEoxWlFvPSIKICAgIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaVlYQndaVzVrSWpwYmV5SnpiM1Z5WTJVaU9pSm9kSFJ3Y3pvdkwyRndhUzFwYm5RdVkyeDFjM1JsY2kwek5ETm1Mbk5oYm1SaWIzZ3hOall6TG05d1pXNTBiR011WTI5dE9qSXlOakl6TDJOdmJtWnBaeTl0WVhOMFpYSWlMQ0oyWlhKcFptbGpZWFJwYjI0aU9udDlmVjE5TENKelpXTjFjbWwwZVNJNmV5SjBiSE1pT25zaVkyVnlkR2xtYVdOaGRHVkJkWFJvYjNKcGRHbGxjeUk2VzNzaWMyOTFjbU5sSWpvaVpHRjBZVHAwWlhoMEwzQnNZV2x1TzJOb1lYSnpaWFE5ZFhSbUxUZzdZbUZ6WlRZMExFeFRNSFJNVXpGRFVsVmtTbFJwUWtSU1ZrcFZVMVZhU2xFd1JsVlNVekIwVEZNd2RFTnJNVXBUVlZKR1VrVk9SRkZYV25CYU1FWXpVMVZLUWxvd2JFcFZNMVpMVlVaQ1RFNURPVFpNZW1nelVrWkdXbE5yZEhaWGEyeHZaRzFPVDFGV1JrWlVSVXBTVVZoa1MyRnJWbFJVVlVwQ1VqQkZlRlpWVlV0Uk0yaE9VMjFKZWxGdGVHbGlhelYyV1Zaa1lVMUZNVk5SV0dSRldqRnNSVlpzUmxKU1JWWXpXa2hzYVUxcWEzZFVSbVJQWVVVeFEwNUdhRVZXUlZVeFZGWlNTbVF3T1ZWU1dHUlBWa1pWZUZRd1duWlhRWEJGVmtWck1WUldVa3BrTURWeFVsaGtUMVpHVlhoVU1GcDJaREJ3Y1ZKV1RrNVJhMFpJVVZSR1ZsSlZUalJVVlhCcFRUQktjMWx0TlU5aU1rWllWMnBDVGxWclJqTlNSMlJhVWtaYVVsVlZVa1prTWxJMVEyMUplVTlVUWsxV01EVnZWRlZzU2xGcmJIRlJWVFZEV2pKMGVHRkhkSEJTZW13elRVVktRbFZWVmtkUlZVWlFVVEJHVWs5RlJrNVRWV3hEVVRKa1RGRXdSbEpTVlVVd1VURmtWMUY1YzNKUk0xWklZakJuUzFKSFJrOWpWa1Y1VlZab2JGb3dNVWRWYld4RFdtcHNXV016VmpaVU0yeDVWRVpPU2s5RldubExlbFpHVFZjMU1XTkZWalpUYmxwYVRrUm5NbVJGY0ZsVVZGcDFVVmRyY21GcVZuUlhhbFYzVFVWT2ExcG5jRVJOYlhSdFVWVXhWbU15YURaT1JscGFUbGhhV1ZWSGVIWmpWMmcwVm10U2RGZHJhSGxWTTNCNlZtczFUVTVHVmxCV01qVkhaRlZPZDFwSFdrMWlNMXB2VDBSR01HTXhVVFZXTUhSNFVWUkdhRTFzV1RGRGJURnFWakJHYVU1R2JIUmpSMnhLVTIxYVUyRkdhek5VVmtKb1ZrUmplVk16Y0c1aGEwWjBVakJLVTFZelJsbFJhM1JzWVZSa1FsUllSa2hTYmxKS1ZHcFJOR1ZVV21oVk0wVjRZa1pDYUZSVk5UTmpibTlMVWpORmVrOVhSa05rUmsweVlWY3hiVTVIYkc1a01HaDRUVmhGTVZGdGNIZFRWelExVVdrNE1XTXdkRWhoUms1WVpWVjRjbEZZVW14a2JHdzJWV3BvZWxGVlJtdGpSMlJ1VFdwU2MxZHViSE5WYlRWNFQxRndjVmRFU2tOa2JtUnZaR3hrYzAxNlVrSkxNMlJ6VjI1YWNVd3lTbkpoYXprMFUyMUdZVk5WV21wTGVsRjVWMnN4YkVzeFZsUk5iVVpMWTFVMWIxVkhUa05rYTJ4NVVWVTBjbE5xWkZCamJVWjBaVlpqZUVOcVkzWlVWa1p0V21wb1Zsb3paRXBTUlVaU1VWVktkazFGYkROVlZWSkNWREJLYmxSc1drbFZWR2hEVVZkWk5GSlZTa0pVVlU1Q1kxWkdNMUpJWkZwU1JscFRUVVpTUWxWVlozWlJhMFpXWkRCR00xSlZTVXRNTTNCQ1drVktibFJzV2tsVlZGSkdVbTFrVWxaV1JsUlVSVkp1VlRCT1JGRXllSE5VYkZaMVdteHdRMlZJVVhsa1JrRjZWRlYwYTFvelpFVlZWbXhMVXpJNVlWTlhhREpaTURWQ1ZWVldUVkZzUmtKU1FYQnVXakJXUTFGVlpIQkxNbVF3VGtkU1dGVnNTa0phVmtwT1pETm9iRlo2WkVOWFZVb3lZVVZvUldJelRuTmFla0pIWTIxV05Vc3ljSFZpUlU1SVRqRktSRlI1T1U5WFdFMHdWRk4wZG1SR1dYcGFWM2hXUTJwQ2Frd3pSa3hsUkZacVYxVmFTRlJFUm5SV1IwWm9WVVJHYldWdGJFaGtSMlJPWVcxc2JscFdiR3BNTTA1cFRqQXhTVk5EZEVSaE0xbzFUMGhPYlUxcE9VOWtiVXB1WVRBME1GSlZkRzlrUkdoVlZGZEpTMDR5ZEZKWFZrcDFWRVpHVUZGdFdYZFViVnB4VGxkd2VWcEZaRmxXVlhSb1ZHczFlbVZJVlhwTk1VWnpUVzEzTTA0elJqSmxiR3Q2VFd0emQxUkhNVEZUUlUxeVpWZFZkbFZZWkV0aU1sSXhVMVJrYjFWM2NHcGFibGw1VDBkek1XTnNXa3RoTWs1TFRVTjBURTR3WjNKaFZXTXhZa2hLYlZkV1pGUlZiVTU1VkRKak5WSllRWGRpYVRsRFZURm9NV1ZxV2sxaU1sSjFZM3BhV2xreVduaGhibWh1WXpOT2NtRXdNVEpEYXpWb1ZERkNTVkpWVmxsU2VtTXlVbFZqTTFWSGRERmtSWGd4VjBSU1NtVlVWak5PTW5kMlZYcENkbE51WnpWbGEyZDRUbXRHU1dKNlZsTlpNMHAyVVZOMGVsWjZaRWxPYmtKNllsTTVjazFyWnpOaU1rMUxXa1JHUmxGcldqWlRWbVJEVjFWb1VGcFlXbXhTVlVaVFpWaFdhRTVZVGtwWmJVb3pVRkZ2ZEV4VE1IUk1WVlpQVWtOQ1JGSldTbFZUVlZwS1VUQkdWVkpUTUhSTVV6QjBRMmM5UFNJc0luWmxjbWxtYVdOaGRHbHZiaUk2ZTMxOVhYMTlMQ0owYVcxbGIzVjBjeUk2ZTMwc0luWmxjbk5wYjI0aU9pSXlMakl1TUNKOUxDSnVaWFIzYjNKclpDSTZlMzBzSW5CaGMzTjNaQ0k2ZTMwc0luTjBiM0poWjJVaU9udDlMQ0p6ZVhOMFpXMWtJanA3ZlgwPQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-machines-0.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IG1hc3RlcgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiBtYXN0ZXIKICBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otbWFzdGVyLTAKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQpzcGVjOgogIG1ldGFkYXRhOgogICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMDJmZGQ2MjcwMjljMDA1NWIKICAgICAgYXBpVmVyc2lvbjogYXdzcHJvdmlkZXJjb25maWcub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAtIGViczoKICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AyCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItcHJvZmlsZQogICAgICBpbnN0YW5jZVR5cGU6IG00LnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICAtIG5hbWU6IGNsdXN0ZXItMzQzZi04Zmprai1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIG1ldGFkYXRhOgogICAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIHBsYWNlbWVudDoKICAgICAgICBhdmFpbGFiaWxpdHlab25lOiBldS1jZW50cmFsLTFhCiAgICAgICAgcmVnaW9uOiBldS1jZW50cmFsLTEKICAgICAgcHVibGljSXA6IG51bGwKICAgICAgc2VjdXJpdHlHcm91cHM6CiAgICAgIC0gZmlsdGVyczoKICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAtIGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBjbHVzdGVyLTM0M2YtOGZqa2otcHJpdmF0ZS1ldS1jZW50cmFsLTFhCiAgICAgIHRhZ3M6CiAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgIHZhbHVlOiBvd25lZAogICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICBuYW1lOiBtYXN0ZXItdXNlci1kYXRhCnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-machines-1.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IG1hc3RlcgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiBtYXN0ZXIKICBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otbWFzdGVyLTEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQpzcGVjOgogIG1ldGFkYXRhOgogICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMDJmZGQ2MjcwMjljMDA1NWIKICAgICAgYXBpVmVyc2lvbjogYXdzcHJvdmlkZXJjb25maWcub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAtIGViczoKICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AyCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItcHJvZmlsZQogICAgICBpbnN0YW5jZVR5cGU6IG00LnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICAtIG5hbWU6IGNsdXN0ZXItMzQzZi04Zmprai1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIG1ldGFkYXRhOgogICAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIHBsYWNlbWVudDoKICAgICAgICBhdmFpbGFiaWxpdHlab25lOiBldS1jZW50cmFsLTFiCiAgICAgICAgcmVnaW9uOiBldS1jZW50cmFsLTEKICAgICAgcHVibGljSXA6IG51bGwKICAgICAgc2VjdXJpdHlHcm91cHM6CiAgICAgIC0gZmlsdGVyczoKICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAtIGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBjbHVzdGVyLTM0M2YtOGZqa2otcHJpdmF0ZS1ldS1jZW50cmFsLTFiCiAgICAgIHRhZ3M6CiAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgIHZhbHVlOiBvd25lZAogICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICBuYW1lOiBtYXN0ZXItdXNlci1kYXRhCnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_master-machines-2.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IG1hc3RlcgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiBtYXN0ZXIKICBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otbWFzdGVyLTIKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQpzcGVjOgogIG1ldGFkYXRhOgogICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMDJmZGQ2MjcwMjljMDA1NWIKICAgICAgYXBpVmVyc2lvbjogYXdzcHJvdmlkZXJjb25maWcub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAtIGViczoKICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AyCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItcHJvZmlsZQogICAgICBpbnN0YW5jZVR5cGU6IG00LnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICAtIG5hbWU6IGNsdXN0ZXItMzQzZi04Zmprai1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIG1ldGFkYXRhOgogICAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIHBsYWNlbWVudDoKICAgICAgICBhdmFpbGFiaWxpdHlab25lOiBldS1jZW50cmFsLTFjCiAgICAgICAgcmVnaW9uOiBldS1jZW50cmFsLTEKICAgICAgcHVibGljSXA6IG51bGwKICAgICAgc2VjdXJpdHlHcm91cHM6CiAgICAgIC0gZmlsdGVyczoKICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAtIGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBjbHVzdGVyLTM0M2YtOGZqa2otcHJpdmF0ZS1ldS1jZW50cmFsLTFjCiAgICAgIHRhZ3M6CiAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgIHZhbHVlOiBvd25lZAogICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICBuYW1lOiBtYXN0ZXItdXNlci1kYXRhCnN0YXR1czoge30K",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-user-data-secret.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,CmtpbmQ6IExpc3QKYXBpVmVyc2lvbjogdjEKbWV0YWRhdGE6CiAgcmVzb3VyY2VWZXJzaW9uOiAiIgogIHNlbGZMaW5rOiAiIgppdGVtczoKLSBhcGlWZXJzaW9uOiB2MQogIGtpbmQ6IFNlY3JldAogIG1ldGFkYXRhOgogICAgbmFtZTogd29ya2VyLXVzZXItZGF0YQogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKICB0eXBlOiBPcGFxdWUKICBkYXRhOgogICAgZGlzYWJsZVRlbXBsYXRpbmc6ICJkSEoxWlFvPSIKICAgIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaVlYQndaVzVrSWpwYmV5SnpiM1Z5WTJVaU9pSm9kSFJ3Y3pvdkwyRndhUzFwYm5RdVkyeDFjM1JsY2kwek5ETm1Mbk5oYm1SaWIzZ3hOall6TG05d1pXNTBiR011WTI5dE9qSXlOakl6TDJOdmJtWnBaeTkzYjNKclpYSWlMQ0oyWlhKcFptbGpZWFJwYjI0aU9udDlmVjE5TENKelpXTjFjbWwwZVNJNmV5SjBiSE1pT25zaVkyVnlkR2xtYVdOaGRHVkJkWFJvYjNKcGRHbGxjeUk2VzNzaWMyOTFjbU5sSWpvaVpHRjBZVHAwWlhoMEwzQnNZV2x1TzJOb1lYSnpaWFE5ZFhSbUxUZzdZbUZ6WlRZMExFeFRNSFJNVXpGRFVsVmtTbFJwUWtSU1ZrcFZVMVZhU2xFd1JsVlNVekIwVEZNd2RFTnJNVXBUVlZKR1VrVk9SRkZYV25CYU1FWXpVMVZLUWxvd2JFcFZNMVpMVlVaQ1RFNURPVFpNZW1nelVrWkdXbE5yZEhaWGEyeHZaRzFPVDFGV1JrWlVSVXBTVVZoa1MyRnJWbFJVVlVwQ1VqQkZlRlpWVlV0Uk0yaE9VMjFKZWxGdGVHbGlhelYyV1Zaa1lVMUZNVk5SV0dSRldqRnNSVlpzUmxKU1JWWXpXa2hzYVUxcWEzZFVSbVJQWVVVeFEwNUdhRVZXUlZVeFZGWlNTbVF3T1ZWU1dHUlBWa1pWZUZRd1duWlhRWEJGVmtWck1WUldVa3BrTURWeFVsaGtUMVpHVlhoVU1GcDJaREJ3Y1ZKV1RrNVJhMFpJVVZSR1ZsSlZUalJVVlhCcFRUQktjMWx0TlU5aU1rWllWMnBDVGxWclJqTlNSMlJhVWtaYVVsVlZVa1prTWxJMVEyMUplVTlVUWsxV01EVnZWRlZzU2xGcmJIRlJWVFZEV2pKMGVHRkhkSEJTZW13elRVVktRbFZWVmtkUlZVWlFVVEJHVWs5RlJrNVRWV3hEVVRKa1RGRXdSbEpTVlVVd1VURmtWMUY1YzNKUk0xWklZakJuUzFKSFJrOWpWa1Y1VlZab2JGb3dNVWRWYld4RFdtcHNXV016VmpaVU0yeDVWRVpPU2s5RldubExlbFpHVFZjMU1XTkZWalpUYmxwYVRrUm5NbVJGY0ZsVVZGcDFVVmRyY21GcVZuUlhhbFYzVFVWT2ExcG5jRVJOYlhSdFVWVXhWbU15YURaT1JscGFUbGhhV1ZWSGVIWmpWMmcwVm10U2RGZHJhSGxWTTNCNlZtczFUVTVHVmxCV01qVkhaRlZPZDFwSFdrMWlNMXB2VDBSR01HTXhVVFZXTUhSNFVWUkdhRTFzV1RGRGJURnFWakJHYVU1R2JIUmpSMnhLVTIxYVUyRkdhek5VVmtKb1ZrUmplVk16Y0c1aGEwWjBVakJLVTFZelJsbFJhM1JzWVZSa1FsUllSa2hTYmxKS1ZHcFJOR1ZVV21oVk0wVjRZa1pDYUZSVk5UTmpibTlMVWpORmVrOVhSa05rUmsweVlWY3hiVTVIYkc1a01HaDRUVmhGTVZGdGNIZFRWelExVVdrNE1XTXdkRWhoUms1WVpWVjRjbEZZVW14a2JHdzJWV3BvZWxGVlJtdGpSMlJ1VFdwU2MxZHViSE5WYlRWNFQxRndjVmRFU2tOa2JtUnZaR3hrYzAxNlVrSkxNMlJ6VjI1YWNVd3lTbkpoYXprMFUyMUdZVk5WV21wTGVsRjVWMnN4YkVzeFZsUk5iVVpMWTFVMWIxVkhUa05rYTJ4NVVWVTBjbE5xWkZCamJVWjBaVlpqZUVOcVkzWlVWa1p0V21wb1Zsb3paRXBTUlVaU1VWVktkazFGYkROVlZWSkNWREJLYmxSc1drbFZWR2hEVVZkWk5GSlZTa0pVVlU1Q1kxWkdNMUpJWkZwU1JscFRUVVpTUWxWVlozWlJhMFpXWkRCR00xSlZTVXRNTTNCQ1drVktibFJzV2tsVlZGSkdVbTFrVWxaV1JsUlVSVkp1VlRCT1JGRXllSE5VYkZaMVdteHdRMlZJVVhsa1JrRjZWRlYwYTFvelpFVlZWbXhMVXpJNVlWTlhhREpaTURWQ1ZWVldUVkZzUmtKU1FYQnVXakJXUTFGVlpIQkxNbVF3VGtkU1dGVnNTa0phVmtwT1pETm9iRlo2WkVOWFZVb3lZVVZvUldJelRuTmFla0pIWTIxV05Vc3ljSFZpUlU1SVRqRktSRlI1T1U5WFdFMHdWRk4wZG1SR1dYcGFWM2hXUTJwQ2Frd3pSa3hsUkZacVYxVmFTRlJFUm5SV1IwWm9WVVJHYldWdGJFaGtSMlJPWVcxc2JscFdiR3BNTTA1cFRqQXhTVk5EZEVSaE0xbzFUMGhPYlUxcE9VOWtiVXB1WVRBME1GSlZkRzlrUkdoVlZGZEpTMDR5ZEZKWFZrcDFWRVpHVUZGdFdYZFViVnB4VGxkd2VWcEZaRmxXVlhSb1ZHczFlbVZJVlhwTk1VWnpUVzEzTTA0elJqSmxiR3Q2VFd0emQxUkhNVEZUUlUxeVpWZFZkbFZZWkV0aU1sSXhVMVJrYjFWM2NHcGFibGw1VDBkek1XTnNXa3RoTWs1TFRVTjBURTR3WjNKaFZXTXhZa2hLYlZkV1pGUlZiVTU1VkRKak5WSllRWGRpYVRsRFZURm9NV1ZxV2sxaU1sSjFZM3BhV2xreVduaGhibWh1WXpOT2NtRXdNVEpEYXpWb1ZERkNTVkpWVmxsU2VtTXlVbFZqTTFWSGRERmtSWGd4VjBSU1NtVlVWak5PTW5kMlZYcENkbE51WnpWbGEyZDRUbXRHU1dKNlZsTlpNMHAyVVZOMGVsWjZaRWxPYmtKNllsTTVjazFyWnpOaU1rMUxXa1JHUmxGcldqWlRWbVJEVjFWb1VGcFlXbXhTVlVaVFpWaFdhRTVZVGtwWmJVb3pVRkZ2ZEV4VE1IUk1WVlpQVWtOQ1JGSldTbFZUVlZwS1VUQkdWVkpUTUhSTVV6QjBRMmM5UFNJc0luWmxjbWxtYVdOaGRHbHZiaUk2ZTMxOVhYMTlMQ0owYVcxbGIzVjBjeUk2ZTMwc0luWmxjbk5wYjI0aU9pSXlMakl1TUNKOUxDSnVaWFIzYjNKclpDSTZlMzBzSW5CaGMzTjNaQ0k2ZTMwc0luTjBiM0poWjJVaU9udDlMQ0p6ZVhOMFpXMWtJanA3ZlgwPQo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-machineset-0.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgbmFtZTogY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1ldS1jZW50cmFsLTFhCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICByZXBsaWNhczogMQogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLWNsdXN0ZXI6IGNsdXN0ZXItMzQzZi04ZmpragogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBjbHVzdGVyLTM0M2YtOGZqa2otd29ya2VyLWV1LWNlbnRyYWwtMWEKICB0ZW1wbGF0ZToKICAgIG1ldGFkYXRhOgogICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBsYWJlbHM6CiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS1yb2xlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmVzZXQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItZXUtY2VudHJhbC0xYQogICAgc3BlYzoKICAgICAgbWV0YWRhdGE6CiAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgcHJvdmlkZXJTcGVjOgogICAgICAgIHZhbHVlOgogICAgICAgICAgYW1pOgogICAgICAgICAgICBpZDogYW1pLTAyZmRkNjI3MDI5YzAwNTViCiAgICAgICAgICBhcGlWZXJzaW9uOiBhd3Nwcm92aWRlcmNvbmZpZy5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAgICAgLSBlYnM6CiAgICAgICAgICAgICAgaW9wczogMAogICAgICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgICAgIHZvbHVtZVR5cGU6IGdwMgogICAgICAgICAgY3JlZGVudGlhbHNTZWNyZXQ6CiAgICAgICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICAgICAgZGV2aWNlSW5kZXg6IDAKICAgICAgICAgIGlhbUluc3RhbmNlUHJvZmlsZToKICAgICAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItcHJvZmlsZQogICAgICAgICAgaW5zdGFuY2VUeXBlOiBtNC5sYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIHBsYWNlbWVudDoKICAgICAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogZXUtY2VudHJhbC0xYQogICAgICAgICAgICByZWdpb246IGV1LWNlbnRyYWwtMQogICAgICAgICAgcHVibGljSXA6IG51bGwKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1zZwogICAgICAgICAgc3VibmV0OgogICAgICAgICAgICBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXByaXZhdGUtZXUtY2VudHJhbC0xYQogICAgICAgICAgdGFnczoKICAgICAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-machineset-1.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgbmFtZTogY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1ldS1jZW50cmFsLTFiCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICByZXBsaWNhczogMQogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLWNsdXN0ZXI6IGNsdXN0ZXItMzQzZi04ZmpragogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBjbHVzdGVyLTM0M2YtOGZqa2otd29ya2VyLWV1LWNlbnRyYWwtMWIKICB0ZW1wbGF0ZToKICAgIG1ldGFkYXRhOgogICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBsYWJlbHM6CiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS1yb2xlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmVzZXQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItZXUtY2VudHJhbC0xYgogICAgc3BlYzoKICAgICAgbWV0YWRhdGE6CiAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgcHJvdmlkZXJTcGVjOgogICAgICAgIHZhbHVlOgogICAgICAgICAgYW1pOgogICAgICAgICAgICBpZDogYW1pLTAyZmRkNjI3MDI5YzAwNTViCiAgICAgICAgICBhcGlWZXJzaW9uOiBhd3Nwcm92aWRlcmNvbmZpZy5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAgICAgLSBlYnM6CiAgICAgICAgICAgICAgaW9wczogMAogICAgICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgICAgIHZvbHVtZVR5cGU6IGdwMgogICAgICAgICAgY3JlZGVudGlhbHNTZWNyZXQ6CiAgICAgICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICAgICAgZGV2aWNlSW5kZXg6IDAKICAgICAgICAgIGlhbUluc3RhbmNlUHJvZmlsZToKICAgICAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItcHJvZmlsZQogICAgICAgICAgaW5zdGFuY2VUeXBlOiBtNC5sYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIHBsYWNlbWVudDoKICAgICAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogZXUtY2VudHJhbC0xYgogICAgICAgICAgICByZWdpb246IGV1LWNlbnRyYWwtMQogICAgICAgICAgcHVibGljSXA6IG51bGwKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1zZwogICAgICAgICAgc3VibmV0OgogICAgICAgICAgICBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXByaXZhdGUtZXUtY2VudHJhbC0xYgogICAgICAgICAgdGFnczoKICAgICAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/openshift/99_openshift-cluster-api_worker-machineset-2.yaml",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgbmFtZTogY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1ldS1jZW50cmFsLTFjCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICByZXBsaWNhczogMQogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLWNsdXN0ZXI6IGNsdXN0ZXItMzQzZi04ZmpragogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBjbHVzdGVyLTM0M2YtOGZqa2otd29ya2VyLWV1LWNlbnRyYWwtMWMKICB0ZW1wbGF0ZToKICAgIG1ldGFkYXRhOgogICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBsYWJlbHM6CiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS1yb2xlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmVzZXQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItZXUtY2VudHJhbC0xYwogICAgc3BlYzoKICAgICAgbWV0YWRhdGE6CiAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgcHJvdmlkZXJTcGVjOgogICAgICAgIHZhbHVlOgogICAgICAgICAgYW1pOgogICAgICAgICAgICBpZDogYW1pLTAyZmRkNjI3MDI5YzAwNTViCiAgICAgICAgICBhcGlWZXJzaW9uOiBhd3Nwcm92aWRlcmNvbmZpZy5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAgICAgLSBlYnM6CiAgICAgICAgICAgICAgaW9wczogMAogICAgICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgICAgIHZvbHVtZVR5cGU6IGdwMgogICAgICAgICAgY3JlZGVudGlhbHNTZWNyZXQ6CiAgICAgICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICAgICAgZGV2aWNlSW5kZXg6IDAKICAgICAgICAgIGlhbUluc3RhbmNlUHJvZmlsZToKICAgICAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItcHJvZmlsZQogICAgICAgICAgaW5zdGFuY2VUeXBlOiBtNC5sYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIHBsYWNlbWVudDoKICAgICAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogZXUtY2VudHJhbC0xYwogICAgICAgICAgICByZWdpb246IGV1LWNlbnRyYWwtMQogICAgICAgICAgcHVibGljSXA6IG51bGwKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1zZwogICAgICAgICAgc3VibmV0OgogICAgICAgICAgICBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXByaXZhdGUtZXUtY2VudHJhbC0xYwogICAgICAgICAgdGFnczoKICAgICAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo=",
                            "verification": {}
                        },
                        "mode": 420
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/auth/kubeconfig",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/auth/kubeconfig-kubelet",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/admin-kubeconfig-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWDdyRFFPT0dCQmt3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB4T1RFeU1Ea3hNRFUxTlRaYUZ3MHlPVEV5TURZeE1EVTFOVFphTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzRBRko5YUZTZ3lCbDFIeTcrSUwxTUhLZ0pJa1QrUmlFKwp3ZjBUd3BVTFhHUWdsY044MThKd29HMTNQMm45b1lWZmd6VTJRVGNQNmpkeW1lcTlOQmgyMWFKa2VyWkZuQzIxCmV3N0RtdTFtaGJyc0pzVWhyRE1MUk1KVzJLTWRRSWRmSmZpZTlZZ3BKRXRWTllvUjNGT2pFUE1hUWhsUjdYL0kKOGRVeURYd0xReGxXMEFCTndoekExMmhwRElTOWh0WmZ4MnBmeUdVUy9FNUdGaENwODMzMzdnTUtneGFucFB0TApKVWtXaEVHRDlxaUpxajZSWEQvNGpQdUpjYm1oY0plT1o3WmtSM3RFRm5RVW44aVlmYkNRWU9mS3M3dStFMVBHCkg5UXhwcnRSclZmak1UQ0ViaDFVZkNlZGhBcS9VRmxOWkpLZk9JUU1XKzlzbzZHa1lwVXJBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlN3UjBMMApnRUhIbXQrK3cxVUFtdDU0dlY2bW5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFzUVlqcGgrSnM5TGkvaXpYCkI1STFtUFpHenRBNmV0Zi91RzRWemhCM2ZZcHFTMmZ1blRwUU9HaGR0TmhGblYxUXNVbFd6aHlsbklxNFpHekEKSThpcHFTUlBNS0lMYXp5bTN2ZmI1MWtONHhXQy9Ncm9CbnVUN0N2azJHT1dGNjlDMDRkbHh4d2pyN1dKd21PMQpPaEM1RXJGVFB5aVpoUXJkSTQ3UzUvVi9OcnRBV3p0REZab25DdERCU3pEOWJER2NVWHd2SzF2U1RoTVpnVjNUCi9KVTlLQUtqY1J2WkpQRk0xc2tiTjlZMUJhdTRGYXpGWUYycnhwSWI1cFZVWmpsZDRjZkpTdGxWWjlhUUU5VUkKN2Z6L2FUR1JNanNiamtQUGQ5d2pncE5zL0JPaitGditXNVl1dWhqRUhPS283cWtwQ3NMNU1obUJ2NStmZGhaSgppdkhCcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/aggregator-ca.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMTFWM0F0eENCbTZvU29WZG8xSlo1NC9BN0ZsbjZQcU42STlHNkhOblI3cGRCTFhkCkZoVWgydHVYcEVvMERVS3hDL3RZY3Z0SWU2Y2hnZ2F5STNyb01FWS9QMm41OEk2VSt4cS85V2lJOEJ4V0wzTjAKTVNhd1ozM1VXcGxjYU9qZUVXSFA4VHExeHpvUXVlaUQvV2JtQTlQWUJRME1SdW9GZW9yS0xaaU9zR2tnUXlRbwo2QjEvRVhKY2JlVFdVWTZvZnhWMGdJWUVnVnBlVENYd0tMY0RwT3M2NmtGaWNob0dGTHV6WjIrcS9uRXNRYkRnCjlCN2pBU3lCU0pZazVwaGFTZWk5RVZXWFpFREhlQlNiK1dhSFJla0NxcGNQN3NWMlBxZ0tWTWxPNlJseFh5Y3oKK1FEcnBpVFBEZWlIUi9ZVEJmdG9samcyaW5tUkc5ZE9hMmtrcXdJREFRQUJBb0lCQUZIYzRQREtjYU5tWUQ1cwpjMHZLMi9rSGtxMkgwOVFqcE4xNzB0WStRVTVva0VKaExWcmV6ODhYV3BBUDBiZ1UyYUFYZnVtL2xDL0dPeHZtCmxjU2RUalpFRG5sNlBaWHhicndEMEdSb3lGNllOeiswNGNCcDEvaVFRckhxeWRIc2JiZ24rbGpZSEJGUWh0bFcKaHc5SUZqdndScGlzL0RUZGRSWEFPOXFYdSs5ZVpWaFdQZkpFS0NUZmRvNHFxVCtnMlE4cWRvTDU5ZWx0RHBvUwpJTzZlcGJPNFVneC9ERWZUK3lPa0FXZTBjMklmQlptUVQ3dXMvYkxMcWdBR2Z3dTg4T1F1aWJvcm0yeEdvMG8yCjNZR3phaU1yZDRqWUJVVDRFNzUwdE1udDJPQUk1NTBpRG40aVlXbTdDMk9rQ0hTWDZrNnR1TG55YlJFc21pT3UKaGNDRHRlRUNnWUVBNUJ4RDBzYzREb05OTnhOTEVaMG1XWVE4eEhhVVBoSmZtcWNPbmtsVDRiMzI4VEhubkpnRQphbVZCQmdybEx1WXMvY0JUUDRMVERjY3o4WjhDbWtraG9ncDBHN016RDlaU0Z1VHdOVXltQ2VUOHpYWTdOSXNhClNlKzZERWdCWktDMGg5cUVkWU5YbXQ2eWk4MTBmNS9mRmJ4NUxKWUd3dXdaNSs0Z0wzSDBrSHNDZ1lFQThhbE0KNE1DdzQ3SWthWGhpcmlDeHFodXVCT2ZCUDIxYlB0N3hGalZwenM0VUVocVJXaTZmdHNEbmJUZlIzOFFjUnRTUwp0VGpSVjNGaFE4NUY5d2ltNmJodG9sRGx0MktzbmJqSEZrU0RkVlBMbm1nSk9ZeUhTOFBDNVpRcXpadE9EZGJ3Cit5NjVlNUFSN0hadTgvNkV6SFJkZks5VDd5WGtxQWovQlVHQ1BaRUNnWUErN3ZGaldLVkZrOEljM016TU9rQVgKV0YxdmtvdUpxSVlKNCtjcmttMTdEVzd3MG1UbEZpZTV0dCsrckFqWTdKWWpHQW1mcnhkTmFOVVM1MXpQZGplNgpQZ29VamxjYkduVWhiZDQ3eGo3VTRnRkJLa3BoVDdOY0RMQ1dyTkw5a1R6ZGNsTXpISjV4MHRrTnF3eG1IWlJ0CnFjY0FudytVZlpFVUpPVnFVWlU0dXdLQmdRRFdNSzl5R1hmdktNcTdMTGVTREdwTUVxS0h1SDRBNE1WYUVUSHYKOUVHbXllTGlOT2dWM1hNMEFRQmVQblpuZGFOMmFCenNRTUxUVlN2WGRIRnd4aHRpMWxOZDVZUGxxYkREVHE0dQpuMlZBelplUS9EY0k2ZlJWQTlxdnIwYk0yOVV2MFEzZ0pBYkViT3BtQW9iTy9nem9SazlDSHdndTFCQTVtMWVsCmFlMnM4UUtCZ1FDQXkyTzRwRThFU2hUWVBnUHdwQU05MDNjR0JxOGpWcnlUZ1J5Y0pJQ3lCczZndVV5clI0NTUKQ3FtYVVES0NnaXl2MlVJL3ROZTJ6eUZUWEVxWHBHb0c4Tlgyb0tjV1RSQ2ZwcE5pTTFPL1RPaTM3Y2c4MWQ4NwpqM2diY05WM1JmemlFL0ZRTjJ3OVdpQ1Fmd3hHL2FvaXVxRm1zbUh4YXRMeDBES0ViQ2lqaFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/aggregator-ca.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lJWVJYZDhDRjBUa293RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRreE1qQTVNVEExTmpBeApXaGNOTVRreE1qRXdNVEExTmpBeFdqQW9NUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEVUTUJFR0ExVUVBeE1LCllXZG5jbVZuWVhSdmNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5kVmR3TGMKUWdadXFFcUZYYU5TV2VlUHdPeFpaK2o2amVpUFJ1aHpaMGU2WFFTMTNSWVZJZHJibDZSS05BMUNzUXY3V0hMNwpTSHVuSVlJR3NpTjY2REJHUHo5cCtmQ09sUHNhdi9Wb2lQQWNWaTl6ZERFbXNHZDkxRnFaWEdqbzNoRmh6L0U2CnRjYzZFTG5vZy8xbTVnUFQyQVVOREVicUJYcUt5aTJZanJCcElFTWtLT2dkZnhGeVhHM2sxbEdPcUg4VmRJQ0cKQklGYVhrd2w4Q2kzQTZUck91cEJZbklhQmhTN3MyZHZxdjV4TEVHdzRQUWU0d0VzZ1VpV0pPYVlXa25vdlJGVgpsMlJBeDNnVW0vbG1oMFhwQXFxWEQrN0ZkajZvQ2xUSlR1a1pjVjhuTS9rQTY2WWt6dzNvaDBmMkV3WDdhSlk0Ck5vcDVrUnZYVG10cEpLc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRS9BNWtoMkloYlNNeVkrT2FLM3oraU5BY1RHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRFYvdmZPRlNXNllBYUpTZW9LSW9taDk5RllUS0VIREd1enZ5VEh3TmlQOVFKUzR5djFKaGxYCjFFRXhQaWk3cHoyemJicFNaaUNhSnZNTmtRM05SNHNHQUwxREtsbGEwZEdOSy9wbkNTZ1FvUTRLbmM4MUh6YWUKMHhoVnJvcVZhSGdvb3JpUEsvQ2lVSkhLbnliN0lkTEdBVFlINnhsWS93UnhDME85U2dIYjBsUmFiRWN5QTRxawpoZ082TEFvMHpqZ1lENThKeEZndVZpb0VUYTF2QUtESkJ0eWc2d0NTR2NWMzIrRjJvRG10eWVnSTJCSWhZU2EwCmoyV09TYWJ2UnM4aExYNDZHRnprVDRSSk02YXBhYlNwNFNqYk9PN295NHZ4bVVLRnRHSDh4QXVQbDlhVFBnTVYKK0ptSlhVMkdqd3dROG1SZEU4UkRzbHhCRVBaQjZ3dTgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/aggregator-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJRE5tTUxIdkFIZHd3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB4T1RFeQpNRGt4TURVMk1ERmFGdzB4T1RFeU1UQXhNRFUyTURGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDNTBXV0ZpQ09EQUxZQmJxZk85RDlEWUxwU0lUWHJWcVRjVXFHL1NldStlQ09IT2Q1VAo3TC9vV01mb0FMY2JWUXptcFA3eElBOUo2VXNWQjZPVUtxMHkxdFEyTlB3ckNuSjUyZ3d4VXV3bE9HcjNNT01TCjJsMHA1TDFSQ1ZKZVRyUVM3bDE4NVZIUGk3bWF6bmpXcFhpK05MUzY3Mk15TTdVT2Y2UFBMMWlnOCsvcVVmekQKakFUbko2T3Q2Z295cDVVVnltcjR2TXJrTWN5VTM5Rkd4NHg5aUZXY3FrMU5yNUprYmJMb01HV2hrZG52LzcybAoxdHpqc1gyNnVhRVg1TjMyZUlRdEFaZHhRV0RDbnB5bzJMMDNZWDk4ZVBNeUQvQTc1NUZqSWJ2MSs0RjZzQW9HCmY0d2V0UklEUGw0VE9lMUl1K0l2dGIrZGo0K1lxZmtSUFpMVkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGRVazI1VzdPV0pVS1VMdERacTd1WApScFZZT3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWVEQ3RYVjFCK05iMVhyS24vR3pJcjcwVWpOQTVBYlI0Cko0WEhxV0UxTXRaOHZRSlVzQ3QxM3VldHFpcmN3NDBMbGdjUlZxb3JRNmE3bUFhMzQvai8ydTRoT0JSZUIwaTkKQkFqWmR1ZEpBQzE1TTVrWlBvSjljMjZRN3luSGtTL3k5K3ZiWG0waDdTd0xHQzNzSmdUQTk4cGdlcW95VXRwTwowK2dHT01vWVJNNEFmdjBsQUZMRVpENnE3VEVRNEI5N2Rhc1o5RmZReEV3NVozYUV3dVAraHROWjlxUXdJVVpiCmEwSUtrOXdpdVJjcGhJQjRwOUcrN0ROMGUwbGpnUVVJcEZUY2RoNnR6NDcwbXlkNGRVRU1xd3hzVUtlTERJalEKaFRUaGswQ280OHBwOWVFbE1HaFkwVW8vSDVtK2thL2VvNDZOei9SZnVVQkRsN0w2amIzdHZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/aggregator-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBM1AzUUE4RmtyY1BJU0hGQVBONmlqS1BhQjl1ZzJwNk1neWpCL0tna0tyUmdrRlg0CkR4cktRQVNiK0VEcXY1cUp2TFNPYXZPSmQvTmNvbDJ0TEpldHAvSHN1aHRFc3prR0hZcll2cTd3MmZBbndJdlEKWXZLbFRUbDVoMmVsVWRWeUpmTWw1R0dLZnhjbmUxek4wNGNSdGpsV2JoYjdXUTVYYUc5R1A5K28wZkkxOGhNOApLczUwK1l5ZFkyK2VaQWgzN3ozbTBNTVZ1SEwrYmI2Ry9TUEdzdnJXZ0NMdmFxbzdYRSthd1ZUL1NxTDRHTXQ4CnlwV0RXd3d2RFU5akQ0TmVCWjdLYW03cHRKODc2UGxPaHY0UHN0bUFTdDBiekU1cXBrS0tEZzVHeFl2eHlDMHQKeWN0ZWZWS0lUQ1RpcHJZS2lMV1dZRDl5RGRzZ3ovUnRkYUJzQlFJREFRQUJBb0lCQUF2QVgzaGpwMVBxTGxOVAoybU9pUHlpVmFmbXkveW5BOXAzZTQvbm9nd3ZXVGJBL01oS3pqUCs4ZndMRGlQZ3BZcHVyU2t0N3FkcThFVGY5CkhVRmF5M3c3ekNmVlhXRGVibW5Sd1ZiYWZLcEtNQUw0TEZ1bXBZMm11Y1N1aVVjQnY3RXU3ZHZvSi9JOEsvaE8KWmcrU2hpbVhnUFlYdU1QeWxFbFVhWHJxRE5NbEljZ2xvNXZrMEJ4NXg2QXpyQTF2MUpmT2lpcllzcFdzK21UaQp1RjVzSjNRMW9QNm9WVkltZERyWlh3TFZkQ0xzTGRBWjhHVkVEbUVScHVpS01kSGs1a1psMjhnbjJnNldGajVXClh3dzJIUkRpaGRhNnhUZHJpdit0UUxVdUVaMnZLNmlFWE5BZlpkRFFiditHU01HMGh4bERLSlFNRENZbEhyR1cKMEE0ZnhQMENnWUVBL3JaTERveVgyRGYwaGFkYTQ0UDdpNEY0SDA0S2Z0Q0VaRGtjSWdKbTVwT2xMNEdWNjBKMwpuVGdtRGQ5U2R1cVY5WjhpR09BR3dTM3laaWxaSUtqcDdPSVVwN01KLytLVHZyOGpIVnFlSVZxcjVJaWNpbGNMClVma0tyOEdLMGdIYWpxbStqT2VMcy9DNmdpR01iZ2xMQVJnbGJyclZMazgvY005TThHdzFTTGNDZ1lFQTNodmUKMGpLUkhKLzFZR0s4REVJZ0JUWHZXN2hJR0JjeWk2dkdPUjFmRkVBcUFPS3ZzSm1pQm0zTDFCOHFmdkhxSXY4VQpQQlpPSkU1eXZsODNZOUZIMFd1RXI4RUxSNFV5bExaUTZWekZnS3dZMXhnVVdjTmRncWp3YkhLbmlmQTVWUW0zCkxpNURETDhkU2tQRlVVaFZUc3lXTUtxVnFlajVOZ0svVUpsN1hTTUNnWUFpdzl6UXVvM0xIREFLd2dIY3hkbmkKZTZSYW1YdERQZENrSVV0ZXRQYzRoM1JuWEllSzJjS2J1ZHN2ejRoZzVMbmRFWUJFNXVibEhSRlZzbFVRNlIwcwprTnNDM0tRRHdmZ3FjOG9tS29Va3hreHAzOStGM2tXVVJhcVl2SkRuQXd2Q3B4WjBBdktGZDlqdEJBazN4NXJ1CkprNk5vNENQVm8reEpRbzZVbnFmVndLQmdFVkdtaHdqcTRFckh5U2VCeHNuc01jUFNJWHFGNHAwQ2M3b2w5NE8KbkM0N3lSNFhsa2JWMUdSKzhIbEw4encvQmhFK1VEaGhtS1BZV0ErcXNTTVFEbjl5TXFPQzZacTRIOHVraGQ0VAprb0tNcXY3RHd1MHdjMFVpbmtLbERENkl6OGtIUzd3NnI2MFZHdlNqNkxKdWhqVWF1S21iT3kwUXZsSXJUeks3CmZHL1RBb0dBTFhXQzVBSWNjVTRrUlVmY1FETVBURmhtVks2UGxVeFZxekdGMjVqUjdHcEdUeXVtSWtVK24wTWIKR1JiWXZleERuZXVLT283Ry9QM2hqZXp2dzFtSzUwM3ZGdmNQcG85VDRndlhXMVIyWnRUQ1VIcEVSSE5ESm1hUApjRkZmRExJa1NXQkh0RkV1cjY3MVVYZ25JbFg5VUREaGRMOHlyMlkva3RUR25ycDZRTTQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/aggregator-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lJV2txSGdub2hBOUl3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB4T1RFeQpNRGt4TURVMk1ERmFGdzB4T1RFeU1UQXhNRFUyTURGYU1Ed3hGREFTQmdOVkJBb1RDMnQxWW1VdGJXRnpkR1Z5Ck1TUXdJZ1lEVlFRREV4dHplWE4wWlcwNmEzVmlaUzFoY0dselpYSjJaWEl0Y0hKdmVIa3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRGMvZEFEd1dTdHc4aEljVUE4M3FLTW85b0gyNkRhbm95RApLTUg4cUNRcXRHQ1FWZmdQR3NwQUJKdjRRT3EvbW9tOHRJNXE4NGwzODF5aVhhMHNsNjJuOGV5NkcwU3pPUVlkCml0aStydkRaOENmQWk5Qmk4cVZOT1htSFo2VlIxWElsOHlYa1lZcC9GeWQ3WE0zVGh4RzJPVlp1RnZ0WkRsZG8KYjBZLzM2alI4alh5RXp3cXpuVDVqSjFqYjU1a0NIZnZQZWJRd3hXNGN2NXR2b2I5SThheSt0YUFJdTlxcWp0YwpUNXJCVlA5S292Z1l5M3pLbFlOYkRDOE5UMk1QZzE0Rm5zcHFidW0wbnp2bytVNkcvZyt5MllCSzNSdk1UbXFtClFvb09Ea2JGaS9ISUxTM0p5MTU5VW9oTUpPS210Z3FJdFpaZ1AzSU4yeURQOUcxMW9Hd0ZBZ01CQUFHamRUQnoKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUIwR0ExVWREZ1FXQkJUZFVrMjVXN09XSlVLVUx0RFpxN3VYUnBWWU96QWZCZ05WSFNNRUdEQVdnQlRkClVrMjVXN09XSlVLVUx0RFpxN3VYUnBWWU96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFFbjJxdFJVa3BES0QKN0xSVWFYNlVDQXp5Nmszd29MSXdpV2kvckQrZE5jZUJJTExlQ1g4TTY5WXJieTlqTlRMdldwS09Obzljbk1pSQo4LzlzRXAwZ0RlZ0NhQVhQNU5zY3VSZ1pySE9OcDZqcWRkMjBiUjg0RHpBcVJpck1kTEEzemJYMVl4NWRCZDkvCm8zZlBSTWFOd2hXZzdPR3hxemNuekc0YVN4VGtxTEdRd0wvdVU0czRRK0thTU50bEJLZkNOYXgyWWlvK29aaVcKQjhhUGQ2U2l5QTFiU29xSkRnN1NDNGVyZHBTK2hpVVIwVENsVFJudytyOCtoc2xlWi9mcnFMbkZhR25rZDF2QgpuTGR5U0g5Um1zcjBGY0J6UllxdGUvNVhpQzVSaHZMYm81U2tHUXRXeG92VXlVWHhkVzJNcFd1ZkFVRlpuUzJrCkJGbGwxNHo5dVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/aggregator-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWRGbGhZZ2pnd0MyQVc2bnp2US9RMkM2VWlFMTYxYWszRktodjBucnZuZ2poem5lClUreS82RmpINkFDM0cxVU01cVQrOFNBUFNlbExGUWVqbENxdE10YlVOalQ4S3dweWVkb01NVkxzSlRocTl6RGoKRXRwZEtlUzlVUWxTWGs2MEV1NWRmT1ZSejR1NW1zNTQxcVY0dmpTMHV1OWpNak8xRG4ranp5OVlvUFB2NmxIOAp3NHdFNXllanJlb0tNcWVWRmNwcStMeks1REhNbE4vUlJzZU1mWWhWbktwTlRhK1NaRzJ5NkRCbG9aSFo3Lys5CnBkYmM0N0Y5dXJtaEYrVGQ5bmlFTFFHWGNVRmd3cDZjcU5pOU4yRi9mSGp6TWcvd08rZVJZeUc3OWZ1QmVyQUsKQm4rTUhyVVNBejVlRXpudFNMdmlMN1cvblkrUG1LbjVFVDJTMVFJREFRQUJBb0lCQVFDWmUrbmtpMWZ4M0lONQoyV0lJNHR6aWxhSXhOcmRuNVpDVllEZTBYcVc0RlZvYlYyUmFaQ0w4RTJGRU5Gc0syNHlsY3NJV2Y0bkJYazhqClZzVDZIT29sSlNmeWduK01PYnZuQklHdnVEUFFacktMN2JpU21RWDlGYkIrb0RtR0puSTlkT0NKeW8xeDVwTHYKMlA0ZEpsNytsV0IzVEViZWI3RnRBV2RZT2w1MXlzQUhpeG5vRU8rc3pqbzZ6cTE4UGNkaVZiVllCaTNoZmloZwpDK0xtdmFFbHhKa3QvTmVLK2pnNEk1OC8rSGhoVTNMOHZoejgreHJwRmZUWDVpV2ZZY0ZUb2xjYjNhRzl2TURjCnhQWENvZ2MzWW9nWWpUUytzVWJvS0JWcTcrWS90Yk43UnhER1h4U3N1dENaaDVuV216UTZjWExic2c2R1lUemUKc1poVHh5OGhBb0dCQU45REVvRDU3T1RWbU05M3BDWkRlTjJZdnRIMzNVcWZINkp4RmNpaUwwSk1hY0FrRnlGaApvUGNhc3lMS2Q3THExQ0QwaXFPaDgwSGhlZ01jYnpuY1F4QWVpS2ZsMEdXRVhIRHpPUzZwZU84cHdOTkZGSnlNClRlR1RyeFltRmdwcDZveEFkT0xjRmdpcS9ZZ2JSQ3B5UUcxc2hOaUdCUEZ0bWdya1ZVRk9rVE1aQW9HQkFOVVEKdXROY01pS1V1WG5LcE40N1BUOE5Wc1haeFRzOGJrT3Fubjk3YW9sUEo3ZExvU1gwY0NtQkczRDZHVG9JZHlKNQpKWlFXT21LSE4rWnpxR3l6dGgzdHlYVHJCZnVBVDkwSzZhWGNDaG1xTFEyM044akdjZ2RaUHF4OTZ2b1BaeUZyCnd0RDArOG54M1BvMDBKQ2p2dU5LZzE1ZGJnQlBGa294RVduTGV6RWRBb0dBVWxlZmZIZ3crZGtaaWZNYlZJMXcKQjNLdGRpMVByWlR3aXUzZ1ZlWVRQZ1dHdnpuUVdoeHl6SkJKWDF5RE56YkswL2k5SlVxMnVDYWI1SWZaTWVMZAp6UlVsMjU2ejlLMFRsd2p0bnhzY0lrRXBBQUtyYm0yRXo5eXpKNTBXWmZMWWNhL1lMRTkxeE82am9VNUZIczZTCm1vajZtZzBieDV0ZnhBS2d1dnhxS3drQ2dZQlU3S2dxMnRLNDZlTEw0ck80U0pCdTgxZ2s0Rm8yOUMxWEYwaTUKczIyUmNWVjVQOUhwbVBhajlHd0ZxZ29vRVh1NjUrTE1sZGVMc2kzYjB6bk1xZ3pxL1A2UmRhUWF6TmdJV1BNcwpRdnBicEhMMHhwU2JtRTJYRkVGZzY0ZWZTRWhwRDlURkNRRGJTMll5N0o0OUtLZExYVVhqZFFZRlpZQ1M3ZC9zCjlVZ1RHUUtCZ1FEVjJsQlVUemdMeXVQd3dHS2xXeDl3UVZFRytjQWlQRmNVWDRBMHdwQzZPNWZnTk15N0I1emoKMVBWeUZjeFJnZWU4L2h3anlYYTZHdURwYkxJOGNvVTNMZXhiVmhBYXBIM2Nsb0pUamF6d2hmdGdMM01jM3kzNgo4bzgzZmNJQmh2RnBWdWkrZWVGSGNYRWl5d3VnNFlWcE9FK3VHT2t2NW9yeDM2b1hwUFIyUnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/aggregator-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJRE5tTUxIdkFIZHd3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB4T1RFeQpNRGt4TURVMk1ERmFGdzB4T1RFeU1UQXhNRFUyTURGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDNTBXV0ZpQ09EQUxZQmJxZk85RDlEWUxwU0lUWHJWcVRjVXFHL1NldStlQ09IT2Q1VAo3TC9vV01mb0FMY2JWUXptcFA3eElBOUo2VXNWQjZPVUtxMHkxdFEyTlB3ckNuSjUyZ3d4VXV3bE9HcjNNT01TCjJsMHA1TDFSQ1ZKZVRyUVM3bDE4NVZIUGk3bWF6bmpXcFhpK05MUzY3Mk15TTdVT2Y2UFBMMWlnOCsvcVVmekQKakFUbko2T3Q2Z295cDVVVnltcjR2TXJrTWN5VTM5Rkd4NHg5aUZXY3FrMU5yNUprYmJMb01HV2hrZG52LzcybAoxdHpqc1gyNnVhRVg1TjMyZUlRdEFaZHhRV0RDbnB5bzJMMDNZWDk4ZVBNeUQvQTc1NUZqSWJ2MSs0RjZzQW9HCmY0d2V0UklEUGw0VE9lMUl1K0l2dGIrZGo0K1lxZmtSUFpMVkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGRVazI1VzdPV0pVS1VMdERacTd1WApScFZZT3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWVEQ3RYVjFCK05iMVhyS24vR3pJcjcwVWpOQTVBYlI0Cko0WEhxV0UxTXRaOHZRSlVzQ3QxM3VldHFpcmN3NDBMbGdjUlZxb3JRNmE3bUFhMzQvai8ydTRoT0JSZUIwaTkKQkFqWmR1ZEpBQzE1TTVrWlBvSjljMjZRN3luSGtTL3k5K3ZiWG0waDdTd0xHQzNzSmdUQTk4cGdlcW95VXRwTwowK2dHT01vWVJNNEFmdjBsQUZMRVpENnE3VEVRNEI5N2Rhc1o5RmZReEV3NVozYUV3dVAraHROWjlxUXdJVVpiCmEwSUtrOXdpdVJjcGhJQjRwOUcrN0ROMGUwbGpnUVVJcEZUY2RoNnR6NDcwbXlkNGRVRU1xd3hzVUtlTERJalEKaFRUaGswQ280OHBwOWVFbE1HaFkwVW8vSDVtK2thL2VvNDZOei9SZnVVQkRsN0w2amIzdHZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/apiserver-proxy.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBN3ZiaWR2NEl6NTFJcmcxdnNpRnlYM3lvazFoVy9xWFhRZ0tIVERWUkJnSUx0MlBBCnRrVUM3RVVORnpsNGtqZ2NObWZ5dEpjVzZKUEtIY0pUTmtJR2FnVitpK2JCYlZKLzN4R1V0OHBhUUV0VGhwOXcKQTFvUTdacGY4UGE3aDRpVlJUeWFkZCtFbmJiZ2J2TlY5TlpCbjU0NzRiWjhTWmcvVHMyRS9zT3dsL3dVeVNSWQoyeFRHZFZ3dkZobXRmMWFLRFVEY2QvRHQyNzJ5a2NObmF1RXFXbnA4S210R1hDd0R0YzZBdS9tbXdUYllPZkNHCmNjMkhoS296Q3NpTW9ZaDFmbU9qRDJCUGNBMmxTL2RkenBsQTJrc3lzeE9hMHpRQjEwOUhseEdiSWVZRmV1ZjIKeVV3SW9GNFlhSG84TkJaVGpaV2RqZkxDUmJpSmpmekQ1R04vU3dJREFRQUJBb0lCQVFEaHg1Qm5mMVFSM1hqTApRdFN6Q0ZrSkVUNHhvWGpvdHdhd1RyVkk4dU12K3dUWTdENHJ1UDZ1Ly9zRFk0Q2hIclRCVHV1SloydjBxWmFCCkVaY1BuOGh4cWVsTUErWGtCZHZkaHIzdC9SblN2NWtXakZRSVJyUFIyMWNrMCtxUmZ5SVNQZFZ1NDVab2NWNlMKVmdWMEJIQVNnUzN3OER0MFNZNGZSWjJRSEpNZ3RPL1NROXV3d1lScEs3RWlESktycmJJQ0xUSjJ4QUdrb2prQwpSSzlsR21iQVd4aDM0SU04V3UrZVd4c3RaMmV1ZGtDbEhNM050eGxWelV4SGI0SWVlaElHL1hRckcyS2wvQW5uCmoraCtJcFNuSU1oSlhSOUFYVS8rdGRJRnNvYTVRYjgrcGNYOS9sdWdXdXczU2NLMHczV2dPTWo1UWQzQlB4dnQKQnNoR3FxRnBBb0dCQVA3ZlYrZmhCbi9pMHpXRGlKcHYram93aFA1dXNhd0pOeXIxdHdhZ2ZHNVcydVJNTGo1bgo2YjM5SnExMithOTk0anpiZ0tyT3hLRHRab1lVeVdpWXJUOE4xM2Jzb250YUNPVmQ2cjUvSTBRMTdNQUhES3RJClJnK29OWHBKRkU0VGgxT3dvY0oxZjV0OXNpTEtjaW1YSVZsWWk3MTJLMCtkaXZWdStmSnVsR3o5QW9HQkFQQUYKaGtoTkRod1BpUUxHeStrc28yQ3pwNVBpS3ZHUWp5V25UN3M2c3M2aHhQQm9qUzZxQkw3czVkRWdOLzVaaVQyQQprbTcyOGViRDBqdjJuUkNKakVwNVphZ1hsS3dwNXRXYWdROTloVlNFajkwUEw4U0U1MG5QZFdvL3NlWGNXdmFaCmpCdlAyTVhjNHZmVUNzanF3NGVQYXJRNVFWTzJFLys4aFZIOVZmUG5Bb0dCQUo0dU96NThXQzVTdGtiR0phZkQKeTRjRnllU25Dcm44MWpKaFlZQkpaakNNMHpsUlZub0F2LzdiK0g4OEVlYXF1QmlSR3AvbngvMGdtYnFwZC83awprdEZKWStvNUh2WnpnSVhwN2VEZ3d5QjRYMEVtbnVSRzdNU1czdW5RSlR2M3ZzdGdHbVMzeThUVEZCV25rNGJnCmR5QWVaa3ZsNVNkNlhWM0p6SEo3MHI1NUFvR0JBTnpSMkZiUVBYam5lZi9KOFhQV2s0QzJDQ2h2M1Y1Y3hyVzMKbGcwRTFkaHcwQVQxeTEzeElXaWQvbGxGc1A0YVZiNzFlTU1LQWtkeVJRclJ1bktxZVIxVFRvazFHSnpEK0JEdwprbWd6N09SekNRQXhwcHJBUXlHTzhkRU1SSmphLy96OEN3RFRXZlcvWURqdEpmYnV0WEVVS3ZFZjg5QVdKWlFVClZ2dTFmTXhsQW9HQVduTG00ZGFqRURJa1pUOFJYSFE1Q3Zva3U3OE84MDQwT2Z0dFMyN2lZQU0ydGxpdFRXS1IKK3AyZ3o2WDRlT0hERFNleEF0WGtEbmFGVW94RlNGeCtrci9tQWxYOU9Vdng0aDc4bHk2bWpZWlkvZE1mTmNBQQpZVWlYVFl6bXNlbExpV1JJUEtuZFlGNGMxZ051N3NNRUg0NEdDTjFzSDRiTTU3THFDYS9iUDhnPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/apiserver-proxy.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJQ0dTaHJ5YmV5L0F3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRreE1qQTVNVEExTmpBeApXaGNOTVRreE1qRXdNVEExTmpBeVdqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUE3dmJpZHY0SXo1MUlyZzF2c2lGeVgzeW9rMWhXL3FYWFFnS0hURFZSQmdJTAp0MlBBdGtVQzdFVU5Gemw0a2pnY05tZnl0SmNXNkpQS0hjSlROa0lHYWdWK2krYkJiVkovM3hHVXQ4cGFRRXRUCmhwOXdBMW9RN1pwZjhQYTdoNGlWUlR5YWRkK0VuYmJnYnZOVjlOWkJuNTQ3NGJaOFNaZy9UczJFL3NPd2wvd1UKeVNSWTJ4VEdkVnd2RmhtdGYxYUtEVURjZC9EdDI3MnlrY05uYXVFcVducDhLbXRHWEN3RHRjNkF1L21td1RiWQpPZkNHY2MySGhLb3pDc2lNb1loMWZtT2pEMkJQY0EybFMvZGR6cGxBMmtzeXN4T2EwelFCMTA5SGx4R2JJZVlGCmV1ZjJ5VXdJb0Y0WWFIbzhOQlpUalpXZGpmTENSYmlKamZ6RDVHTi9Td0lEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVVQ4RG1TSFlpRnRJekpqNDVvcmZQNkkwQnhNWXdId1lEVlIwakJCZ3dGb0FVVDhEbVNIWWlGdEl6CkpqNDVvcmZQNkkwQnhNWXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS2hyTFQ3L1pnay9wY1Y1K0twU0pZdWcKSWs0TWNsRUNSRVh2OGV2RHliN0ZYYnh6dW40MXNVZHE3UGQwUENLaDlKS0NJNSswTEl6bU9odm90dHFYL3BaVgo2ZkZkcHRMTzViNFEwRE9HTWxkbHZKSWhkemg0ZkFKdVZvSTFmVzh5UWtxUVNmTVR4cWFnTFl5Uml3ckdaQ3NqCnVNMHlLM0tqMHNiSEVqM1RLQ0FEcVp2bUFwM3ZBRHA5c3pTV0hMQVZ2VmVSV2lqZ0ZEeW5kNk9LVmlMTXcwZ00KUmdRanJqUUZobjlZalJYVUV6RDIvaEtPMjFYN3hYL0RDaHozeWQ5UXdpeWdDcWJyN3p1dVFndVhVaWFPVGhNMQpLdVEySFlZVDJSb1lyZWJwL29aaUtOTU5EeGczNEttMzJxdDRSSG4yNlZyRW5DUm1ub0VjQ3hhZHJpYk1sWFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHRENDQWdDZ0F3SUJBZ0lJSTJZQm1rekd2a0l3RFFZSktvWklodmNOQVFFTEJRQXdLakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMQpOVGxhRncweU9URXlNRFl4TURVMU5UbGFNQ294RWpBUUJnTlZCQXNUQ1c5d1pXNXphR2xtZERFVU1CSUdBMVVFCkF4TUxaWFJqWkMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2kKQWJuZHRGL2h5M1IzZ3JLcWxjU1BHMjYzSzgvaElxR3VlRFlQYUlwNW0zQXVtZjBpKzIwNm5GdlVWRHZ0NCtvVQp3QzhNVWZ5RjVtZ3FobnZDTGdFOW9SYWJkc012aHhQODBIaHBVWUdhT2Iwb2d5R2Y3Unp4N3dyY1hWNmpqMkowCk1mUUFIL2lnczNTZjRnY3ZvV1h6THpxMncxSmZIQm1EejZwM2lIWnAxSHZBZUtRWU5McUk4WGl3VVFKN2FlenQKV1BQcG1nYVZRWTkvL0hNNUFOVVY2T1dHbzlXZW5FYmtNY1lOSmVEa2tYKzVYbldQTzBWdFhEd1dmb2dTWTcxbgp3MGl5QytGWnZGNG9NU1dvcko4YitmSVVYS3NSVWlCYjlHNmtwVDFlc0tyRk5hRndsb3h1T0N6cURrRDVxeWxICll1QkJ3Z0ZjZ2t5QURyNHdibE96QWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSd1Q2bWFwTVZCQVkvTVdLMFpEMXQ4SGRXUlNUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBV2g3RGI2V0EyazB3ZDllNUdmV1Z1SXhDTjUxekc2UXdWSjBWRXIybU1FV2x2Ym1wCnVsT1JseDdlVWJEKzJrT252MENBS2VFblVjWkJNWmNZeXlDTjhYZ2dFL0p5MWdTZXZmTXhNRkhIdXIxNkFFZmMKSVdET2J2clQvb1c3NXdET2dQcXpwVUlIYnA5WlRyKzQ5YTZ2eTBidDlWNC9VMjBwZTNkb3hVdUQyWmZ1QmlrOApxUFNSQVNac3JLV1JQQkhWZ01rdDMrUGVuN3VSZ2ZXSG5SWW5QOERJSnFrQkhzbXFKTTZYNmJXZ3Y5SkhqUUdBCnlTeFdSeGJVSzJZbEdCSUdQeDF1anp1aGNUNkljN0xDVmFLVElSNUViNVpab3lqYWFoNUkvdzRwZVgxWENpQk4KRXdvdmtucmxUZlpMVGROSHRQVURWaVZzY2hrc3VNaEZDQ0ZBL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-metric-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lJQVM5NUNudnJQbGN3RFFZSktvWklodmNOQVFFTEJRQXdNVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sc3dHUVlEVlFRREV4SmxkR05rTFcxbGRISnBZeTF6YVdkdVpYSXdIaGNOTVRreApNakE1TVRBMU5qQXdXaGNOTWpreE1qQTJNVEExTmpBd1dqQXhNUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4Ckd6QVpCZ05WQkFNVEVtVjBZMlF0YldWMGNtbGpMWE5wWjI1bGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNZFl2RUtCMGpPcmxITUp6OWVYWVZUQ3BTaTltbmZBS0oxNjJ2ZzBlRDNLSkJNdwppZzIxUk8zRWFXTFVJeC9pSVNTS0lsMGFNMzVUa3lLT29xT09WczFDQ0U2dExsdWdqMnZHTlIrOG5wc1hlKzdDCnBsQUhvU1ZYN0MwaGlIWWovQmhzREhrYWtFclcwYThpZzNIb1Z0WnlTdVBCSnAyTUpSRHdLVTQ1STNxMmxoVnIKMFZhOG5DTnM2Z3ZYc2xXUVpVVmlxdWNHRkxCMk4zZlB0Mm5lMUFZVzNQeW5FTDY2Z3Exa1B5Z09GMGhGUlZCSApjMTJ5VTkzRnkvWUZzVUxDNnNjSzYxRWFJcDBNTVNSNzVGWFVQb21pWjJEWWVMSEdXQ1Q3b1REZ1orcDJ0YmlLCmJMcnkyNmo4M1VUZC9lQnVnc0lYQmFYa1ZlZGpuQ3NjZ3A4cEJEc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGR1BJSGs2RFAxU1hxZ3pyN0xIeQpnOGRDaVVTK01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQU0wd2RKNHcvc1BpTloxN3lOTFNiMXlEU1l6cEIzClBYTGFZK05hZUVVNkYrZ3VrcWxHa0VnOW5QcFRXZENWZVp1NERQVVVLK2hFT1pvb0Q1cU0yNndqWjdNVWVVdUUKK3RrTXM2LzZTWUtQL1BmY3R6RlVuSWFoL1FFNUhCU2I2ZDZrVUdpbzVpR1Z0NXg5RnB6NmdXRmt3SUtuY2gxbgo3V1Bjb1Vic0plNEFPOGNsUjR1bWM1bnZRMnZubzlRWHFUZ3lTbDU3dTM4TzdadTNuTXcyeHV2OXdsNlZGV05OCm14eDBrR2tLUEZoNXRzaWFnRU5xTnVjaitHT01HT2RNd09QSFBsS2p2Q21wZEoyOHA2R0k1VURRU2lMKzBFKzkKVS9wMU1vOWxUeGNjYmR2SEx2SHlmbjFlNWZqaDFEKzg5VWZlUlFueXJNMjEyZXp6U2VpNGc3ekkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-metric-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeDFpOFFvSFNNNnVVY3duUDE1ZGhWTUtsS0wyYWQ4QW9uWHJhK0RSNFBjb2tFekNLCkRiVkU3Y1JwWXRRakgrSWhKSW9pWFJvemZsT1RJbzZpbzQ1V3pVSUlUcTB1VzZDUGE4WTFIN3llbXhkNzdzS20KVUFlaEpWZnNMU0dJZGlQOEdHd01lUnFRU3RiUnJ5S0RjZWhXMW5KSzQ4RW1uWXdsRVBBcFRqa2plcmFXRld2UgpWcnljSTJ6cUM5ZXlWWkJsUldLcTV3WVVzSFkzZDgrM2FkN1VCaGJjL0tjUXZycUNyV1EvS0E0WFNFVkZVRWR6ClhiSlQzY1hMOWdXeFFzTHF4d3JyVVJvaW5Rd3hKSHZrVmRRK2lhSm5ZTmg0c2NaWUpQdWhNT0JuNm5hMXVJcHMKdXZMYnFQemRSTjM5NEc2Q3doY0ZwZVJWNTJPY0t4eUNueWtFT3dJREFRQUJBb0lCQUUvbzJ6YVIwZEJTcEdSawo5NE1GdE1lRWF5NWtxdW44Qm92eU5wcXVkZERYR2hUekxUUUhpUVVDNmZmcTc5V1ZFUklUcVdqRzJ3TjF2eEpvCk9QdjFVQWhod3ZDKzdVbGZtSDVzYXRrNUJCOUpqNjJMSzU0RElPN1dTdDlnaE5KTzVIeHB1NnBFSXJsTldhcXAKM0NVcUxMMHovWjlFeXhUMm05a3BYSFYxNUNvSkZ0ekc1MFgrbTJaVElRdU1Sb2JPRXBBeHpmeGt4dXkvdzMyOAp1aDZPVHJFSVJMempTUEc1MFJiblpTcFU1Y3EvTGJXcTBVNTdDTmkwZU52QVJnMEdTNjdObURpVmFnenBLRERNCm50c1c1N3lnZ3hLUUZ3YXE2Rys3eG5Zdzh5T3ErNFgzK1p6YnNUNm1nOVAralhwWkdLWU5JMHdhbS9wM3A3NGMKcVZyRlhIa0NnWUVBL1ZXL0tLRWtvUitPbmxoeGtUOGNFTnV5dUlhYVAzcVFSZFpudWtQRm9qeHhZcXJEL0wvQwptNFBPbW5NQ2g4cVNXTDQvd2xtUWU4ampaYktZcXhKYm5RMVVsMktDcnNFUFBKR0pzM2hPOUgvZWdzTVFiTXBKClhRbFNBRU9OZWE1K0VYV2pIT3h0czZPNGJWWTZpV3AvbnMrVHZKWGhzb3VsTmhxZzlmZzNTY2NDZ1lFQXlYR1gKNXc1ak16UDdZVE5TbnE5VTFPYi93MDd4RmtLZ3I4K0k4a3Bra1FJcVZuVlJiK3FpUFhrVGZuamNxeG5UczFBUQpWYzNOaFY5QWYxZ0JVYmRwVUZpRVczMzNuWjhYbUpobEpxOWZaT3NUdTd5d2ptcDB3V1QxbGZSNDgyU1RaTDhoCjVuZ3BJS0YrcjRvMUE5THdqQW83dFVFYXZGVS9aN3VrYnVOUWtlMENnWUIyYTUyMjlWUzFDSlpYU0lxVjFjVmQKMEFVRUlzOTV1dVl6N3h4L3dteGhBUllUaERXbk1WQmI5OG9kQW9QOVMrRUxJS3VYUXR5Nk1GYXoxRDl2UUY2WQoxSUZsWG9RdUFrc0lDaFF2VTU2OHhnVVNaUEtKbUNtaEZ0bEJERkxXdlkxcXhlMmdlSmh6TDZYblhqWnd3OXF5Ck51QWRlSWFQT3AzWTQ2dTRMdlpSUXdLQmdFdi9qQlNDekJBa08yR0hjRk1ueUxSdDFlNUVXUlpSMnJlWmI0d2gKWHVHS1ZKaTd1QmFtQ2NGeGJWWlltTUFBaFdyditNbTJWQ1JPTkZJV3pLQ2N0cUcyVTNFRkRDY3VQME8xc3V1dQpYQ29CdWpjb3o5OWE4R09LQ0ZFam80SUgzc2V5aUVLZjhMdzcwVVMrdXBPUHdHckU3WlBMVlIvYWRZcFlNNGdXClFHNWRBb0dBTStBQkphNmZwYmpMMmVWTDh3TnhjQW8xdGdPZ2JkQktLV3h2b3IwTkdhNkc5Zks2N0pFTEg5WU0KZDZjSC9MMGNhaHAzeHQyazdQRGlzSFNLK1UyZ3dBMzBDbjZXSG5ucUtLUkFPVC9SaXlrd3ZodUdmbGF5SHpnaApXekR3WVlUU1FpbGxHSkwxb1JmQU5DREpXK1VsWG1oOU5tbnpQYnI5RXZ1WC83QnhFUkk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-metric-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lJQVM5NUNudnJQbGN3RFFZSktvWklodmNOQVFFTEJRQXdNVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sc3dHUVlEVlFRREV4SmxkR05rTFcxbGRISnBZeTF6YVdkdVpYSXdIaGNOTVRreApNakE1TVRBMU5qQXdXaGNOTWpreE1qQTJNVEExTmpBd1dqQXhNUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4Ckd6QVpCZ05WQkFNVEVtVjBZMlF0YldWMGNtbGpMWE5wWjI1bGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNZFl2RUtCMGpPcmxITUp6OWVYWVZUQ3BTaTltbmZBS0oxNjJ2ZzBlRDNLSkJNdwppZzIxUk8zRWFXTFVJeC9pSVNTS0lsMGFNMzVUa3lLT29xT09WczFDQ0U2dExsdWdqMnZHTlIrOG5wc1hlKzdDCnBsQUhvU1ZYN0MwaGlIWWovQmhzREhrYWtFclcwYThpZzNIb1Z0WnlTdVBCSnAyTUpSRHdLVTQ1STNxMmxoVnIKMFZhOG5DTnM2Z3ZYc2xXUVpVVmlxdWNHRkxCMk4zZlB0Mm5lMUFZVzNQeW5FTDY2Z3Exa1B5Z09GMGhGUlZCSApjMTJ5VTkzRnkvWUZzVUxDNnNjSzYxRWFJcDBNTVNSNzVGWFVQb21pWjJEWWVMSEdXQ1Q3b1REZ1orcDJ0YmlLCmJMcnkyNmo4M1VUZC9lQnVnc0lYQmFYa1ZlZGpuQ3NjZ3A4cEJEc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGR1BJSGs2RFAxU1hxZ3pyN0xIeQpnOGRDaVVTK01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQU0wd2RKNHcvc1BpTloxN3lOTFNiMXlEU1l6cEIzClBYTGFZK05hZUVVNkYrZ3VrcWxHa0VnOW5QcFRXZENWZVp1NERQVVVLK2hFT1pvb0Q1cU0yNndqWjdNVWVVdUUKK3RrTXM2LzZTWUtQL1BmY3R6RlVuSWFoL1FFNUhCU2I2ZDZrVUdpbzVpR1Z0NXg5RnB6NmdXRmt3SUtuY2gxbgo3V1Bjb1Vic0plNEFPOGNsUjR1bWM1bnZRMnZubzlRWHFUZ3lTbDU3dTM4TzdadTNuTXcyeHV2OXdsNlZGV05OCm14eDBrR2tLUEZoNXRzaWFnRU5xTnVjaitHT01HT2RNd09QSFBsS2p2Q21wZEoyOHA2R0k1VURRU2lMKzBFKzkKVS9wMU1vOWxUeGNjYmR2SEx2SHlmbjFlNWZqaDFEKzg5VWZlUlFueXJNMjEyZXp6U2VpNGc3ekkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-metric-signer-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcGJta2F3Zjg3MEdmVHNJb3dLK0lOYUJnUzFTdzR5elBBQ3NkTEdzNG5tcitIZWUwCnpuaDJEbUVOMWYrcmxZbkxveGJwRmNJUUZtSitmTHRDbUViM09uTDBGZmdQdm9xZzhwV2kzbFp5OVVacXNOYzQKWEJGK0NycFlXYXpabFVCWk9uSDE1TlNjV28vWEYydW9selRLa1hDOHUyWjJhNkwrZC94clcrM3hSTmp3RUpZVwpUWjFsMWdjZi9iUm5GQmpPa3ZYM2NhUGZibkF1bEVzSkE3d0NEbzhSbWZMYldJQWtTWktEVDNqR2dEYm5LaklxCkoyM3JQRVJtUGVGalRCWUdOa3U1c1o2ckJwZnluNWNOeTlIbE9wZ3J6VkduNFAra3ArYVJCOXlmMjBGS3o1eU0KT3JOYjJaSGx1d1MzWGkyLzBLSnRabjhOdklVVXhwb1dIRlc2S3dJREFRQUJBb0lCQUFzTzRSYTNPTHhxUDR3TQp6cFZVNFJ6YTc3SDNHN3A4NGU4YjhWMW1aaWZEOGVMaTlDQ1d6eUhVZmd6YWU0T0Y1MDJobUxuMzhnVGNXNTVOCkRIdUd1TFp3dHpMRUU2RGVOVEVhcFB4Ni9qNjVqU0x4cVhRVFFycktobHl0ZVBOSmtPcWljZ3JyMk9iK0ZCY2UKK3Vma0FPUkZob0ptcXQ0eHlSTU9oOGRoa0NqTXlXdnIxMVg2VzU0emZkMUVUVDZUMFNiSjFSR1F0ZkhTQ2diSQowbk1QdE1VT2h6SUVsSWhDQnVlR3MrZ2NjQnZWREJJbWNsZ3c1VnpJQzRJMGdFa24xeGlYMVpMWXJFN3crR0orCmlvdURhZ2FzUkNxTURkRDJ2SWhIYllzN2RLZis0bDEzdlJwSGE4d2pTSVB3Ry9ZV3pxYWpWNENOdE1adVc4ZW4Ka3lhQjJoRUNnWUVBMTNoeWp0VDVBUGZKaE94aW9GVGw5UU5NRWpEck41YUtQdVRQaEl6VGp5bUxUdC8zZWNNcgp1OUVWc1dpeHF4V0ZUVThFUUdYQmt3UFU4QnB0QW5xbHlPNEdYWlFXSmo4VDhiSHZYL0U0QTVxRk84aFpmWGRpCmo0YVI4UUROOExKTUp2djdXMzZQV2p5SjdzWDNmSzk0K016T3kxNXNHTlYzSStMNTFkRFJ1VE1DZ1lFQXhPWE8Kc0NyNTR6bTczL3dQTDJ6aTVnMjBGd3hJRFNXVlJwSWFqMDBvdkp5VS9IbDduTWNkaTY0VFhMYVVDK000ZkRrTQpoQWlOWnd6YlpPbXNqSUtFaWRRaEsvUnNTdmFmOTVmV2tYVlQxYTJGZEFwWG4vWkJZTktuV3A0bTNrSlZMMGUxCjRXa29SbnZHYTBQdHJuY01FOHR6dkFlbTdkNmQ0WXoyNXovT3F5a0NnWUFsTDBZbDNCODB5WTVmZ0NQdEkzbWoKOVBPMTEvZGYybnoxS2F1ZVptZEVONWt3L1huSjY2S3FnUVRMWHhQNlFIYUd4dkltNHVpckpHZ2xINHBjZVNvUApLUFMwUlpBay9aSEZqajJQUXlPMWkzOGV1QTZwbG1iTitoMUppQ2dDTitMb2YyZjdmRFhsRHJtSEdXY0NmNDNTCjhoVm1CMStFVWFLRDhQSElzb2JlL1FLQmdFTXVTZlJ2NVcwek1MZyt6NHVWOG1FZVFka3ZWcEl0eFo0YmtiWmQKVkUzdWV5TWQ3Q0JWQys2eHlXZHo0RldpQkk3V0JFQTBqdEtmWDJneUZxNm1oY1JsUGFBNnVJeG5VN050K2tjTgpLanFaQnhUTnhwSU11c2ZuZURTQ0M2OEFJUUtOekRBSjZqVUtYR3dTOUZEM3k0WWhmKzZqQ2NEVm1UYnhHdmxTCkd4anBBb0dBS3BaYjJxYVd5d0NyZ20wdXNBdXZqRXRuaUNvanVCVzRLZ004aUxzVUpESy9RaHRKYm9tOVU2OXgKOGM0M2hUckpTUUUyQytDRUFWbmg0VDJkeDFLMTJpRDkvZ0s1NVlkcXZEMFVlQ01BeHZZR0ZvQXpwaTNGam4wUwpXKzFESUd3ekJyM1JGaFlRUkZZMCtCcDFTU29EOG54L1N1ME5yTW5hNlUrQXJXY1ZORlE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-metric-signer-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWRENDQWp5Z0F3SUJBZ0lJUlhLUlhxaEpxcVV3RFFZSktvWklodmNOQVFFTEJRQXdNVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sc3dHUVlEVlFRREV4SmxkR05rTFcxbGRISnBZeTF6YVdkdVpYSXdIaGNOTVRreApNakE1TVRBMU5qQXdXaGNOTWpreE1qQTJNVEExTmpBd1dqQXNNUlF3RWdZRFZRUUxFd3RsZEdOa0xXMWxkSEpwCll6RVVNQklHQTFVRUF4TUxaWFJqWkMxdFpYUnlhV013Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUNsdWFSckIvenZRWjlPd2lqQXI0ZzFvR0JMVkxEakxNOEFLeDBzYXppZWF2NGQ1N1RPZUhZTwpZUTNWLzZ1VmljdWpGdWtWd2hBV1luNTh1MEtZUnZjNmN2UVYrQSsraXFEeWxhTGVWbkwxUm1xdzF6aGNFWDRLCnVsaFpyTm1WUUZrNmNmWGsxSnhhajljWGE2aVhOTXFSY0x5N1puWnJvdjUzL0d0YjdmRkUyUEFRbGhaTm5XWFcKQngvOXRHY1VHTTZTOWZkeG85OXVjQzZVU3drRHZBSU9qeEdaOHR0WWdDUkprb05QZU1hQU51Y3FNaW9uYmVzOApSR1k5NFdOTUZnWTJTN214bnFzR2wvS2ZsdzNMMGVVNm1Ddk5VYWZnLzZTbjVwRUgzSi9iUVVyUG5JdzZzMXZaCmtlVzdCTGRlTGIvUW9tMW1mdzI4aFJUR21oWWNWYm9yQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUYKb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJSagp5QjVPZ3o5VWw2b002K3l4OG9QSFFvbEV2akFmQmdOVkhTTUVHREFXZ0JSanlCNU9nejlVbDZvTTYreXg4b1BIClFvbEV2akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBeGY3azlick55Q0VHaUpHNmdUQzBUcDg2eUdrN2czYVcKTGlrY2FjdXN4Vy8rampNTmNKcnMvbXRSSnd4SVBPY2dwOHRaRkdIWlZDRnFXMUdUZ2trLyt0QjFxalNta0xQZQpUUk8wTkJJWnJZOUZFbTYxcThhT2E4a2ZCQ1ZYSjNOWXhFU29BRGtMTUFEcXdHNk94S0VBMVROdVFTU1d6OHdLCllpUFZrWmNINVFGaFMrWEJIa2JueDk1WlpML2x3KzhQZXJWVkVIZTNlQUd0c1BvQndiOXQzQWhiRndZWVJBODYKSnYrbWxmOXRTaFZCeEx6aHFsN010M1hybUpaUWxHMWxtSDNHMVNuSUY5MFVxcHVOcVJkOUI1V292R0FkM3FmawpHNjJpT3BtcS9YajNGVUFTOVE0Vjg3WWx3T1JlTU14MkJJSU9OTEc3NXpDS1duelJDb2pKeUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb2dHNTNiUmY0Y3QwZDRLeXFwWEVqeHR1dHl2UDRTS2hybmcyRDJpS2VadHdMcG45Ckl2dHRPcHhiMUZRNzdlUHFGTUF2REZIOGhlWm9Lb1o3d2k0QlBhRVdtM2JETDRjVC9OQjRhVkdCbWptOUtJTWgKbiswYzhlOEszRjFlbzQ5aWRESDBBQi80b0xOMG4rSUhMNkZsOHk4NnRzTlNYeHdaZzgrcWQ0aDJhZFI3d0hpawpHRFM2aVBGNHNGRUNlMm5zN1ZqejZab0dsVUdQZi94ek9RRFZGZWpsaHFQVm5weEc1REhHRFNYZzVKRi91VjUxCmp6dEZiVnc4Rm42SUVtTzlaOE5Jc2d2aFdieGVLREVscUt5ZkcvbnlGRnlyRVZJZ1cvUnVwS1U5WHJDcXhUV2gKY0phTWJqZ3M2ZzVBK2FzcFIyTGdRY0lCWElKTWdBNitNRzVUc3dJREFRQUJBb0lCQUVGSVlzYVZUZUhtSTR1WgpMamdSWEFDeTlEMTV1UzRtejNKSDNMait6blpNamJzcHNGanRha21wQWxRZ2tYbStVdkNEdFRISXcvS05NMEtYCnFMMUozcFFnR3NVUTZYeDRlVFJ5S1dOL1JiT0pPdEZkYmlwTTJWSWdtb2JNVlR1aHB2SGR3MDVkazhubUpzUGEKeUR5SVZGWFhuVmhTZ3hueWI5R3UyQ21NNHZLbjJlNnQ1TW5sbWFHQ1NtaEgrR3ZUUVUzV1p1MmNLeVB3M05ubgpTblJYbWQwdFZaUjc1UVAvTjRXbEVQMnplOWJIN2Vlc1pUUmo1NHYxYlNhdmlYVUdrNGlNUTgvUUg1NmQyY2Z2Ck9sMTYxblNkZTZLS0FwNW1IMzhnOVlSK2w1U2FTcWZOZVZEM3JRZk5DbElpRXo2dkFBVlBycVRHaVFiaGU2M2cKU0xMZ2k0RUNnWUVBeEk5QkFWSnVtc3VIUnFyOUJ4RytDTGlJaVcrUU10ZWptbU5VUTN2U3NuYS9qb29MRWUvNQp0Zmo2S1QydmZKRm1HaDZNMk1aOXRqSnR3VW9KTndndEJRdWh6Ujl1ZE5lVHMxMzFSRFhva3NFVThLeFIzSG5XCkxycjFreE92ZnpDMUxTaDBiSDlSL0NRbEE1MzhOdWFmbUVWWW43RlFwTUpvZHVlb3ZXN29abk1DZ1lFQTB2K00KZGVjUllXZGE4RGx3QW1UcVBXV1Y5eVF3dXU3OG9MaWQ4azNaRWtMTzJnNTNuZTBvS3psU3RibXlFZy9XN2VsRwp3dlc2U3hoQjhPbzJEZWZqWGx6Wm5yMldhN3hIQ3hITldiL2dmL0tYWUU2amVKTnN6YW0zSmJwanZIWkNkSnNpCmRsSnE5ZE5zZDhaL1k5SVlZbU5iamF4RERCeUdORUFlWEhkVnpjRUNnWUJsV1hnck5sWFJleUJGVCtVbnYvNDgKZ09ubDg2Qm1sc25FMFhLaFdUZEt6ZS8zanpZbUNaYTRQYWkvbXc3aExCZDVZRWMvZnhsUzJLMisvRzNEOG5ORQpKcnRIQ08zclVUelhQNXMza0pSYkZ6TzA1U1ZRaVlIbWxvQUpWaDBuZC9YelV1aTFDUEU5RVdZRWQzR1UzVlZ0CkxsU0VBdW1TQ3F2U282QmVETkhJQVFLQmdESE9YT3VmNWJ4bVYxTUpXK1ZVeU81QlFvc2FJZDZlZDBmQkRKZWIKeExmSXlXY3pyd3k2WkpiL2F3UzJsdEFvcVFWejRWNDMvd2VtN0RuZ0wyNU01S0RycmZzSXFhODR2RlJpbVdTcwpKR1JQY1dnc1orNFlic0NGWlZRa2tWSjFYKzZDaURvQjdubWt0Si81WFN6RTlUaVVWNUl6cllmNFc3Mk52Uno2CmxtaUJBb0dCQUo5VVV2SGpLUTRRTzR3MitrNndFbTlQcm5wcmhoQldKVUtRclMwamJCcWlEOEtjbm1tOFlJNVIKODlLNGlqMGdRL3hkd3BMMXA5T2YwN2Vwc2l1OUtUTXhsQXNTY1hxQXRGQThPSHUzWlFsb051U0JqZDFjeXMzUgpVZUlPNUJFOTdYYVNtY0ZHeWV4V2hYNzRTOW5IbWNNMVh0SFhlUHZjQy91NGUwYUtvRHlaCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHRENDQWdDZ0F3SUJBZ0lJSTJZQm1rekd2a0l3RFFZSktvWklodmNOQVFFTEJRQXdLakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMQpOVGxhRncweU9URXlNRFl4TURVMU5UbGFNQ294RWpBUUJnTlZCQXNUQ1c5d1pXNXphR2xtZERFVU1CSUdBMVVFCkF4TUxaWFJqWkMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2kKQWJuZHRGL2h5M1IzZ3JLcWxjU1BHMjYzSzgvaElxR3VlRFlQYUlwNW0zQXVtZjBpKzIwNm5GdlVWRHZ0NCtvVQp3QzhNVWZ5RjVtZ3FobnZDTGdFOW9SYWJkc012aHhQODBIaHBVWUdhT2Iwb2d5R2Y3Unp4N3dyY1hWNmpqMkowCk1mUUFIL2lnczNTZjRnY3ZvV1h6THpxMncxSmZIQm1EejZwM2lIWnAxSHZBZUtRWU5McUk4WGl3VVFKN2FlenQKV1BQcG1nYVZRWTkvL0hNNUFOVVY2T1dHbzlXZW5FYmtNY1lOSmVEa2tYKzVYbldQTzBWdFhEd1dmb2dTWTcxbgp3MGl5QytGWnZGNG9NU1dvcko4YitmSVVYS3NSVWlCYjlHNmtwVDFlc0tyRk5hRndsb3h1T0N6cURrRDVxeWxICll1QkJ3Z0ZjZ2t5QURyNHdibE96QWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSd1Q2bWFwTVZCQVkvTVdLMFpEMXQ4SGRXUlNUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBV2g3RGI2V0EyazB3ZDllNUdmV1Z1SXhDTjUxekc2UXdWSjBWRXIybU1FV2x2Ym1wCnVsT1JseDdlVWJEKzJrT252MENBS2VFblVjWkJNWmNZeXlDTjhYZ2dFL0p5MWdTZXZmTXhNRkhIdXIxNkFFZmMKSVdET2J2clQvb1c3NXdET2dQcXpwVUlIYnA5WlRyKzQ5YTZ2eTBidDlWNC9VMjBwZTNkb3hVdUQyWmZ1QmlrOApxUFNSQVNac3JLV1JQQkhWZ01rdDMrUGVuN3VSZ2ZXSG5SWW5QOERJSnFrQkhzbXFKTTZYNmJXZ3Y5SkhqUUdBCnlTeFdSeGJVSzJZbEdCSUdQeDF1anp1aGNUNkljN0xDVmFLVElSNUViNVpab3lqYWFoNUkvdzRwZVgxWENpQk4KRXdvdmtucmxUZlpMVGROSHRQVURWaVZzY2hrc3VNaEZDQ0ZBL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWczdWd4VTkwVkNPN1dtbGpuOHlIUUVpMUtvTEhUMDVHOWlUS1NuSWlFNVpqTHg3CkRtRHlLYmxBU1BxVDdJZVo3RGtUcFR0WVBwMWtHZE1YRmdXN1VQNjJrOHpqVXZ2TzVJNTRPeDVHSWF5bEUxWWgKc28xZFZqMGxpM0tLT3QyanI3Z2RqeDVFR1poUTFvbDBiYUlTOXdBcGt4WDFRMDUwcnQ1KzJZbFJHbWpKY1BUSApqTTdnRDRveUtLOUc3bmxFWlBIQVpsVmYxckMrMlNmOUV1WllIZGhhVTU1MERwWTJDYWxqOXFGek5yTTRwWnJsCi9SNDhYN0pJSmJrSHV0QUloVXRieHo3Z3lzaE8vejNNWENJK2pBUVBKazVoVlZuamJLQVh0T05RVEhGNElVMFUKdExTSUN6Nm1saE1iNGNjdk5lK3hSYTNmd3hhMGJFazR3WTVGMVFJREFRQUJBb0lCQUQ4VmJES2I2Q3JwZ3B5eQovb1J6VWoyTlhnNzNYTzljQzlvS005TjRMRnN6SFovZlpHWDZyd0ZBbzdCYTdmNzc5MCttQnFnMmwvUWJENDdHCkNRVFppcXFxd3FNWWpGZGRzOGZCR3JrSXljU3ZNZ1Y5WmMyUnF2MExuSWhNbk52YXZKNWU4ZjdOeDA5YVdzWnoKTXJ2ZGdVcW9qbkFsdU5SS2JMdkNDd2FkVFplRExnODRPeWwwUjU3U2lyb1pHT2NaM2lURFNBK0JlMER6UlY0ZwpIT2VLb0tyOFptbzNTbFZMczEzZ3RDcS8xcDl6bzhWcEJKSEZockV1T1VpMU4wVWF3bFYrTXRTZUdWcEJGdTJaCmpSK00vdHhwTnRIcW9uS0ZIZmZobm9SMEtUakFlNUl6NDNoWkNDdGZuN0FYLzNWNmtKK0Vlbk52VEhseDdNam0KbU5BMVNYMENnWUVBMTBWZWdlaGFzclJJamJXdklORU9mK0x2T2hWRDhnZWNiM1R6UE41M3lqM1dnZ2xPcGpGagpsa24wYXdyMkozN0hLUzk5WGxtZ040SUJRdkVNakhFZ0ZHNVd3bm9oL1k5d1JYdTBJK0NpdlkrT2pZUWRHRHNtCktyM29EbkV0Z0V3dExKVkdrM2VablhteXErUGdtYzkxdlRNZnYwV0JHdkpZZWU5WE9BbzlJWHNDZ1lFQTNVRjIKR2g3K1k2elNGTzNubkNRNmVHVXhIYndjajRaYTVMU3ZCTmxHUTU0UzV2NjZic3p4RmtjcWJMaUVkNG9pMXFRYgpyOUJDcGRqZ2QrM1Qzdkw3a2VLSHkxTndRRk56bExXdWVFR0FkNEx6TkpJTzh5c00yMUJFRm9NcmFFZ2l5aFRyCmVEMEV5bXZhaWF1ZlpRNmVwOHpFa0RQNWV1RUJiK3c2OFhjS3pPOENnWUVBd0ttSEFjRVFtMnVhbTZtRlNWdVIKSElmZ0R4M0ZKN0lFSWdTTFJXamQwUlV6REVLRUwxMTRnYU5DcXlLdVYzNnhoSHpLT1UwQmhXeEc4TUNIdUpIdQpZaHEyYjJ1YlRERzZDNVhCRFhNWWM0c3R6QjMzWkI1YjlGanVmUzV4eUtka3JzZ1MyQnhzVVhIL3BMTlg2cEN3CkVWcldDUHVOcHE1SzNTYUY2dFBQRGswQ2dZQmZ4WVlwcUdEVkpHbUxSYStMbHVMNFdsVDRXZ1RDMjVWY2lobDQKTDlTS1VGSStTdVRJTVUzcUpzUG1hN2hyUmcvdWVQckRENUxKMXliU3dzK0RJZ3BqQzN0Y043SFBKbEJSZnBNVwoyc09ROTgzdVk0cTFGMTFwVVVVbnVYK0FsRGo2NEROTXlKemFRZlZHd2xNc216ZHh5dUVLeW5TakMrSmpZQTNqCmwzUEZZUUtCZ1FDeEtsaEZMSDBDc2FveG5ML0ZUQ2NWUEdXOHlQNzcrbHVCcms4UEF4alp3RHVSdDRZVHBKdzgKdmRoVGQ0SGRlR08yZSt4ZXdOazhuNzk0RksrREtlbDA0MktMSmdtUnNOTVIyRjM1aWlLczc2MkRGTTFRM1hkUQpuMzlrQmdqVStHc2FUZ0RFL3hVMzZac0JKQ1MxN25McUZZaEVURzRaSVBHQnJhRFJBWDRpdVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/etcd-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQekNDQWllZ0F3SUJBZ0lJSGVuYVQ2UjhjQ0l3RFFZSktvWklodmNOQVFFTEJRQXdLakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMQpOVGxhRncweU9URXlNRFl4TURVMk1EQmFNQjR4RFRBTEJnTlZCQXNUQkdWMFkyUXhEVEFMQmdOVkJBTVRCR1YwClkyUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNkRlNkRGVDNSVUk3dGFhV08KZnpJZEFTTFVxZ3NkUFRrYjJKTXBLY2lJVGxtTXZIc09ZUElwdVVCSStwUHNoNW5zT1JPbE8xZytuV1FaMHhjVwpCYnRRL3JhVHpPTlMrODdram5nN0hrWWhyS1VUVmlHeWpWMVdQU1dMY29vNjNhT3Z1QjJQSGtRWm1GRFdpWFJ0Cm9oTDNBQ21URmZWRFRuU3UzbjdaaVZFYWFNbHc5TWVNenVBUGlqSW9yMGJ1ZVVSazhjQm1WVi9Xc0w3WkovMFMKNWxnZDJGcFRublFPbGpZSnFXUDJvWE0yc3ppbG11WDlIanhmc2tnbHVRZTYwQWlGUzF2SFB1REt5RTcvUGN4YwpJajZNQkE4bVRtRlZXZU5zb0JlMDQxQk1jWGdoVFJTMHRJZ0xQcWFXRXh2aHh5ODE3N0ZGcmQvREZyUnNTVGpCCmprWFZBZ01CQUFHamRUQnpNQTRHQTFVZER3RUIvd1FFQXdJRklEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlJ3VDZtYXBNVkJBWS9NV0swWkQxdDhIZFdSU1RBZgpCZ05WSFNNRUdEQVdnQlJ3VDZtYXBNVkJBWS9NV0swWkQxdDhIZFdSU1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DCkFRRUFCakFsRGNaZUlia2lBSmpaSXlNVmRnUVBxK2ZYcmorc3A2Y2U5RS8xaGJKSWlPL0dtZDFReEI0L2NlSE4KUTVtbjR1bk9vVzlNQno2L3ZOaUU5aHRSaWFSLzJQZk51cWpHb0l4dExvVTZwSWFyTXBacW8yTm1yUGhCam02SwpXRkRiVUkwMnBEaURsOVVjbzhFWGhnUGR4T2o2NEhHZHZJQTlSaW9reC9ST1RycklZQVdmQ0cxTDMrL0FFZDlrClpjQ1BlbHJtWGZpSmxlVHBpQmF0M3RWYlZFajZLTjlxQVhKYnVMSVdGbllXZlBmaWEvS01CcXAyS1FyelE1MEoKaE1jVHVpQVN0Ym8yOHJBTUxQNk1RTTZKeCtaWmxCc0xzWFNKbTMwSXV3RTVyU1BncWRvTjFnU3R2bCtsMTJZTApQTU16cUU2bE5EU3FabFc3dXdOeUNxRU8yUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-lb-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJYURDZ0kvZ1JPcnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05Namt4TWpBMk1UQTFOVFUzV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSnJ1T2ZnOStzbGIxMGV3SEZXMVVrdG14YVVZMzFyVwpTOXU1dlE3bUhjTE9odHNYUHlJaTlxRW1kMVF5K3dmZ0VHcFJuQ2hmM1JHSzVQMXRnNFl6N2ZJMWFKVmVpRitXCjBOWXRsVThNTG41RFcrZVZzSjd4cFZOdlZTcVUxQWpSU1FZakNFL3JtM2xiQXprZThFNUc1bGxCR2p2cVV1cmEKNWtobVptVUo5SjV3Y2w0YkhUVXpXNzM5UHNUVVBvdkxXWTNWQi8xYjd2U2taQmhvV084dVl1MUxCSUtUQnQwagoxdFp5d1FsS0xTQ0ZGVlR3T0xyUWs0bXhCWGpYclVMMUxWbEpjdDdwb1NQVW9uQzFqRVBRcHdYWFNJMWpvTFBYCm5pZ0Fja0ZrNm83cGZNTEVYZVArNEZqTm5yazduWGlDbGZMalE3YkY2dzNrSXptZDNBNmdZeU1DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJ3WgpIdGtpSG4yazgveHhyOUVUTGZ0VFV3RThNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJsS1NaQ09nUmh4SlI2CjBKRWt0OCs3RjJOV0pLVzM5VzVFelRNQThrT2Q5SVF0MVRrSzZxRGJYY3NWMGNwQzRhc1ptWXVOVGNjSmVGR00KK3B5YUxWek1OQ1VXcVBzK3FIdFBJbGN1SUFzVjVVRmdBWDJBT0N3TlNDZzU5cDRBZlRYVm5ZN1VjSTJNV2tzTwo1TXYzTkxMZkRPYXlVRGJPc2NxY3haVTk3SFhsUk9hdXFOMWdmODR1STRHZldiQUFJQnRGd0VIcGxueVBvYmpGCklRRjlMNTU5VXVYSTk0aEs5Q1RFWklDYXpsbEhmRmFpNkIraWVlRmdhWEE4bndDcE8xcGJOK3VUYkJKRGNORlAKVmxyOGVnRWZRMFUwK1JzVmZSU2hOcGM0RkxOeEt5bFdCN3k4ck9qRTh4dmZCajFUa2dEWVQ3UGJ1eFBVS1ducQpTL2JtaUIrMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-lb-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcUNOcG5LeDQ0VVNQWmZ2UjNOSnZDMmdQbkdnY2xQR3RIUm1vcjFIVCs5R0NuUXN6ClJIR1ZCeGlWV1Noek91NGdBK3hjYi95OTBqSlNtTzVnby9jUHpQT2J4Mjh1blgvQTc2U212SVBJblRpMVJmZFYKbDMyZ1c2b0hZWXROVjVWS3Q3ZEptbDBuanJ4bHRYcmdGSWZvWnJUYXl4a1Z5djJzcjVlTlZBVUZIVzRCSEFNMApxS3dvQUgwZU9lMWtMRldDK2ZET0pTbWgwK1cvWjF4KzVkaytqd2g5cmordUw3QUVBZGRpVXp5Rk04TFkxbXF1Ck5JNWxjN29xZE15ekxhYWtQckxET21pUklha2VJclBraHlOMW9xbWlJL3lmY3dFU0kyR3lPdjRNTllnSTlzSzkKUkR2M1RaNm45ZWhhMHZtUnhUMnFyM3lWQy8wbTNQZlRrUkEzc1FJREFRQUJBb0lCQUhHRDV3dWx6YjZZb1EvRApZYjVxUEJwQldUakplWEo5YjlqVHQvVVZrNzdSaGhNc3VxSWM1UFp6ZkhGRFEvaW5SK29lSzVKWDJuZ05EWUsrCmZYUjFtcTlPVVAvbWFseGZJZzBvNW9Fam44KzF0M3pUTFhBbm1wb0lRdzl5RXZkc2paTlhKVlFZVEZxcml5ZHAKRzl3QW5jQ3BuWVc5Rzk5K1FKWVVCWkNTQ3hBQVdjZ0g2YkE1cTZ4Rmg2Q1RSNnJjdWFMSk43MUNJckRPUGM5Ywo0blpycFlMVXcvTFZGMTZocE1pczQ2eUJNeDJieDI5S3B5a1B1WHZyVFBkdzNweWxIaVVKL0JLa2hzUXBRK3RvCnUzWm1sMWZMRGVaNDB1a1R3cjBibXU3U1RiYXA5L0ZGWmF4UHBvZGhrODNUR24rbCtGckFldWNSVndJQTI5UnUKWGZSdlZoa0NnWUVBMzRSbk9GQjZpQytFOHJGaitHK1pqeVc5Qk10aDFwR0N0cDJJQ1ZTWnpOY3dha3FwamE4Qgp5NHhyekk3RGduZFhQWk0yd0I0clNQbFlwWXNNUjlheHBZRTI1U2VIQnIyaGVRZGQrY1ZMdFQyaHZuTUFQRXF5CnRWTWo2VkRLMlZSUkd2QWRXQUZiSjd0L2IybkdxcVdadW5zbEczTkszbnNQVzZJQmtJS3hEWmNDZ1lFQXdKSzYKVkFpblpydk1RWk9tNUhtbXBXa2FBSGE3eFhUYmFTdk5ueFEzSCtSaHZVWmxqRVZ0Z09zcDh0R1ord1pNM2JsVwpaai9SOXZRRWpCczdxRUY0VVQ3SThKNllCM243SzVQRkRzN1dZemVrK2dFWHBHWXFFeXFVVVVqVGNLcTJ2ellkCjY2cjRIM1NqQVBYbktDWGZpNzdUZW9rNXNuazdHdXE4QlA0ZUhmY0NnWUVBekkzMmpQSVNBVnBEdUh1aGV2WmYKT1VNWFJqRC9QQWYwOFQwZ0J6SDJneUdZZkY0UjU4bDJ3aHFqZVJSYVZxYnpIelgvMERpTDhuL0hvZENzRDM2cgpHMFV5d09xNHh2RjZ1akdFenBYQjRIOGo3QkNBOGF5RytpeTVXOGdGckhsZXRHRjA2VnBzV3VOY0Q5Rms4RDBYCmdETTgxVzlnNEZVTXpCWnFpaDhnKzhjQ2dZQUVQN2lJdmlBamJpVlZsUkpybkJ1SExzaDZGaVNTZUwrV2xIYlcKK2JVMXFPNVhKTVI4MGROV3N0bWNGKy9UMEJIR0dwN0Rac2tWTDlFaDNqLzB1RzBWTGROMUs2cWpENWZ4SURPSwozaGx3MnZ0eTRLOUsyMDQyV2d3bnR2bWpWTUR2ZXh3eDVQWFFpOXhFMnlnY2hLbG9CZS9ZbGtxRm01TW9SdUdiCklwZzdoUUtCZ1FESEdhQUxqZW4xellBbEYrYjRUZFFKWmtWRWQzd1BWdTd4WjdZVWE1S1I3YVQya0lWWUozVi8Kdmh5OVVIQ0xtMWtDclg2UVp0RlFYd2ZBS3NlaXpMZURReXRlN1R5aGxCanhQeFJYb2VBSDJJazY5eG1JWDRNQQpwVnBjV3FHczIwMUZHVXBmM0ZmVGNEeEtubVhtWE9PS2lrSzVGQlJjRDBCVC9DNUtSMjdqZEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-lb-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJUHJGaTNjWXRTWll3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05NVGt4TWpFd01UQTFOakF5V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxQ05wbkt4NDRVU1BaZnZSM05KdkMyZ1BuR2djbFBHdApIUm1vcjFIVCs5R0NuUXN6UkhHVkJ4aVZXU2h6T3U0Z0EreGNiL3k5MGpKU21PNWdvL2NQelBPYngyOHVuWC9BCjc2U212SVBJblRpMVJmZFZsMzJnVzZvSFlZdE5WNVZLdDdkSm1sMG5qcnhsdFhyZ0ZJZm9aclRheXhrVnl2MnMKcjVlTlZBVUZIVzRCSEFNMHFLd29BSDBlT2Uxa0xGV0MrZkRPSlNtaDArVy9aMXgrNWRrK2p3aDlyait1TDdBRQpBZGRpVXp5Rk04TFkxbXF1Tkk1bGM3b3FkTXl6TGFha1ByTERPbWlSSWFrZUlyUGtoeU4xb3FtaUkveWZjd0VTCkkyR3lPdjRNTllnSTlzSzlSRHYzVFo2bjllaGEwdm1SeFQycXIzeVZDLzBtM1BmVGtSQTNzUUlEQVFBQm80R3IKTUlHb01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREFmQmdOVkhTTUVHREFXCmdCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREF6QmdOVkhSRUVMREFxZ2loaGNHa3VZMngxYzNSbGNpMHoKTkRObUxuTmhibVJpYjNneE5qWXpMbTl3Wlc1MGJHTXVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTwoyMHA0cGFGdkJNcTdtSzJDRFBodDV6VVF1WHkyd09UUGpRUEhhamNTenRPQmZtaEloVEhiYkRuQU9BNlIxZzhnCjlkbEhIUVNmNlp5V2g1TERrVTR6TkQrTHhmTGkzeE1PbW9XcDlEMXJ3aWFBTHJTN3QxZXNYQ3pYaW9HQ2k1ZFEKZEpacXVFOFVZNTArVEgxSWFEZHVOd0VVVjBXbWczR3RmVncwNmlzQUNFZFltNzd3YnczVFE5dzFmbk02OTFieQpxRkZUNTZBSjRJa2UzZGFhYURNTXNQR1BMSEJVT3RmSnpXdFlsczVCZFMrUTlCMCtlSTNTMUFSZ3JES3IrVEZ1CmdlR3F6eXRnZGVsUTJndHB5Y0xFUk9SWG5GK21TMHRrNkhDcnU4K0MyM0JCUUV6ekpnd0xOay9KejdwbDhxUm0KaWN3VUlHTFdJQjhiR1pXekg5ckwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJYURDZ0kvZ1JPcnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05Namt4TWpBMk1UQTFOVFUzV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSnJ1T2ZnOStzbGIxMGV3SEZXMVVrdG14YVVZMzFyVwpTOXU1dlE3bUhjTE9odHNYUHlJaTlxRW1kMVF5K3dmZ0VHcFJuQ2hmM1JHSzVQMXRnNFl6N2ZJMWFKVmVpRitXCjBOWXRsVThNTG41RFcrZVZzSjd4cFZOdlZTcVUxQWpSU1FZakNFL3JtM2xiQXprZThFNUc1bGxCR2p2cVV1cmEKNWtobVptVUo5SjV3Y2w0YkhUVXpXNzM5UHNUVVBvdkxXWTNWQi8xYjd2U2taQmhvV084dVl1MUxCSUtUQnQwagoxdFp5d1FsS0xTQ0ZGVlR3T0xyUWs0bXhCWGpYclVMMUxWbEpjdDdwb1NQVW9uQzFqRVBRcHdYWFNJMWpvTFBYCm5pZ0Fja0ZrNm83cGZNTEVYZVArNEZqTm5yazduWGlDbGZMalE3YkY2dzNrSXptZDNBNmdZeU1DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJ3WgpIdGtpSG4yazgveHhyOUVUTGZ0VFV3RThNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJsS1NaQ09nUmh4SlI2CjBKRWt0OCs3RjJOV0pLVzM5VzVFelRNQThrT2Q5SVF0MVRrSzZxRGJYY3NWMGNwQzRhc1ptWXVOVGNjSmVGR00KK3B5YUxWek1OQ1VXcVBzK3FIdFBJbGN1SUFzVjVVRmdBWDJBT0N3TlNDZzU5cDRBZlRYVm5ZN1VjSTJNV2tzTwo1TXYzTkxMZkRPYXlVRGJPc2NxY3haVTk3SFhsUk9hdXFOMWdmODR1STRHZldiQUFJQnRGd0VIcGxueVBvYmpGCklRRjlMNTU5VXVYSTk0aEs5Q1RFWklDYXpsbEhmRmFpNkIraWVlRmdhWEE4bndDcE8xcGJOK3VUYkJKRGNORlAKVmxyOGVnRWZRMFUwK1JzVmZSU2hOcGM0RkxOeEt5bFdCN3k4ck9qRTh4dmZCajFUa2dEWVQ3UGJ1eFBVS1ducQpTL2JtaUIrMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-internal-lb-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2NNdHZxa2tIZVBlODB5QTg0THNRaGkrQjVMSDZ4M1c0RXhicW9JV2hpYXlBWGNoCnN2dnlYZDQ0alU0RTdwZFdzMzl5dGNPMmwzL2dOUWFXa3JEazZMNUFYWjVpblliVTlmeXhCWUYzbEFRam1jV0cKcjJLWVcwZkt3aFNyYnJEYlRxTkJYNVpwUDQ5U2IzN290L0lHMTllTVpEOUx6Q2FYaWxkbEovdUU0NUZrZ1d0QwpqZjRSMzVuRjV2eGNGL2FGL1dtak03bVBES2xuYkYraFhGU1h4ek9TVWM3VUZYL0hUdXUrcDZ2T0Y4Z3hJOWFmCmFQd05yMUxJK2psZklaVGxMWHRRekRWV3VTam94a1poYnN2QnIrZjZhNE1paXJwSGg0aUZQMCtKQmpXOXhjS1IKUnJ0YzczdWpmZEdWZ3J6c1lENTF1ZG02aWYxRzZHcXBRYmE2QndJREFRQUJBb0lCQVFDZk4rQTJKTXp0MXRyVQp1RS9hU2dJVUNqclZCRk5OSzVidmR5OTMvQy9BQ3JvSkpEakgxK3FBSWVQOGtWalNLZi92dmRHbjlPdnNzQUt2CjcvcjVEV3o4cDZGQ2pLemlYdkpPTkZmT2UyV2tkb1kraktheEplYW1VMmNVZG1Hc3NwMXprQWxmSDd6YW9zNE4KbW81bTRQV29sWkhpcW5TQmpGRElPQ3FDWVZjQW00RTllZXZFa0xXOVV1YUY2WXFoRzVzaXk5Ni9aUGdWOEI4RwpWM2I3VVdpWWdpRUJFd05TQytlKzVwNWV6cWxPYUs0TnBEZkdkZXB1c1FrYURQekVjUm55bmw0TzZHM05ISzVhCkhiKzN4ZGUzRHN1UlRrMGVzMHJuY1RaWDVBdmdPMk53dmp4OWRLdXE4dXRXbnV4U2JvQlhQM3ExZzhwTzV0TDAKYkJJM0lkZ3BBb0dCQU9rM256d0dlNUVuODZBQm9YTm1qSGl2Q3lVRitqYVYyM3Q1STd5RGtPN2lNdWY3QjZmRwpwNmVsbVhrTUtsTEJSc2VVdWNwUGlXZ1hCMThMdWhhY2tFdmxMOTdBQW5jR3V2UDB4QkxyaGFrcEdSL0pMUkNYClJxa1ZFV0xNMENUcnprMzhSUkZ2L1B0MkNzUk56cnF3NkExdUJVNWEyMGZzZ1dxRUNya3BvMmdyQW9HQkFOU3cKMnlRYjgySGNiMGxaaWg2MHZhQVMrZ0hKc1h4K0g4TGdTY2hiNUlxWEdJZjdzQm9CaXlYM09SU3pGWHBFbTZRVgp0M0drK0VocERON2ZMUGdxaEp2WnlNMDJZcVVhOUxkYXNMVktKcUkxTzRCUEZ5SlZDSUxJTHVZTkhtY2NZOHdDCkExYVJuOWV2bkc3bDlRSHZubkp6Q055Qlgvd09HUkRhUUcxc2c4dVZBb0dCQUxkajdNeFgwSzFKZkZOVFZQRVoKTDlicTF0bXJSS0hOMzhUTmNxT1gxYzF6aEZKVlhTUzZtelhDaTlmYkVDRDVLVDVpSG1NUGZsNmkxVUlSUjZqbQpQclhmcUhBQ0R5NG4xYlZtd1JTYnJnUmlkQVpCdlRVeHIvZmZ3RWN3QlhFekdJek1sa2RyQjhWNWdtZnhRMklkCklLMEcyaGRPYk9hMi9PR1VxWllIUHg3M0FvR0FVMXcxcDROazhwZ0k3Z0N3QjdUakZWZ2FzSlN5Z1k2Vk9EWGIKOVRFKzg2cWdyTHRTbS82NjROaHlnTkJudkpJalJqNVV0YS9vdDhpa2lMMkR6SWd0alQvZ1diM1ZEOHp1Mk9ZcwptQUZGL3hGS0R0SHd5VDMycGZ0N2xpTFNKYXVVMmFKNFdIZWU1RlFweGJWUFA4RUFvdTYvTEYxd2wwT1hRMm1uCkVyd1RNN2tDZ1lBOEIzdDFuSDZaMnhoRFJmNjZEUHRkVloveTV2WFNvV2FHbVpFWndRWDFIaTVzMW5mM0pxN2cKcEZqYUpkRzZHRzdPNjhiSDd1alB3L04vUlFGZWhBK2N0cENhWERiaHR0Uy9LckhxU2FTSEJPaDBwS3hVVFI1UwpHM0N4bHllTUNGd0xqVjZvb0t3dTRnMnhOWVVFQjFmRDNRdUFQM2J4cStKNVB6N3duektYNlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-internal-lb-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuekNDQW9lZ0F3SUJBZ0lJS3JyUnZHRWdETUl3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05NVGt4TWpFd01UQTFOakF6V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Y010dnFra0hlUGU4MHlBODRMc1FoaStCNUxINngzVwo0RXhicW9JV2hpYXlBWGNoc3Z2eVhkNDRqVTRFN3BkV3MzOXl0Y08ybDMvZ05RYVdrckRrNkw1QVhaNWluWWJVCjlmeXhCWUYzbEFRam1jV0dyMktZVzBmS3doU3JickRiVHFOQlg1WnBQNDlTYjM3b3QvSUcxOWVNWkQ5THpDYVgKaWxkbEovdUU0NUZrZ1d0Q2pmNFIzNW5GNXZ4Y0YvYUYvV21qTTdtUERLbG5iRitoWEZTWHh6T1NVYzdVRlgvSApUdXUrcDZ2T0Y4Z3hJOWFmYVB3TnIxTEkramxmSVpUbExYdFF6RFZXdVNqb3hrWmhic3ZCcitmNmE0TWlpcnBICmg0aUZQMCtKQmpXOXhjS1JScnRjNzN1amZkR1ZncnpzWUQ1MXVkbTZpZjFHNkdxcFFiYTZCd0lEQVFBQm80R3YKTUlHc01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREFmQmdOVkhTTUVHREFXCmdCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREEzQmdOVkhSRUVNREF1Z2l4aGNHa3RhVzUwTG1Oc2RYTjAKWlhJdE16UXpaaTV6WVc1a1ltOTRNVFkyTXk1dmNHVnVkR3hqTG1OdmJUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBSHN1RWthZEFUdEUzdXhucGx3QXpld3FKMGtXeU1TVjJEdmZ3aUVuYzh5ZjA4MzhLZHJTWmpqK1ZIQnRnCjZFekdITnFWRnlaMFNVMUU4STQ1RlZSbk1FLzNQOUVXTDVRbkZJWjZacVdwOVJJTzEzcW9EQS93V2tqdTVBMEYKeUlkV1I3cGJOM2ZTb2VxYXFsUHBMYy9lS1VJalhGUmxqeDlZQmhsQm81Ym44UUtrZlBUSCsvejRTNjFQbjNxWQpvSm43RERDVVBWdktvdytFRHRMek9FZ3VqZjdIaVNQQXgyY1d1bGtGc0tndkhVU1VDRXFxbVRyT0lSVm12KzhKClRlbTVBbHJHK3d6aEl2UE9EZFhkWHdQaWxTTFRCNXM0ZGlSREZZU2pRWmFYR1lVbWkvVXordHBJbTZrTERJcjEKajNWYWc1cE4vSnY0TWpFNEsydmpTMFRjTkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlhRENnSS9nUk9yc3dEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05NVGt4TWpBNU1UQTFOVFUzV2hjTk1qa3hNakEyTVRBMU5UVTNXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFKcnVPZmc5K3NsYjEwZXdIRlcxVWt0bXhhVVkzMXJXClM5dTV2UTdtSGNMT2h0c1hQeUlpOXFFbWQxUXkrd2ZnRUdwUm5DaGYzUkdLNVAxdGc0WXo3ZkkxYUpWZWlGK1cKME5ZdGxVOE1MbjVEVytlVnNKN3hwVk52VlNxVTFBalJTUVlqQ0Uvcm0zbGJBemtlOEU1RzVsbEJHanZxVXVyYQo1a2htWm1VSjlKNXdjbDRiSFRVelc3MzlQc1RVUG92TFdZM1ZCLzFiN3ZTa1pCaG9XTzh1WXUxTEJJS1RCdDBqCjF0Wnl3UWxLTFNDRkZWVHdPTHJRazRteEJYalhyVUwxTFZsSmN0N3BvU1BVb25DMWpFUFFwd1hYU0kxam9MUFgKbmlnQWNrRms2bzdwZk1MRVhlUCs0RmpObnJrN25YaUNsZkxqUTdiRjZ3M2tJem1kM0E2Z1l5TUNBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQndaCkh0a2lIbjJrOC94eHI5RVRMZnRUVXdFOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmxLU1pDT2dSaHhKUjYKMEpFa3Q4KzdGMk5XSktXMzlXNUV6VE1BOGtPZDlJUXQxVGtLNnFEYlhjc1YwY3BDNGFzWm1ZdU5UY2NKZUZHTQorcHlhTFZ6TU5DVVdxUHMrcUh0UElsY3VJQXNWNVVGZ0FYMkFPQ3dOU0NnNTlwNEFmVFhWblk3VWNJMk1Xa3NPCjVNdjNOTExmRE9heVVEYk9zY3FjeFpVOTdIWGxST2F1cU4xZ2Y4NHVJNEdmV2JBQUlCdEZ3RUhwbG55UG9iakYKSVFGOUw1NTlVdVhJOTRoSzlDVEVaSUNhemxsSGZGYWk2QitpZWVGZ2FYQThud0NwTzFwYk4rdVRiQkpEY05GUApWbHI4ZWdFZlEwVTArUnNWZlJTaE5wYzRGTE54S3lsV0I3eThyT2pFOHh2ZkJqMVRrZ0RZVDdQYnV4UFVLV25xClMvYm1pQiswCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-lb-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbXU0NStEMzZ5VnZYUjdBY1ZiVlNTMmJGcFJqZld0WkwyN205RHVZZHdzNkcyeGMvCklpTDJvU1ozVkRMN0IrQVFhbEdjS0YvZEVZcmsvVzJEaGpQdDhqVm9sVjZJWDViUTFpMlZUd3d1ZmtOYjU1V3cKbnZHbFUyOVZLcFRVQ05GSkJpTUlUK3ViZVZzRE9SN3dUa2JtV1VFYU8rcFM2dHJtU0dabVpRbjBubkJ5WGhzZApOVE5idmYwK3hOUStpOHRaamRVSC9WdnU5S1JrR0doWTd5NWk3VXNFZ3BNRzNTUFcxbkxCQ1VvdElJVVZWUEE0CnV0Q1RpYkVGZU5ldFF2VXRXVWx5M3VtaEk5U2ljTFdNUTlDbkJkZElqV09nczllZUtBQnlRV1RxanVsOHdzUmQKNC83Z1dNMmV1VHVkZUlLVjh1TkR0c1hyRGVRak9aM2NEcUJqSXdJREFRQUJBb0lCQUJnWjVSU3o5NVpwWGhUOQoxWHFUeVdpSFpVbW9rOTVhcGRSWmtZcUd5NnhwV2xzc3c1cDQyK3IzdytwcVA5amF4MUx5dlJzZXhwSWJERUpNClRnQ0xoWUYvUTNTeER2L253emIrUWxMWXIwYmZEYVg2Q0U3QmdwbDNJVVdOZjJxYnZBTmpZY0NsQXp1ZXArS3oKNkdnVTZYS0xDUnkyK0EwbTNsbjI3QWpkd3ByKzN5VDFWejhZc0lpN1VxTWxaenZTZnNLY1dWSzJCVkhCTnBRNgovTW52SEZQMmdKVWZGdlpReWxjdW4yaHdZSklBS3MyYTkxWjZPMDVkZWVFSVJ0dXpDaHcxM1d6Y3NvSUJENmV3CmtXc0FoSkgxeFluTFZKa0d5MEtqRXpJSWxsYnZ6dUVSd1FjRVhhd2tNT0lQYit4ZmRVVHl0cVNZd3BVY25jaHQKY0Q0ZjdORUNnWUVBeUxibXVLMDk3QmVyaUFpQ0VuQzJrZWJkblJEcmlzeS9sS3plR0x0Ung0aDNUVmNIQndLTgpJWXVOeWNjT3dsZEpmZGNkUmc2RTFxclNYd3p2SlMzVkttampDZnhJampMakY0SUJLTDE5elFIaXlKYlJ3Ukg5Cm0rSXZRdkJUM1ZWd2F3MHFuOWRwOGFIZzlERlFDNUp0WnN3djAvOWYraWRmaFRVZU9Hb1BzMXNDZ1lFQXhacncKU2MxOXEwYXozR091TVRLUTc1bWhVT0gxbWRLQlZ2ck9NdXZTbTBRMmd0TVE5T1ZFVGYxQkRraUtTZHRlZVpjOQowYXE1aHBFb25ubFFOd2JqMmhRSVFVc0k4anJhcG85aFVpOHF6N1ZOQnNRenBsSkt6Qis5emNrTW4zUTZPUHdyCmV2d3pMNGxuSVBIdGxFT1BHcG5JTm9IYVVxN3huN2xXZDI4NkFka0NnWUJyTFJkSVYrR3YxdmZXUE16UDhmWGIKTk03emx0eGZrbk5lZld4ZkFtOXB2NW9NNTBLdVlKTmg3VFg2SDl2bXRGdGU0ZVlVeVozdlR1bmtyWEJwaHU3RApwWnhPY2JPQWt2V21VTm96bWZPNTY1N2dnNEJmdXk2VDlaUk5CeTJSQzVWcTVHMzFTajZkTTFaK3JuSlNxNDdWCmpJU2hqRVVBdTlPS3V0RjNTRk0zN3dLQmdDdVFMTWtZZEV2K0drakw4T3NIcXN3bm9saWlkL0toWmNJM0tKNHgKUHd6YnpPaXFmMko5Nk1FSXcvN1NIeXFKSWhyTUxPUzhMb3BzRmZoWjVrVTdUNkFVS24yNmZRNXB5eXBORWJkOApqb09jQkk4cFVmbW95clNWaXRLRE1EVTIrbDcxdU9BMEdWU3hoZnJOV3dNRW9kZkxiMGdVK0h5aDlNS3hxVTVMClJ3NkJBb0dBRlFHUGxzNzFLdnVFSGhzU1JkT1ZiNUczV3Bkam5oSEk5MWdYN3AxbzQ0T2lpT00reFYxTFU4NEgKT3ZDamh0SnR4MURnL0ZVTFZicjcwWko0MUlJRng2RFBURDIydmpsK3RUdHN4cjcybzZ5T0Z4TTNQeEEyVTB4YgpweWhVWW5uTkVYQkNOLzBnZ2x4RWhBZ3VvWCsxNm9Id0pBL1lYTXhnV1NoR0Q3Wmx5OWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-lb-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJYURDZ0kvZ1JPcnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05Namt4TWpBMk1UQTFOVFUzV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSnJ1T2ZnOStzbGIxMGV3SEZXMVVrdG14YVVZMzFyVwpTOXU1dlE3bUhjTE9odHNYUHlJaTlxRW1kMVF5K3dmZ0VHcFJuQ2hmM1JHSzVQMXRnNFl6N2ZJMWFKVmVpRitXCjBOWXRsVThNTG41RFcrZVZzSjd4cFZOdlZTcVUxQWpSU1FZakNFL3JtM2xiQXprZThFNUc1bGxCR2p2cVV1cmEKNWtobVptVUo5SjV3Y2w0YkhUVXpXNzM5UHNUVVBvdkxXWTNWQi8xYjd2U2taQmhvV084dVl1MUxCSUtUQnQwagoxdFp5d1FsS0xTQ0ZGVlR3T0xyUWs0bXhCWGpYclVMMUxWbEpjdDdwb1NQVW9uQzFqRVBRcHdYWFNJMWpvTFBYCm5pZ0Fja0ZrNm83cGZNTEVYZVArNEZqTm5yazduWGlDbGZMalE3YkY2dzNrSXptZDNBNmdZeU1DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJ3WgpIdGtpSG4yazgveHhyOUVUTGZ0VFV3RThNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJsS1NaQ09nUmh4SlI2CjBKRWt0OCs3RjJOV0pLVzM5VzVFelRNQThrT2Q5SVF0MVRrSzZxRGJYY3NWMGNwQzRhc1ptWXVOVGNjSmVGR00KK3B5YUxWek1OQ1VXcVBzK3FIdFBJbGN1SUFzVjVVRmdBWDJBT0N3TlNDZzU5cDRBZlRYVm5ZN1VjSTJNV2tzTwo1TXYzTkxMZkRPYXlVRGJPc2NxY3haVTk3SFhsUk9hdXFOMWdmODR1STRHZldiQUFJQnRGd0VIcGxueVBvYmpGCklRRjlMNTU5VXVYSTk0aEs5Q1RFWklDYXpsbEhmRmFpNkIraWVlRmdhWEE4bndDcE8xcGJOK3VUYkJKRGNORlAKVmxyOGVnRWZRMFUwK1JzVmZSU2hOcGM0RkxOeEt5bFdCN3k4ck9qRTh4dmZCajFUa2dEWVQ3UGJ1eFBVS1ducQpTL2JtaUIrMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUpCSkszYW55VWF2Y0kwYUNBMFVGNExKU0VITER3ZDVMWCs0b1cyLyt5WS9HZmVYCklFRVdIWTVuWVdIczV4cTJrNE5tMFVmNHA5Y2doQUI1ZG1SWU1DN1ltQ3RhQmlYTmUvbXN6Ti9GR2NMdTBsY3kKTWIrU1pxR0JUaVZZSStZclF4emJVQmlyOVNSWU03T2hFOWZpem03b3NzR3dlVFNGWWJLYzhjRUw5Tk9GWVBNSgpSZ3FJTmNHT01ObnJmZTk4MzJQdUZ4VkVEZVV1clkyRytaREtwWDNudlBCS1BrTkNBR0lubWNMbHpXZjIwR3RICjRWay96Skd4bzkrM3IvN1BjVDZ3L0JTVkd3WlB6cDBIa2JRVVZtaGw0bFA1ZEJ1elJnZXN6WUIyN2hsRzFoT3UKWmpIakIzbUVpcmNuZW43VS9pVFRxdDJtNDloQmlHYmJtRmxrdXdJREFRQUJBb0lCQVFDWWcvdERKSG1BMVoyeQp4NWRrWWRKaG4xMVFEYmFNZytONld0b3E1RFBLaWcrSkdOWFUvSlFXOW8rdHBLdU5Tc0RuWTZXNmVkd2NicVRiCkVEMVBQWnEycm0ra1IrYkx2Nzl2bktKVVp2Sk0ySTVjV1Z3TVNqL2orY0NONEVSVzNpU1FBQytubjh1eDkwZS8KNmNmSlN4U00vSS9rOERReDVObjRJdzZZcEt1SnN6NTJBU1FRV01jN0tBMjR3VzFFbXVONU9iMUlWYzlWR3RyYwpISk9sc3F1dHQrUG54OFFyU2dMM2xxbEFrSW9qNEtkdkkxcnVySis1UnNXeDBNbUJadU12ZlFEWXVGNUJlZkFqCjQ2bGZJZXJHUnBtMmNncFczQnM5THVXZ21TQzBKOGNxVzBNUk1RVXhiNlpYYkc1N3c3N3N1Wkk1UjdKUXlWNmkKLzB2ZkZ5VGhBb0dCQU52WlF2WDUrOFU0OVFndmI2OXRZRXJKcTNsWlJuclJsa1JnSmhJdWJVTFFkZksydkxYZApjMXRhVWpFZy96OSsyNWhVNElxQ2N6ZlV0RmpzWk8zbkt0aFAxSTlaRjJyUy9iRmJaT0d4Ykkwd2hKSDdKUVhQCjAwdEtJSnJKTWV2QzBmSnVhajRBL3VFaUhNMWlBeFZONWtiZmtxa1BDU0hzcWhPcGJnVncxVEZ4QW9HQkFOYnAKcW9qMnhPbnR4bkh6SkxxUEdhL1U5dUlSTERLbDVQSVJxRlNuUW1hZEc2Yk5yWGNwQy8reHQxWkpjcS9naE5zOQpEVktjZjRkdW96Yk5iZlpkS01pb1d2T1FYa2JXZ1NQcHRqK3pYZWtqUThNZ2NWUkpJVW94YmpUb3YrUVFTamlhCjFaWlNsWHV1SGxXV3ROaSt0ejFUL1FqZVBFS084NXJlZkVhclZDTHJBb0dCQU1WWHhLK2Y4Y3diVUhoRWZIQncKTWR0d0k2Z041eUlnT0U2d0wveHFDRkhOWmRLMURiZ0NUS1pYOFNlQWd4NnY5TlpNZWpKYTNxbmpHUEFwWW4vYQozYTdHR2Z1QzhXNUdic3RoU3JEODNuL3VhVkhRcW04SkdwV2V1SjI0dEVMNDRoUkg0TDQvam9yd1lBSk1WSkF2CkdPSE5sb3lDbnFRQkdMb0ZnR2tKMjVWQkFvR0FLV25yeitybHRVSjVyRG16aVRQTU9tTHFsRlBFMVptOFRaMXoKZDZTbm1naUtiSkZUN1JOKzJXNFFxMU1LQTdSYlJiZzFHZ2RJVi92TS9lR0dZQ1JCbUxGQW5aRGphZmtwOTVhdwo1UU9XaERla2RqU0pRam01YlllcStnMGo5VG5pWTVnS3NxWUZZa2tDVlhIdU5acEN5MUdsQUJGN1FVUTAwMUl1ClZwdnJZYk1DZ1lCTnRvdXpuSU0wUTQrL2JJV1V1THRBOUllcW5ockxLRHk5L3IvY2xFcWhNYTJkSjVRZWVxNG4KT1hkQWlQei9kU0xSdGpDU3o1RzJGdzZvUFBCSnVPRzgzQ3hZcnZza21zV2lrQzR1K29UYjZ3cFJTbnFOVFREcQpxSTkxSzRsaGp2SklBazk3S0NncWdiL2ZIZHNYODV0dTMxOHlaL0lnQ044TGY0QzYwL2piSnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJZXZQVnk2eHJUeHN3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERURTVNVEl4TURFd05UWXdNMW93TmpFVU1CSUdBMVVFCkNoTUxhM1ZpWlMxdFlYTjBaWEl4SGpBY0JnTlZCQU1URlhONWMzUmxiVHByZFdKbExXRndhWE5sY25abGNqQ0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMaVFTU3QycDhsR3IzQ05HZ2dORkJlQwp5VWhCeXc4SGVTMS91S0Z0di9zbVB4bjNseUJCRmgyT1oyRmg3T2NhdHBPRFp0RkgrS2ZYSUlRQWVYWmtXREF1CjJKZ3JXZ1lselh2NXJNemZ4Um5DN3RKWE1qRy9rbWFoZ1U0bFdDUG1LME1jMjFBWXEvVWtXRE96b1JQWDRzNXUKNkxMQnNIazBoV0d5blBIQkMvVFRoV0R6Q1VZS2lEWEJqakRaNjMzdmZOOWo3aGNWUkEzbExxMk5odm1ReXFWOQo1N3p3U2o1RFFnQmlKNW5DNWMxbjl0QnJSK0ZaUDh5UnNhUGZ0Ni8rejNFK3NQd1VsUnNHVDg2ZEI1RzBGRlpvClplSlQrWFFiczBZSHJNMkFkdTRaUnRZVHJtWXg0d2Q1aElxM0ozcCsxUDRrMDZyZHB1UFlRWWhtMjVoWlpMc0MKQXdFQUFhT0JwRENCb1RBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFdwpEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVFya21PMEY3NVVYdFVWemYvb2czcjR5SzNQZ3dId1lEClZSMGpCQmd3Rm9BVVFya21PMEY3NVVYdFVWemYvb2czcjR5SzNQZ3dMQVlEVlIwUkJDVXdJNElKYkc5allXeG8KYjNOMGh3Ui9BQUFCaHhBQUFBQUFBQUFBQUFBQUFBQUFBQUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWgoxQ2RmekZsZUlENmVyclRQNnlYN1Bjak9xNWs4T3h4aGJRK0J1M1ZRemJLdkhmcUJLcVhDSHE0VWphcm5URDJtClVDdnAyVWxFczNBRkZBWEU0ajBZcEhsOTRpeitVYm15L2daK2c3ZFBTcDBkYkp0VmFzdTZJaVZNYmwxbFE5ekEKZ2pQOGxWcEVvakVLUk5TemJ3T2hnQ0lvcjdicllxamxWOXRvUVFxNThtNTl0d1ZBV0JYMytoUzNmTzlrV2k2eQo2eHhGMGJWYkFoQzVaZnBNclJaMlZVNzh5OVc4TlJ3YjNBcERxa08zZGhMUkxTNE91VjdhQmpHeDFoMW5TM3kzCnRoM0RYY1pzV3c4ZTdMc0Rvc1JYZXRJZ0VKcXlzVExVT0dqblZkTS93dHdhcHdHaGxZVkxCN1Nleks1OWtZaTcKTVFyR2JaaGR4UENMcGtRbWN3N1MKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNTFKMlR3VXkzc0VWTkk5SWFWT1doOVFtMTJ6RFp6RnVIM2xOcEVNMFh0RDVBRlZ5CjNPMXc3d09QTUFpVlBaV0VKcjdqbm8vZ0pGSnJsNE5MenNIV1h4YWdvd1lTOWZUL0Q1MkFiNFk3SnhXbFVBb0YKTEpIcERFNTloQlRtMUhqV2NkaFlINjBBbzJZS2dMc0RSYk9CYXdma1F5OHIxRVVVZXF2THFLRUpwZFFxOWdrVwpEb1lyRU1lN0tDZHJTZHVQbEFPWmxLNEU2Y21VQk95OWRqcGc4NXFFNnRqbHkyR21kS3RRYzFldnpHS3A1MWQrCmF2ZjRGT1QzWlZnd2JWRW53V1NYNXU1YU4vcEpwQnNERFRLczY3T0U5RjdHM3FTOWVTcGRsclZRUURjcXBzcmIKQzdkRUJwbHFvcC9jK2lVSWg2SWhzZ1FkV2JHMWVMWHhFWVNURVFJREFRQUJBb0lCQUV3RmU4QW9jemxsdHpSWQp5bkZpK1J1V2kxVk05MExZcWRwS0lVd1VrZ2QvSWZZTUh2MmdRdmNwOGtyVTUwY2Y5aGhOcjd5U2lCVW55Umc0CkhCZk0rRWl6eFFNT29maVhGYVBxSFNXSnRiTDRtQ1dmeFdlS1pFNlpGUUx0WTViOFIyMk9yaGRxNGNUUmFpNDQKUjdFR2QwZlhoaHJXUzg4dERMZnI4Ymh2aEI0czVpWlFYZFdKaTBqSmlPTDllaVc0NHpOdVVDS1MwU29pZWJYcAoxdWhZZHM2eWRtNEdINjJvTCsrUjZVTVY4K084dDVYeVhhS3l6Z21oTTlDMTR2cktxMVN4ODhoeGxSZGJBbkVvCng4bFNkZ0lRdzJKM1E3V1NzK2hWN21sWGloZHNqdmE2c1lCS0F0bFRiQVY1ODI5WVlXcmwxRWJZRFN4eHdiK3UKRi9XNW1Na0NnWUVBODdibGdwWTBDbU9YY2FYenRaRnRraURjM293K3ZaQ2ZXdGhvbnRPVzZVcnR0OTZBV0xhUQpqbmcwOTFGRzFtSnZ4K2VJUitrRVB1UnJuZENXTUo1b1g5S2hWUUJRNDQ1YzFxcUdwdWQ3YUtQYTF1K1U5WldDClJaeWZ6elA3UGoxV1JwcDEvS1d2ZjdRZE14aTM4c1A1Z3pJbm5yeFdPd1BMdWRKQ3hXN3JSTDhDZ1lFQTh2dWsKOFBGQmpJQ0pBZ1VvUXhQd2RwWjdiMmRrYXdUSFlhY2pHTHpYdW11aktQSGJmWStUbjlKcFc5cmcwWUJoMjdjdgp6YU1QcFl4dTAxZU1jZHVocDJWOUFuTk9FaDZ3elVoU1NWZXVlcVFNY0JRRXVPalVZakZpbkVid0ltMGJpQlZBCkJKeTJLd1pkUC9lUThrRS8rcnB5YWtiQzdBMW9HN21vMC9kbURDOENnWUJYWGl1c3dyZnBPWWFqQVVENnlDV2wKaXc1aTRaZmtVU0l2YVFFb1h1WHN3Q1cwRXBta005NWlsSWs0Vi9TekNoclVhUlliNFZiYVRQeWZXSlZlM0lyQwpQem9DeE5nNm0yQ0F2Q1VGVkZxVFNwbzdEeXd4VmVXYm11aFhXV1VxRE1jUERIUmJtL0hzTDk5LzM4Nmh3c3VCCjBzc05ScXNMQVBOWnJCeXZ0bkcwOVFLQmdRQzk5dmxFR2duNk03OXBvZWlSVUxSdHNrWjhtV1BMdTJlNXMvYmYKYnp4bGxhTnc3bTJBWTlDeFljcFhNdThUTzRER1N4aUhkNVZUQTFEZDBCT1FMSHJjcVo2clhNUkxyRXpqb1VnYgo2UDRUQ2RCamkzTUpzWlhoMHVSYWM2ZG44czlVZS9DWjZuOE5jaU5UVUZTMDRVaUkyRjE5TXlkUGIwZldiVGROCnlKeXlwd0tCZ0dRdjkyMys1Tm8xMHZCbit6MGNHTmRvMTMxVmpVVDhvSFNaUmkxdGEzQ1ZSMXloNmJ0QkRaUFYKbVFxK090NHMvbmxMd3JUY281YmpFWXhML2VUTUoweG5Xb3lZSkdKRDBZMlhDNGFGY3VmcngyQ3dDZ2dsdmFyLwpiZyswSjN3R2taYXlaSGV2aWhZMy91N1VLTllhbnR3ZHFRVDhRVDl0dStpMzI3VnhGelplCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-localhost-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjRRTHU2L2VBQlowMGUvckRSWTZvVlZLZ2RBazR1WHNUT0ZBYUFpRXpCekJDQUpZCjJHSFJIam5Ga1MySVdXUnRsQ2g2dlhFQnRFd2x1NUNYdTlaMjFTU1QreTVEc0ovcU5WNzlIOWdQN0FTMHJXM0sKdy83YjhQYVFVdStoSDZuNkJpVGtPSWhITUZXTG9CSlI0bzNkbVlZUUZkSVJLQWM5MkRHZnNMclkxeVFIblp3NQpkVm5TcTdidWM0aVNTMHQ0ZHBwdHdCbm1tcjlYVEVBa2p0QXFBbHpQMUk4VTd5Wnk3WThCRk9KZ0hPQk16V05zClBVb2NXanJ0alpmYStUVFhndGd4alFJNys2ZGg2RXRaSS96b0ZZd2R4TXYvanlsQWd2TjVXOXp2Rmk0Lzg0cU8KK0RTVzArRFNTZ2NXMGl3ZXlQckFXYVNyb3c0SGVuSXZMU2VNS1FJREFRQUJBb0lCQUJrUEpGRzJ5VjUvMWt3SApFaXM3S2tIUW1LT3lJU0lZSzhYS1AxVGJLb0t0OUUxOWNFdnNvMXZLYWMvUmpXOGQ3SnREc0VxTjhPMWFGZVVTCnZ1Yzl0cGUxOGo3aG14NkRwbi9hUVErajNKb1pEZWJaRHlNdXB4NWZSYm5ocHNLTGxUdjlWbXhQNE1JZzVKK0YKSGhYWHBYVCs5QnI1ZENPZjdRK0ovai9RWFpkUnUvRU4zTnh2TGxZYjBkVlBTMDNxbEJxWTNwajBmWjREcmJrYwpKWlc1eGF6SFpoU2RPaU9aNVA1NlIwV3plM05WM0FZaEtEeTJFNU1ncm1sTHNoRWx2Qit6cTlla0dtMENubEYvCk41UTBZRnRRREhoRWFhdmVBTE1IQ3lHd0J6NCtLQkNMWSthUUgyZkJIZTR5djNVYUxFZ1RUbWppMEZoVzU5dUUKZ0VpVjJFVUNnWUVBeHNLQldIbUJoTlcybFV2RENTcVRSZ3R2dzZzMzR3OWlxUitFaGJjcUtxWWp4VmVnM0s4cQp1d09XQVpzQVdoc1cyanBhcUhjQXNDd21SMW5BcXZaZHhjWkJwektjQi9UK2NuR3ZDb1FnUFo5b0lmNDI5ejhwCmhsV3orTVlIQ1QzRzNQSnNYQnF0UVV3cnRBdGxzSnZ3VzVzUzdCZ1lCQ2gzdFhxNkIxQjRlajhDZ1lFQTRnL2kKNEh1eGZOVEVFOW5aWWJLTUYrY2F3MnZGOUh1bVZxaVFiYnh4a1BwcFkzV3pCV3ZXMG1veW40NHByRTBaS1pTUAp0N1oyOE1IUU5ZbTMyZkYvOHo4ZjEyTlk0S0hRRE5FTG9TN1hwTTUvNnBYaTBQd0szOUo2THZQcllHODVZelE5ClowSnR3UTRiNDAzbjI4NUhVeW42SllIeVpaRDh6VzZZcTdRaVQ1Y0NnWUJNdnFPazN0MjB4YlJITjBhcWptYnAKUDljNnpTeTZIcUd3dmJ1MHljR2RVQ00xdXAwaE9QMmQwa2VrZlE0SXZMYjVNbGo0L1dJbHBCWnZyR2NwWEJGZgpJU3NPZlFza1EyUFFHcmRFcnptbnNacEtyZGJaWnVrSXRxVFVKTnBvcGhMWUV6N2wzV01TZUcvVGlDY09wMWVLCmQzazU4aCtyMDFoTm1ZS2srbHhhandLQmdHRldpODh6RTVKM250SVpYSU8zdUtEV0x1ejBhL0ZBaUxnSnJ0N0IKWkhrVGlldDhrNUFEQmlYbCtsUS9oMndjYW5nLzhyNGRBQXZjdUVWRlBuZkdoOXg2VXNDUWs0VnR4MEt0aEg5cgp4d2k4cmRHWnBtZHNEMWFlcjJPbVBiUnhUOW1LZGVJUGRXaktKWEh6YXFGM3FiaUNlNlpJMU5HczQxMmxnSEYyCmg4dVRBb0dCQU1SUHNCZzhzYWE3eUZXVW9TMFZMbFloY1ZKblM2WVUxeVh1SWVhaDZMT3FUdzkzTU1hdEo4bHcKRnNHMTdPNXdnTVdseG4rdTgxeWdxcS9qZzRSd1lsUktnZGNkQlV4Um4xQnlIaitxeXBDMS9xaDY4MzFvRUpuSAo1Y3BBVGtzUTFDS0gwanhockNUU09ZdWRaL21TWHNMUkZHM3FOaFVkU09Mc0tGMmNBZ3VVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRVENDQXltZ0F3SUJBZ0lJR1NyMXhGM25ibGN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRFNU1USXhNREV3TlRZd00xb3dOakVVCk1CSUdBMVVFQ2hNTGEzVmlaUzF0WVhOMFpYSXhIakFjQmdOVkJBTVRGWE41YzNSbGJUcHJkV0psTFdGd2FYTmwKY25abGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUsrRUM3dXYzZ0FXZE5Idgo2dzBXT3FGVlNvSFFKT0xsN0V6aFFHZ0loTXdjd1FnQ1dOaGgwUjQ1eFpFdGlGbGtiWlFvZXIxeEFiUk1KYnVRCmw3dldkdFVray9zdVE3Q2Y2alZlL1IvWUQrd0V0SzF0eXNQKzIvRDJrRkx2b1IrcCtnWWs1RGlJUnpCVmk2QVMKVWVLTjNabUdFQlhTRVNnSFBkZ3huN0M2Mk5ja0I1MmNPWFZaMHF1MjduT0lra3RMZUhhYWJjQVo1cHEvVjB4QQpKSTdRS2dKY3o5U1BGTzhtY3UyUEFSVGlZQnpnVE0xamJEMUtIRm82N1kyWDJ2azAxNExZTVkwQ08vdW5ZZWhMCldTUDg2QldNSGNUTC80OHBRSUx6ZVZ2Yzd4WXVQL09LanZnMGx0UGcwa29IRnRJc0hzajZ3Rm1rcTZNT0IzcHkKTHkwbmpDa0NBd0VBQWFPQ0FVTXdnZ0UvTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdncgpCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRZEV0SDRoNnhSZWRJMmlhamQ3bkJGCi9ld3RUVEFmQmdOVkhTTUVHREFXZ0JRZEV0SDRoNnhSZWRJMmlhamQ3bkJGL2V3dFRUQ0J5UVlEVlIwUkJJSEIKTUlHK2dncHJkV0psY201bGRHVnpnaEpyZFdKbGNtNWxkR1Z6TG1SbFptRjFiSFNDRm10MVltVnlibVYwWlhNdQpaR1ZtWVhWc2RDNXpkbU9DSkd0MVltVnlibVYwWlhNdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oCmJJSUpiM0JsYm5Ob2FXWjBnaEZ2Y0dWdWMyaHBablF1WkdWbVlYVnNkSUlWYjNCbGJuTm9hV1owTG1SbFptRjEKYkhRdWMzWmpnaU52Y0dWdWMyaHBablF1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSWNFckI0QQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTWNvd1B6aUhrSkgzL2M2QUlJYVNocW53VkxsdjZVQjE2c1BYClk0RFRsWDc5Y2lnWC9xZ2VyTEcvMU8zU1YvQ2lGbWFaeHAzNW02UEhYNDhDdWl0MTZYelJFU3VwdU4zVG05cEQKYlhuYUxYREdSSmJHQUFBRzVrSGJCWDN4UDFadktEUWVsRnRoZDlBTFNDeFlLZGplckozRFhyVThMSHpMSEtyMwpyWmExV1ptYTREbFUyNXkxN2xKbGhuRXpwYW04bTZTMU1KUVhGMUhCMm5xSllWYXJWZnd3YlI2cXEwQ2NuL1I4CkZsdG9YbzBnK2I0b282QU9LcG9UQnRNZEFGWmtVMEpaU0wzamEreXdMVG1HL1BJa1JqOUNjaFNHdUVBOHBPTW4KZC8xRjVvRnNBTDcwNTc3RDFhdVZReGIzV2NOc2pycVZCbUxlZ0ZoY3ZLY3c2YlJ2VEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUllaXozWWpDVEhGUXdEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRFNU1USXdPVEV3TlRVMU4xb1hEVEk1TVRJd05qRXdOVFUxTjFvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUExR2lycnkxNStKWXEyOWhPY2s2Mk5QMlF5amZNOXo0Y0tYL3lnMEs1TzA3TGlOZktXQnFIQVM1YkdSUlcKY0I0eXNNWWJsUktNV29TV3dmYm5oYzBMWG1IVkU4ZTBINlQ5RzZBUVVyNnhRenlDU0p3TnZydW5BbFhKVTJoNgp5MjdtdTdMVjZLc3VMb2dnTnVSR3RnZXBRdHREZyt2QkJuTDlZbDRZNklKSGlqdlM1YStid3ZBcFEraUhBYmxXCjRVaDc0WFEwemRMVytlcEJYVFBvc1RPeG91L0ZBZ1JkYUFUcnBPbTNrWGFLY1JXU2N1TmhndU0zTXZZb1krcXgKbEVRR2svYUxqMk1sYmVXUzY1Tk1YdHFvejNxY1l6enFrR3NwVmRpMHBhK213N05HZWNaKzk4RW95YWZlamNMUQo3QmRKdVRTbUFWMGFDM0ljTmNsbjY1ZXpJUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVSFJMUitJZXNVWG5TTm9tbzNlNXdSZjNzTFUwd0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBS1FORXVSMXFIVmJyUjNuRFVEem9YZFBGSHovVm1BMFljUEJxTkNScUhSUQpMcmt3TGIzNFRobVlub0FieUt3WGJTRE1DbmRzbXVLbUdWcEtJbDZHWTU1VG54b2V0OVh2Q1M4L1IzWmZkV2IvCmRXSTlFN1VVUExMOHpjUDVaUFkydkVON3d5Unp0SFh6ak5LTHd0QVhDdVQzTTBqeXc0bzRaNFN4YkoramFZTTMKbCtjSk54bmE1NnFkd0kxM3dkalRnRGhIRFU4M0psL1kwRS9WdmM2eHVoTWErZFBOTXJ4NTB4Vk90VVM0eVBkeApsYzdKN2tyWEcwTTJuSUUvNFNPMUFvZmdGc0E3OGlPemJvMERUT0poTnpwaTBicTg1QStJMGl4clBNUW0vaGRuCjR5ZE40Mis5WTN6WEh5UVdTK0NFY2xza2tWQVJsK0NwNnZJQ3ZzZENyMTg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLCldCcUhBUzViR1JSV2NCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd04KdnJ1bkFsWEpVMmg2eTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYgp3dkFwUStpSEFibFc0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oCmd1TTNNdllvWStxeGxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWisKOThFb3lhZmVqY0xRN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJBb0lCQVFDM0dtLzlkOWR3S290UgpydHFaQVM5aTZMN2JBMVZHUVIxbnpPc1NxZjhobUNBdW04N0xPanJ0RXJmbkc3Z1R1SVI4REpzVVc4UHY5K0k1CjNJemlzOG84RjF2bVRENERGV2czV3prWEMxbWxtMUM0SlFaWVNFMkUzc3pKZ1FSeHYrMVpHcVg1aHk4dFg1MWQKbEZVOGI4aENZTitIcGtCa1BkWWQ2UDNSMlJTd25LVEhDaS80NmpTL2p4WmozVFFSUnNtM0lFWjVCSUhPb3RJeQpyMTJkelJsNDFmSk9JUm1Fb25ic2lMUzkrN3dpa2cwWUxPNFNkUk4wcHRBaWZ2ZlViay85K3V0dEUrdmUzT1pqClk4ejdzUjdYWUhWOFg2SUsvVVV4bjZYRFpPNG9LV2h5R3VpWWpmYTloUEp6YjVGS05yUHRSQ2VpRmRCaGFDMSsKUnA1WFdHZ0JBb0dCQU52QVV2dXR6djRESVQ5akx4blZvNmJGSVJybVllaXEyb2dxTC9iSkZ2ZkxRdnd2MHZDaApwSGJha0dTNlRHMXp5UzhGdVNoUGV1WkN1TVd6N2twN0IzK3VuaXBzQU9kS3k3SnhlaVEweThPWVYrRU1Cc3NoCjNqLy9SeXFlWk5wZGt0ZWEvVy9OUUxmUDI4WktnTDRaQlh6OXBHUnNlNkhDMjB2c0N0dmJZMTlCQW9HQkFQZHkKU29ibXRzRjBvSTRMejdma3RnR2tEclRaT3hnc2JnZjVsUXdZNXg1WlFicm5wYlRDODM0RUxPdGVNb0prSXhoeAoydFArem42WkNXdXduRjRxV2MxZSt6ZVNhaG14TncvemFuaUEyZ2FCVUJybUtGbWNvenR4VHhJN2V6MnBCQ3NMCi9ray9RTHpuNUFMeUJpa3pqNGJRVHNtTzFxRHlkWERFNkJWY0RUdmhBb0dBYVhwaUduM3Q2Z3pVaTVsdkJVWi8KZTlBSk9PRTJRN2ltbGs4eG9KSWJIU3VLWm9RS0N3aDdhYlUxTTdRY2RUanJhMCtpOVU5WkhXY1BTNDQzSmJieAovWDV5V3NobWtwNWJNYmE0T3VMQW40empPWmxOTlhsM05WNng2U29JSEt4bmpHZlBtRGQ4QmY2V2JoSmF3MlE5Ck55YUVIdFBYYitpWTNGTmJUdlo2TjBFQ2dZRUFzSHFXQnJLRGcyUC9vbTl3SFRLRVVKVkdXOXRXbHo0UTE2VTgKbFIwcHNPNXR2N1M0N1R2aFYyMzQ3NEVHT3hMYUtQUUM0eEduQ29seE81b0JXL09PaXJlRUtqVkZjTCtBaXVMTAplOWhDSjBPUTh5NVZkdHdOV3piTDh5L3pESjMvdUFmY3V6YmVvQnd1OVo3Um9BOEMvVjZSNHBUNkpGM29QcDVnCisrTGtHV0VDZ1lFQXZiaXVVWkpYd3lNTU1xYlQwd3dtWXVzZ1VRdEt2Nmw0KzJvK3RSWnpnVmRHNUZOYzYwODEKSEk2dlp2c2hoRTZEd0Vmc3NvV2ZoM21iMzJDMytlLzQrWkd2U2IzTENEVEJ6cXJxbmI3VnlFUkppM3VsaXhKMgozZXdQZ1lsMm1KV291UEV3Q3ZKdHNQK1lYeHZtUDN5b1ZnTERtd1BMallRTHRKNGtVM2hNL3VVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-service-network-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-complete-server-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSWFEQ2dJL2dST3Jzd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1Ua3hNakE1TVRBMU5UVTNXaGNOTWpreE1qQTJNVEExTlRVM1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUpydU9mZzkrc2xiMTBld0hGVzFVa3RteGFVWTMxclcKUzl1NXZRN21IY0xPaHRzWFB5SWk5cUVtZDFReSt3ZmdFR3BSbkNoZjNSR0s1UDF0ZzRZejdmSTFhSlZlaUYrVwowTll0bFU4TUxuNURXK2VWc0o3eHBWTnZWU3FVMUFqUlNRWWpDRS9ybTNsYkF6a2U4RTVHNWxsQkdqdnFVdXJhCjVraG1abVVKOUo1d2NsNGJIVFV6VzczOVBzVFVQb3ZMV1kzVkIvMWI3dlNrWkJob1dPOHVZdTFMQklLVEJ0MGoKMXRaeXdRbEtMU0NGRlZUd09MclFrNG14QlhqWHJVTDFMVmxKY3Q3cG9TUFVvbkMxakVQUXB3WFhTSTFqb0xQWApuaWdBY2tGazZvN3BmTUxFWGVQKzRGak5ucms3blhpQ2xmTGpRN2JGNncza0l6bWQzQTZnWXlNQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCd1oKSHRraUhuMms4L3h4cjlFVExmdFRVd0U4TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCbEtTWkNPZ1JoeEpSNgowSkVrdDgrN0YyTldKS1czOVc1RXpUTUE4a09kOUlRdDFUa0s2cURiWGNzVjBjcEM0YXNabVl1TlRjY0plRkdNCitweWFMVnpNTkNVV3FQcytxSHRQSWxjdUlBc1Y1VUZnQVgyQU9Dd05TQ2c1OXA0QWZUWFZuWTdVY0kyTVdrc08KNU12M05MTGZET2F5VURiT3NjcWN4WlU5N0hYbFJPYXVxTjFnZjg0dUk0R2ZXYkFBSUJ0RndFSHBsbnlQb2JqRgpJUUY5TDU1OVV1WEk5NGhLOUNURVpJQ2F6bGxIZkZhaTZCK2llZUZnYVhBOG53Q3BPMXBiTit1VGJCSkRjTkZQClZscjhlZ0VmUTBVMCtSc1ZmUlNoTnBjNEZMTnhLeWxXQjd5OHJPakU4eHZmQmoxVGtnRFlUN1BidXhQVUtXbnEKUy9ibWlCKzAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-complete-client-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWDdyRFFPT0dCQmt3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB4T1RFeU1Ea3hNRFUxTlRaYUZ3MHlPVEV5TURZeE1EVTFOVFphTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzRBRko5YUZTZ3lCbDFIeTcrSUwxTUhLZ0pJa1QrUmlFKwp3ZjBUd3BVTFhHUWdsY044MThKd29HMTNQMm45b1lWZmd6VTJRVGNQNmpkeW1lcTlOQmgyMWFKa2VyWkZuQzIxCmV3N0RtdTFtaGJyc0pzVWhyRE1MUk1KVzJLTWRRSWRmSmZpZTlZZ3BKRXRWTllvUjNGT2pFUE1hUWhsUjdYL0kKOGRVeURYd0xReGxXMEFCTndoekExMmhwRElTOWh0WmZ4MnBmeUdVUy9FNUdGaENwODMzMzdnTUtneGFucFB0TApKVWtXaEVHRDlxaUpxajZSWEQvNGpQdUpjYm1oY0plT1o3WmtSM3RFRm5RVW44aVlmYkNRWU9mS3M3dStFMVBHCkg5UXhwcnRSclZmak1UQ0ViaDFVZkNlZGhBcS9VRmxOWkpLZk9JUU1XKzlzbzZHa1lwVXJBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlN3UjBMMApnRUhIbXQrK3cxVUFtdDU0dlY2bW5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFzUVlqcGgrSnM5TGkvaXpYCkI1STFtUFpHenRBNmV0Zi91RzRWemhCM2ZZcHFTMmZ1blRwUU9HaGR0TmhGblYxUXNVbFd6aHlsbklxNFpHekEKSThpcHFTUlBNS0lMYXp5bTN2ZmI1MWtONHhXQy9Ncm9CbnVUN0N2azJHT1dGNjlDMDRkbHh4d2pyN1dKd21PMQpPaEM1RXJGVFB5aVpoUXJkSTQ3UzUvVi9OcnRBV3p0REZab25DdERCU3pEOWJER2NVWHd2SzF2U1RoTVpnVjNUCi9KVTlLQUtqY1J2WkpQRk0xc2tiTjlZMUJhdTRGYXpGWUYycnhwSWI1cFZVWmpsZDRjZkpTdGxWWjlhUUU5VUkKN2Z6L2FUR1JNanNiamtQUGQ5d2pncE5zL0JPaitGditXNVl1dWhqRUhPS283cWtwQ3NMNU1obUJ2NStmZGhaSgppdkhCcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlESGpDQ0FnYWdBd0lCQWdJSVcrSHp0NHVScW9Rd0RRWUpLb1pJaHZjTkFRRUxCUUF3TFRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUmN3RlFZRFZRUURFdzVyZFdKbGJHVjBMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3gKTURVMk1EUmFGdzB4T1RFeU1UQXhNRFUyTURSYU1DMHhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVYTUJVRwpBMVVFQXhNT2EzVmlaV3hsZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURTWGdiOXIrdi91T0dTcndQZFZVendkOUtqQk9HSDE2M0Q4WmNRcFJOZW55QVcxbXl2ZjArakM4TzQKRGhua3dTenVOS2dyVVl5a1dweWNLcldvYUNkUWhaU2N1S1VESHdaZmJpeWlqQkVXakx3OWkwS0Mya3dWTVI5TQp5WmhUcGlKTTZFOGJreXQ4Ums1cDM5SDlBKzJMU1VsbmxFMmJWN05rMlQwdytqNGpGNEtyM3g2aUJBYXdISXJzCmNTR2JZNTdXMS9wVEp0bi9IQ1pIRldmcmNMT3FDMmRhNFJ1U1JwZVhPdlhLT2tPK2JBc2hpejRmU2dqcGt1ZG0KMTFDR1Z4b2tURXorb2p1NkJwY2V6c2NRbDZJSnVYQWtMQm0xUVlqZGI0TFhHQzN2cWI4U3ZyQ0NRRmtPbUxnMQpuS29TS2VrS25YcWRFcnhiNEUvRXFXR29GdEpuQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRaVRPUDUzTmtLQU9hRUt2aDFySS9Bajl5aFJ6QU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQUQ4bGg4MEdDa210UmZ5aThGMkt6bTZzZXZVWjgzNUZ5bmZmWVY1VgoyQTl4ejhTbTByVXBPRUFxb1IwZGpIMjNjRy81a0JTVitBTjhaQWtUTHl4cW9nYzBKdU05VDZrMnlLeTBzOGt1CnJDQ2tVTkE2clpSQkgwM1pIRjEzcnN5a1Fid21hRDJwMGFoRUlnOHppdXZjclVSdWJuaWJ0VXVZa3F1cnpjaHMKSVZ3TG1QdEtyUFRyK3pCR2FwZzhJN0VrZ0NpR3ZHSmxmVVA1S0d5S0JaaVFFRDVZVVFyZGkveWRDZmFTM0FUawpRc0pQeFdvL3I2T012UWVaTEZIRmF3dExmdzhSTkluc1FvOE5waUV1bmdOUzhwc2NDZDNQaHpjakRSUENWdnZMCnl2S21Kdks3SEtwbWxtVTV3V0VXd1BrZEIyQTg1RzdQU0xSWHdZeEc0TzZKTnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETkRDQ0FoeWdBd0lCQWdJSUZkTjBFSXJ1dmNrd0RRWUpLb1pJaHZjTkFRRUxCUUF3T0RFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0l3SUFZRFZRUURFeGxyZFdKbExXTnZiblJ5YjJ3dGNHeGhibVV0YzJsbmJtVnkKTUI0WERURTVNVEl3T1RFd05UWXdORm9YRFRJd01USXdPREV3TlRZd05Gb3dPREVTTUJBR0ExVUVDeE1KYjNCbApibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdrVFRlSERQTXBWV0lya2VJY0ZQcG04TGZLNGsKWFhLcnFsYjZWYXhuWGdCa2VybmxabGMxSTBTNGwwL2hhdWR2dkZET1kwL2dtK0RQZjZpN3l6RUFaM3FNMGxndwpISGFyMlFpUWpuWEYxbHNXVStGZXBiTXVNZ2JSOC8vU3dtVGxnZ3hqdVlyeU1FSkhQbkl4OUxia3Zld2tYRTV3CkNkb2RkUndmSk5IVmV4aGxDTE1ZUHNSeERNZVVWakNZZkJlOUpDanhFZit4MzlKcDd0VUs2d05hS2NwRytTdXQKb0xJRzdLclRIbWdycUNXdm1pK1FnK01yb2Z4djFjdTlpb1dGUHFnSEU5YlpOZmcwb1BQRzVsa29SL0ZTcjFpZgoyMFdTYUo3L0UrOWRMd2c2WlZHc0lubWtCRkFBSlBzNnphcEV5VTlTZWk0OGE4aThEeTZwOW5BN3RRSURBUUFCCm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUKcWtMa3c3bnV6ZXgwWVYvSzJCZXZWbXpORTg0d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGd3hJVWw2VzFiaApUWWRub01vZUlqWXZUVVFldmhSNVVBYk5hVGRqK2tJMThseS9jUVZYZlZoTzQraDNaMTFxTVFrTDJBc3ZzZ09nCkRSbUNLSTd1dDJlRW9CSnI1Z3g2eVBNTVFXV21ZVnVESkptdWdTMTZ1Mk1ZbGc2OWpwUERXRS9IMUdXK3Z2aW8KOFJ3Qm00cm9PV2dUUFlPVnFFTEUxa3lTeG5rQ1hDQmRIaE1jVFRoU2dpdjFVay9sc2djaS80RjBhZHpuNld0SgpVc1RXZHpPN1dOZVZZVVM4K1Q4Q0FUYzhlRERkQm92N0JJcVR2VWlDclIyRmNid1Fmc1JuUWFBU3hCS2c3UzE0ClBOQzBqL2FDL1k1VzNCcHRhNFdyWlY1U21DS3pWUGxIaGRpTStYdDN1akJxVThTZEdQZGp6Y2VYQkVnclpzT3QKQk1RemRjODR6REE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJTWlINlpnRDR0RVV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFYwVjhWTlcrOQpZVElFaCtZNnJxazNDNFFYUWEwQ0lFOExPSnRiUVZNS3hSbGV4N3E5K1JSRjlyeXZRNEcyTGZZaDBIK2ZUZHhSCmh4M0hZakYwZzR5c0JJdldabWVoaXQ0MGZSaE5PVmVXQ0ZDU1lLbG1vSGNTSm1aYnc4ZnFkRjNBRjJwNExFdGMKcEhwSUViZWpmS2NraXpNeUlPaW45Rk9uWmpEanhndW1vSmpRbXU1MkJvSFg3SkJLa09CM29WWW1OeFdEb3IvNwpBUlFPM1VhbnpiMlcvZkcyb29TM3ZMNHBNNVRCY05TbFBCamdvZlIveEMzbFNWUjVPQ2lZVy8ydjUwdTNzNEpJCnc5eWFHeXZaRUlyNDVLL1ArRGJBNEtwSlY4L3ZCOEFOY244TzZnY0dBYTVta1pLZ3hoSWdGYnZXZit4VzdxYmkKc2lRZkRZSEVySUNOQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBd3dXQ085UUNzTjZuZi9sWGd3aVJnS21WYWY5cE5aT2ZBcm04aW9LcFpWK3lyYkVlWDVjRnNHUlQKa0FESktjaGg5SDEvcVppRDdNUFQzZzJuWkdoYjlNa0hsWFZCU0RUSDlTODFYbmt6UGZHcDhDZXNMYXZWVko4MgowdDU1NmV6eldqcVFIU2szcUs2Q2ZUMEs2RkswcXFRNDNYTW1sRGl6Q1dQUlMzaUtPSUcxZENJbmZNQ1BmQ0FGCkhHZEFNcHJMUWFoS0lTeWJvY0lBWTU3SmhRNlVVVThnbVFWTWtHb0xwdXVRbDNuOVcwS1RIeVIrSTJNQjBsTWwKVlV2dktMQkVvVXRQOTVpa0hkTVViRkplcGpZU3dyQ25qWEMyQ2ZucUROVW44QXJRTE9TUXlsdXZmdC9URjY1RQp6RkFJM0ZuenUyci9rTDRIT2RMZ1V3U0FSRXR3NUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEU0RDQ0FqQ2dBd0lCQWdJSVNlVVJNWTRRdlVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UWpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU3d3S2dZRFZRUURFeU5yZFdKbGJHVjBMV0p2YjNSemRISmhjQzFyZFdKbFkyOXUKWm1sbkxYTnBaMjVsY2pBZUZ3MHhPVEV5TURreE1EVTFOVGhhRncweU9URXlNRFl4TURVMU5UaGFNRUl4RWpBUQpCZ05WQkFzVENXOXdaVzV6YUdsbWRERXNNQ29HQTFVRUF4TWphM1ZpWld4bGRDMWliMjkwYzNSeVlYQXRhM1ZpClpXTnZibVpwWnkxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzcKZzZ6bDhsZ09HWE12a28zYllHVEZVNS9PUHlQQjArUHFCSjhyYlRmN1hPRVd1U3lqTjlreE9CTDRReVRCT2pMTgp5bVNxWjlJbVJpekp5YWdTSW1mdWRES0t0TnhIWTVLZkh3cFNzVFJWUStsNnhMTVhTRjVJNHRNL1RDWEp3RmdWClpEemU0MG83RjE0OWNHdlJ3aFVXSWM1WldidjF6U1hHdDlsL21LdXIrR1d6QjJ2S0hCTy9LWUFDWHdabVh5ZXIKZlJvTmhzZHFwOGQrUnlLa3FSalBYSHlLemxta0hCdlpkZlpVZWlGQWJnNmZtWDJHR29RWDFMY0E5RVlMNFB5aApBaUFabUVLc1N5TWlrR0pKM2pJeFB4VklTbnZEWktEY2o4cmZpa0ZoeWxRVTRqVm1idVUyNDZ2Qmx2K3owSHVJCitKQjUxMlY1NlYrcTdPVDAzWkpQQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTSVBDOXFoWDNEaUtKVHYyNXVxbHRkTWp4MnBUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBczc0YmY2UDB5WGR5Um9LUXQ4RDVOQ3ErbzlMY0FKVkNoT3NENldsZjNhZStaSDA5CkMrQXZMeC9FM3JMajBEUCtQOWdCZllVVU5wMm9aSDROSWRZTFVsR2RFbnpuYXlnTlkxZzVwWTk5a2hXYXJhOGEKWVkwcGlDc1cxUmZYT3dxVGxJRTFGOHkwOHh3VnBQR21ueUVUMmUyV2tzbEdCQUg4UWRkYWpCTXVyMXNGUklieQpkUkFEamhjNTZ4aFdmSVVCZW10VjM5bW4rejk3dGwxVmc3YXhDeE9ZZUVsVmhobEE2NGZXUno4b2NSQWFNWmo3CjdGOXgxMFRCNmFMRW5oN0dvRDF3VytCclNhTG9Ec2FuY015ejhPdnFCcUk3SVVpOUpkSXVsSTNsNnFHaitodDAKV3NVNWQzOGpBQTFLcEJ2YnB5c1drSEhnS1FyWWZKd2lGQlc4N3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJTWlINlpnRDR0RVV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFYwVjhWTlcrOQpZVElFaCtZNnJxazNDNFFYUWEwQ0lFOExPSnRiUVZNS3hSbGV4N3E5K1JSRjlyeXZRNEcyTGZZaDBIK2ZUZHhSCmh4M0hZakYwZzR5c0JJdldabWVoaXQ0MGZSaE5PVmVXQ0ZDU1lLbG1vSGNTSm1aYnc4ZnFkRjNBRjJwNExFdGMKcEhwSUViZWpmS2NraXpNeUlPaW45Rk9uWmpEanhndW1vSmpRbXU1MkJvSFg3SkJLa09CM29WWW1OeFdEb3IvNwpBUlFPM1VhbnpiMlcvZkcyb29TM3ZMNHBNNVRCY05TbFBCamdvZlIveEMzbFNWUjVPQ2lZVy8ydjUwdTNzNEpJCnc5eWFHeXZaRUlyNDVLL1ArRGJBNEtwSlY4L3ZCOEFOY244TzZnY0dBYTVta1pLZ3hoSWdGYnZXZit4VzdxYmkKc2lRZkRZSEVySUNOQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBd3dXQ085UUNzTjZuZi9sWGd3aVJnS21WYWY5cE5aT2ZBcm04aW9LcFpWK3lyYkVlWDVjRnNHUlQKa0FESktjaGg5SDEvcVppRDdNUFQzZzJuWkdoYjlNa0hsWFZCU0RUSDlTODFYbmt6UGZHcDhDZXNMYXZWVko4MgowdDU1NmV6eldqcVFIU2szcUs2Q2ZUMEs2RkswcXFRNDNYTW1sRGl6Q1dQUlMzaUtPSUcxZENJbmZNQ1BmQ0FGCkhHZEFNcHJMUWFoS0lTeWJvY0lBWTU3SmhRNlVVVThnbVFWTWtHb0xwdXVRbDNuOVcwS1RIeVIrSTJNQjBsTWwKVlV2dktMQkVvVXRQOTVpa0hkTVViRkplcGpZU3dyQ25qWEMyQ2ZucUROVW44QXJRTE9TUXlsdXZmdC9URjY1RQp6RkFJM0ZuenUyci9rTDRIT2RMZ1V3U0FSRXR3NUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBelY1N2o3bzgzSit4Z0VDclV0c0ZrVHBROEozNjJiSlVXUHJRbmVJVFpSWk9UemloCi81RDEwRmo2eXFVOElvVVpVWnlBSWZ1clhrMjhoVTJ3a1Q3Zkw4ajJ4d0xqR0N6Q1RIMnV5Ym9zSlpkdUp0NFQKdTZySllLOHFDYkY1bUo0OW45NWpLZFVpNHBiRkxzWEw0Zmx6YkFlOUxXR2YrV1dYRlBJb0lHTmQ4bi9sWW1neApqQ0dUVHhCUmJCUXlXdEhFQ0R5OXQwUkk2TWtnemdJZloxNmJQRE5oaGpMaGZwZmw2VHRoYXgrdmI2OEZCc2IzCkEzN1JUYzhDSTY2MlhwOWpzZWxvdWwwMStKK2VXeHVtVlg0TEFBTURZOWhDTHlrSUU3VVdSNHZpUFdJUU5PU3oKdlhOdXh4OTBnTjkxdDNyQThVbW9ENGJqRStUWUpEL00vM09QSlFJREFRQUJBb0lCQUJvZG43emhSQWdTVHJJdQpoeHJjTzFNQ2hYUnp3b2lZZ3QxbDE4MmNDRGRjcE15eU9QZVU2WTE3SXpsTjFkM1Y2eWhUckgrbHoxOElwNmFVCkFKWVgxcTN1OG1MUVhTeWYxSDJCcGc2RkhFUVRnN0J4b1RUR1BTR01aTjRpc1lIVTdhVTgxSU5uVlM1WFdlL2UKdTFTYk1qQlVzNXZueEQ0a3l4ZWd5N1dDclZtKzY0Yk5xSjY0eGI0cTdqTm9JK1RrOEdqRUpmQ1ZzTlVDYmJpVApBb3d4a1llb0cwTUVWNGFwc2xlZVU3ZDFHYzk3ODhlcTdFUUxvVWtTSm5rdUVNTkJwSzBaUDhRemMydm5ad2EvCjQwUVdxV21CaGl1cU5LOGhIVStrbUF4SDhpY0hjd0NEMTkwU2dhUzRDUC9QdVo5SzlreHpaMmw4ZXZHM2tTbHMKUEEyQXZzRUNnWUVBN0ZHZjFDQ0NYcjU0TW5LcXB4QVMzNHlwdURPSldoVzE0SjF2di9TbVBBSXdGcFA4WTNVQQpzMThzNVdQMUVGaWRoa0gwQXhwWDE4VUxZTmFpaHk0QTNDQUt2L09JM29XNTVDOStiSzNvUldpOURydU0zc2VMClMrQWJYcVhNNjJLd3lNRzM3VDRuU2kraDIrdVpZdkpCUXFtTmcxU2d2VWhZcEFKb2p3Yyt4bmtDZ1lFQTNua0EKYVZPK0NBNlRyN1I0dlhQaHI2aFg1amk2dElCSWpkQVlvcTY5SEdpMjlsREdES2lyZ0dZSStjclA1NEVOR0M4Vgp5OU5JMkpWZ0xrRHRweUhOQ2JwYmwzZ0lSQTRlVjRBK1huUjVLSTdFTnZpRVk2dkEvRUZOcTVCTWI1c08yQUg4ClNwMnlTWmwzWmxWN1d0MHFrNzAxUEhwbFBsenk1V2RIN2h5c2t3MENnWUFJeGVyNkZBN2k5NDA4eWpiOXBzSWMKbkhzOGhHVkgrK0JacTE2WHNMeHZJK0duSk8xTXYrNDd1bi9QTUV2THhJNXNpb3hGaFRmWG9kQVBVMGlMWGpEWAorelNLOWI2U0RFTGZic2Z4dnU4TmpKcmdMaVJIclA3RjNWY0d4Mzc1Q2h2b0NCRU05SzYrdVUvMyt5SWhvejY2Cis5SnVHcmt3N2J1a3N4WXdvU002ZVFLQmdGZC9BV0ZyVlE2NEpPOXlyQlhlc0lFMFZUV3ZWQWJQZVRtRkFWdGkKRy9CRFlzbm5KSzB2M1J1SGhib3dRS3BOQUFobDVFMmdrRUxXSk5pc0lvdWI2SmNOMngzc1VGdnJyWlUrVThrMApSNzVpdjlyYXpMNmlleWo2eWdCU3BTMHpyNWZXMkJIRWlhMFdsWFlDNHB2dTVlTHJCRGYvN3plaXVNanVZTVRPCk5EVTFBb0dCQUpnSGg3SHh5MGdRTnVvelE3Z3dHeGFFaXdFRVhaTC80Nnpyem5ZTTdudEUzU2hteG5VakI1QmsKajJpOGlnNUllUHpzZ0UxQ2xFVVc1WkR4OXgyOTVIamt5REdtcFozcWhMSFF4SjFINTEvZndlY1Y5VjdyVVkxQgpranpLTnYzci9KR1VkVzBoQktQbEdITnFVZlgrclpma1JyYVViL1hUeUt3enNXTkpBWDlYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiRENDQWxTZ0F3SUJBZ0lJRXVMclBMdnZRem93RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTURZeEZEQVNCZ05WCkJBb1RDMnQxWW1VdGJXRnpkR1Z5TVI0d0hBWURWUVFERXhWemVYTjBaVzA2YTNWaVpTMWhjR2x6WlhKMlpYSXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE5YbnVQdWp6Y243R0FRS3RTMndXUgpPbER3bmZyWnNsUlkrdENkNGhObEZrNVBPS0gva1BYUVdQcktwVHdpaFJsUm5JQWgrNnRlVGJ5RlRiQ1JQdDh2CnlQYkhBdU1ZTE1KTWZhN0p1aXdsbDI0bTNoTzdxc2xncnlvSnNYbVluajJmM21NcDFTTGlsc1V1eGN2aCtYTnMKQjcwdFlaLzVaWmNVOGlnZ1kxM3lmK1ZpYURHTUlaTlBFRkZzRkRKYTBjUUlQTDIzUkVqb3lTRE9BaDluWHBzOApNMkdHTXVGK2wrWHBPMkZySDY5dnJ3VUd4dmNEZnRGTnp3SWpyclplbjJPeDZXaTZYVFg0bjU1Ykc2WlZmZ3NBCkF3TmoyRUl2S1FnVHRSWkhpK0k5WWhBMDVMTzljMjdISDNTQTMzVzNlc0R4U2FnUGh1TVQ1TmdrUDh6L2M0OGwKQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTQpCZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQWZCZ05WCkhTTUVHREFXZ0JUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKSjBxdEQwd3dSaThIOG9uaUVoNlFYdjF1ZUczOVhpcnJOZjBTS2pZM3hzK0w5QjNiVjc5SjJwTk96NnpSTXgwVwo4K2Q0VlkveEhoWGc1K3dMNHNuSFJEQ0VldHhuQ2lqbW43L1BXNDFGQUZUc0dJY3VpNTYzLzE2Q1UwaVE1YXg2CkVDZFhqSUNjN0Rhc0NBWDM3NDVIc1VpYWRXQTk5dVNlNUNRc00zbGI5NS81WUtwQU5aL1VXQit4THAzTjJCVFMKR0lPbmVvNGdnV3QxelliS0Z5eEUzamZUbkwzeFhmdmpGaXZBamwyUVJBeEdiTHZYbVgwamNhcWRyOVg0OUlsRQorVmJpZUo0cUpDVUpZT3FVK1pLS1hIaTFjNi9YWGFsWDdXaDIvazVJa1c5S0tGOTVZejZ2bVNwZ2Rlc29rd1ZMCnU2WHl1cWhUcWVwU3FDQktYVUZpQ1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMWRGZkZUVnZ2V0V5QklmbU9xNnBOd3VFRjBHdEFpQlBDemliVzBGVENzVVpYc2U2CnZma1VSZmE4cjBPQnRpMzJJZEIvbjAzY1VZY2R4Mkl4ZElPTXJBU0wxbVpub1lyZU5IMFlUVGxYbGdoUWttQ3AKWnFCM0VpWm1XOFBINm5SZHdCZHFlQ3hMWEtSNlNCRzNvM3luSklzek1pRG9wL1JUcDJZdzQ4WUxwcUNZMEpydQpkZ2FCMSt5UVNwRGdkNkZXSmpjVmc2Sy8rd0VVRHQxR3A4MjlsdjN4dHFLRXQ3eStLVE9Vd1hEVXBUd1k0S0gwCmY4UXQ1VWxVZVRnb21GdjlyK2RMdDdPQ1NNUGNtaHNyMlJDSytPU3Z6L2cyd09DcVNWZlA3d2ZBRFhKL0R1b0gKQmdHdVpwR1NvTVlTSUJXNzFuL3NWdTZtNHJJa0h3MkJ4S3lBalFJREFRQUJBb0lCQVFDUVR5Y2xZVk54TmRCVQpUb1NNeHFWZWlWODFjeFlaZ1VUWUJmU1V1cG9aZ3IyRXdyaSt6d1ZuMHdlMklwSEJLM1Fiam1VVVY3Q0ROZlpiClEyS3RpTHZBdmJERG00b0Y5WHZUWVRxdHBDNEJETXVVZjdqVmt5ZktFREMxYm9YWEw0SzJ5eGNJMUp4b2dub2wKZWcrL1A3cHZaNk8rQ1lmOUUySUNjVzQ5ek1UQVNCZmkxSEE2ZGFmcFlCc0svODNJNUtwNjFwa1E3MlM5YU9oQgpNVkhPUFFzUG5GY3RrSFhReVlKdlFOT2sxT3pEWmZPQVAvcXpGVlZjOG9nZytBUFpxYzg5cGh4aWdNVjNDWk9PCnNhQ0dFcGUzc05MdGdFVXRRcWxYdm5ETFhBZ2FHZjVOVnRJWU1FWWJnUHlzblZsOTBibnFEWXNGVGRHV2ROYzcKd2VWSnUzZ0JBb0dCQU9LbUdRQVJJalFRYUFGYk55RVI0ODRzMVNISkZyVnUwQlU0RTdMMjVpaktBckJvTDY0RgpqU0V2b29BWWtVNDB4KzNkTTZidUxnbE4wVVZnSDNEbUNjd1ZFZk9hQkpMN1VQK2lUVklQRUNCbEVoZmcwK0E4Cm9SZTdtOHVUa1o3aFFXMnRxSGdUOEZrZ1FDOUVTR2xBRnNCcUJqbTQ5aEw5dHJLMHh5NlB3NWRCQW9HQkFQR0IKNWorYzdieE9aTGxJWHgwektrWC9aVU5lb3VHVzVvNTBIRFVabVR0ZHJUSzE0MGoxNGVhaXgzZk42VEZod3JPUgpBQXJnaDdIQVRxNjVoNkNzMHlOQktiMWZsaW5yemdQenZ2STg1MG1aQVZlNVVrRGNvM1BYaWoxdnRxZFJmNWUwCk1zcWlPd09mbzI3Ym4yREQ5eER1bGRIT3hJcWNCVG5abjNMeXlZSk5Bb0dCQUpBV2lFNUNsandETWh1cW9hR2sKZmU3VkVhb283UWJySzk1UmlEUitRbFFzR1FtTk1zS3ZSTW1VUHZxd282L1VYa1lhR254RmIzNzZ1ZEFoQzl2NgpZc0FicFEzNUhHOVUxbW11QlBubUdacCtwc0lIYkt0aDRBZjJmVlV1dTZVR0QxSnExRytDUFlwcnRtSldScktpCnk5UUhrMjJlNk5HcCtqd2lNWDZvWnZBQkFvR0JBT0pXK09DVGhhZGUzVDFjMjI5MVhXQWUzTnZIM09XSjFHaWIKM3pmUTF2QnhlZm8xeDE3QXVzZTV0VEhOOUlnSWRENXdYZGJUMmJpNFg4V1hNY3BmVHI0U3V6aTFWZm5SK3RGdgpabnlHb2Nrek1iUHlobWt0bjY3WXljR01hbVhqbHE0cC94UXorUlVMVDFOOVY2Q0w2SWlnNGg2eEp6ZzB3eDBWCm5UOVExWlJkQW9HQVRYK2Z1K2paMVcwM0FHVG8rZlpDekVxU1c1YXdtWVhMYUlndVdtNWpoRW0xVDNPVzQzZU4KWnNuNmlVRVczSnd6WWttVWp4S3pQUVRLRFRpWm1SMi9sd2g3aTlhUkpYNFRIY2NmOS9Eb3haMTMyT0hMZk8vNgpaSDNCb1Qya3JQR3IxRjBXdHY3b1V0bDlUR1NqOENsa080QjhOWFdGRmw5YkFVK0pFMXZad3Q0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-apiserver-to-kubelet-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJTWlINlpnRDR0RVV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFYwVjhWTlcrOQpZVElFaCtZNnJxazNDNFFYUWEwQ0lFOExPSnRiUVZNS3hSbGV4N3E5K1JSRjlyeXZRNEcyTGZZaDBIK2ZUZHhSCmh4M0hZakYwZzR5c0JJdldabWVoaXQ0MGZSaE5PVmVXQ0ZDU1lLbG1vSGNTSm1aYnc4ZnFkRjNBRjJwNExFdGMKcEhwSUViZWpmS2NraXpNeUlPaW45Rk9uWmpEanhndW1vSmpRbXU1MkJvSFg3SkJLa09CM29WWW1OeFdEb3IvNwpBUlFPM1VhbnpiMlcvZkcyb29TM3ZMNHBNNVRCY05TbFBCamdvZlIveEMzbFNWUjVPQ2lZVy8ydjUwdTNzNEpJCnc5eWFHeXZaRUlyNDVLL1ArRGJBNEtwSlY4L3ZCOEFOY244TzZnY0dBYTVta1pLZ3hoSWdGYnZXZit4VzdxYmkKc2lRZkRZSEVySUNOQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBd3dXQ085UUNzTjZuZi9sWGd3aVJnS21WYWY5cE5aT2ZBcm04aW9LcFpWK3lyYkVlWDVjRnNHUlQKa0FESktjaGg5SDEvcVppRDdNUFQzZzJuWkdoYjlNa0hsWFZCU0RUSDlTODFYbmt6UGZHcDhDZXNMYXZWVko4MgowdDU1NmV6eldqcVFIU2szcUs2Q2ZUMEs2RkswcXFRNDNYTW1sRGl6Q1dQUlMzaUtPSUcxZENJbmZNQ1BmQ0FGCkhHZEFNcHJMUWFoS0lTeWJvY0lBWTU3SmhRNlVVVThnbVFWTWtHb0xwdXVRbDNuOVcwS1RIeVIrSTJNQjBsTWwKVlV2dktMQkVvVXRQOTVpa0hkTVViRkplcGpZU3dyQ25qWEMyQ2ZucUROVW44QXJRTE9TUXlsdXZmdC9URjY1RQp6RkFJM0ZuenUyci9rTDRIT2RMZ1V3U0FSRXR3NUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-control-plane-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJRmROMEVJcnV2Y2t3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd2tUVGVIRFBNcFZXSXJrZUljRlBwbThMZks0awpYWEtycWxiNlZheG5YZ0JrZXJubFpsYzFJMFM0bDAvaGF1ZHZ2RkRPWTAvZ20rRFBmNmk3eXpFQVozcU0wbGd3CkhIYXIyUWlRam5YRjFsc1dVK0ZlcGJNdU1nYlI4Ly9Td21UbGdneGp1WXJ5TUVKSFBuSXg5TGJrdmV3a1hFNXcKQ2RvZGRSd2ZKTkhWZXhobENMTVlQc1J4RE1lVVZqQ1lmQmU5SkNqeEVmK3gzOUpwN3RVSzZ3TmFLY3BHK1N1dApvTElHN0tyVEhtZ3JxQ1d2bWkrUWcrTXJvZnh2MWN1OWlvV0ZQcWdIRTliWk5mZzBvUFBHNWxrb1IvRlNyMWlmCjIwV1NhSjcvRSs5ZEx3ZzZaVkdzSW5ta0JGQUFKUHM2emFwRXlVOVNlaTQ4YThpOER5NnA5bkE3dFFJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpxa0xrdzdudXpleDBZVi9LMkJldlZtek5FODR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZ3eElVbDZXMWJoClRZZG5vTW9lSWpZdlRVUWV2aFI1VUFiTmFUZGora0kxOGx5L2NRVlhmVmhPNCtoM1oxMXFNUWtMMkFzdnNnT2cKRFJtQ0tJN3V0MmVFb0JKcjVneDZ5UE1NUVdXbVlWdURKSm11Z1MxNnUyTVlsZzY5anBQRFdFL0gxR1crdnZpbwo4UndCbTRyb09XZ1RQWU9WcUVMRTFreVN4bmtDWENCZEhoTWNUVGhTZ2l2MVVrL2xzZ2NpLzRGMGFkem42V3RKClVzVFdkek83V05lVllVUzgrVDhDQVRjOGVERGRCb3Y3QklxVHZVaUNyUjJGY2J3UWZzUm5RYUFTeEJLZzdTMTQKUE5DMGovYUMvWTVXM0JwdGE0V3JaVjVTbUNLelZQbEhoZGlNK1h0M3VqQnFVOFNkR1BkanpjZVhCRWdyWnNPdApCTVF6ZGM4NHpEQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlhRENnSS9nUk9yc3dEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05NVGt4TWpBNU1UQTFOVFUzV2hjTk1qa3hNakEyTVRBMU5UVTNXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFKcnVPZmc5K3NsYjEwZXdIRlcxVWt0bXhhVVkzMXJXClM5dTV2UTdtSGNMT2h0c1hQeUlpOXFFbWQxUXkrd2ZnRUdwUm5DaGYzUkdLNVAxdGc0WXo3ZkkxYUpWZWlGK1cKME5ZdGxVOE1MbjVEVytlVnNKN3hwVk52VlNxVTFBalJTUVlqQ0Uvcm0zbGJBemtlOEU1RzVsbEJHanZxVXVyYQo1a2htWm1VSjlKNXdjbDRiSFRVelc3MzlQc1RVUG92TFdZM1ZCLzFiN3ZTa1pCaG9XTzh1WXUxTEJJS1RCdDBqCjF0Wnl3UWxLTFNDRkZWVHdPTHJRazRteEJYalhyVUwxTFZsSmN0N3BvU1BVb25DMWpFUFFwd1hYU0kxam9MUFgKbmlnQWNrRms2bzdwZk1MRVhlUCs0RmpObnJrN25YaUNsZkxqUTdiRjZ3M2tJem1kM0E2Z1l5TUNBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQndaCkh0a2lIbjJrOC94eHI5RVRMZnRUVXdFOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmxLU1pDT2dSaHhKUjYKMEpFa3Q4KzdGMk5XSktXMzlXNUV6VE1BOGtPZDlJUXQxVGtLNnFEYlhjc1YwY3BDNGFzWm1ZdU5UY2NKZUZHTQorcHlhTFZ6TU5DVVdxUHMrcUh0UElsY3VJQXNWNVVGZ0FYMkFPQ3dOU0NnNTlwNEFmVFhWblk3VWNJMk1Xa3NPCjVNdjNOTExmRE9heVVEYk9zY3FjeFpVOTdIWGxST2F1cU4xZ2Y4NHVJNEdmV2JBQUlCdEZ3RUhwbG55UG9iakYKSVFGOUw1NTlVdVhJOTRoSzlDVEVaSUNhemxsSGZGYWk2QitpZWVGZ2FYQThud0NwTzFwYk4rdVRiQkpEY05GUApWbHI4ZWdFZlEwVTArUnNWZlJTaE5wYzRGTE54S3lsV0I3eThyT2pFOHh2ZkJqMVRrZ0RZVDdQYnV4UFVLV25xClMvYm1pQiswCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-control-plane-kube-controller-manager-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUZVR0ZzWW5PUVB1WmhZdmxtQUc4QmxxbFN1OTRSRU5mQkZJeEZwUFBmb0dQcENmCjU2TUJPSDlTd2VZaHBKNTBGRjJ5ZGVkc3NGN2hZbVZld2pKMXVJQk1RR3pLRTVwZUJjQjNENndDajdPYWhQUDEKTFJlQkNQUXc5S3ErSVpkdThYT216RFhvNjQvU2huQURVK3I0VDRvbS9rekdHcytMTFU4M1E4bHhhMEY3aHJBVwpLYUU1Vks1dUM5Uk1EdUR3dWhTSGtkNlRTdEs0Q0VwTHdodmFRalJlSFhXUlo5Yk0xVHBUWGtNWWw5eEI1dGJwCkxWWXo1NVc5c2pkNThmc1R1VEdOOE4ya3g4N0VMc0owSm5nYXVFS3JKeUpuTStMdFVPK3pnL0l1d1NGSmVGWVoKcm5lcHRoOGNnbTJDcm92L3ltZ3N3OXJQdFRnWU9tc29vWC96SFFJREFRQUJBb0lCQUZPd3Jxb0tYMmFBaFcydQpKdjcwTEZJNGgrNmdSSDU2R3BBNDNMdmhjTmJudkl3Tlo3eG9nclpmQUhqdWZsbmFZME9YNHQycksrckx1VExPCmFYNXNJSXliRzRPb29QclRmRnJLTG9SY0NYR3JEcjNNY1lWK2hXUkdVaS9Ua2ExNHJyTkxXZkNmalZmZUhheFMKRVFDNXp2RjEvUXc2V1R0MC9YQ2Q1YTZPT0VPRVdxK0E0VGIyNDRpcklRRGZ5UWkzaTJwRTkvdkhRaDZCN2RsTgpKb3RZT091Wi9PRU8xeE12UUtDS3VCWHY0eWh6eHdBc3RBeWFBMEZhanMyMnE2N0xrZTk4MVg3TUVDL1p5MGN2CjBPelpoSWE1SFFPREVxZUxoQ0w4ckkwaURtOVc4QytHeXc1YjZBa1JRM2ZjbStVK1NybCt3SjlIN0prOWl4cVoKZXhiTlZrRUNnWUVBNnU5SEdiYi92VG81azV6SW9pSVE5YzVOS0t0SVU2c2dXdk5TYVFxSTJkemlKK2xIeXpzawpoaEhUL2psc0ptejV5NmYrNWxuMXYvY1hFeEZpQ0lKSzl5bU1YMStTSmgzQzZUck45dFFPb3NpQWVRa0ZRdjNZCml4ZGxJVFB2RnNDVElNNmhzZWoycytnRFQ4enZHWEpaZ1NibE1QZUdnUFlPVzdWdmsxTWNJWkVDZ1lFQXlOdzEKVEZNczEyOHdCTW9NTUhzZ3pSdkVMMms2L2JhenpCNHcvUytqc0xQQ3kxUmVCWjRIVytkeUlaNnpnY2FjT2hLRgpSdVVNU3pMQXNHeThJdk5FNTR1V0daWW81Q2xlLzlRQUh1SVVZbUhxQ0Y0YlRJRkpRTDVzNnoyd2xzZ0d4dGc1CmV4T2Y3Z0t1dnBTdDA5eGNOSWQzNnhrcDBNTktvak1vVXhsZThzMENnWUVBMThZc1oxSE1VTi9KUWVvZDI4dXUKQ0JVU2lPZkg1aENtQnVLMExnV2U2M29Udk5SbFBDTjF5QzFYcDRiVjdmVG8rRU96dVoybU9FbVl4OHFQWDRGTAptUFp3RnFpUWNyR2k4dE12bUNQcnpWYVpxSkRBWkdjQkc3N0JBMTNQbWZZRkszeWN4ZXBScTZyTVg5NjVPNFhxCjd0UHFiSzdxdWtkRHFMZGJZdFJTWWdFQ2dZQVc4TGVSb1FwRkRLamlVeVV6UUV6TndEY1c1eURhcTB3N3F0TVQKaDZaZFh4cUhXSHBvajlUdFZUQyswRDVXT3hYS3VDVEtwUXhUWmxlRmp0V3A5RGpSYlNyV2YwVHFVaU5NZXEwTQoyZXRVRlRUQ2dlVUNSdDNUN0N2S2JrQkY2RkNGMDFvMVNWZUJ1b0swdDR4bTN3c1U0TWY4Yk9KT3VvOUNtUzhvCjFvUDJuUUtCZ1FDRWdERFcxT0VZVjdOM0duK1VRM1NlckNodTRIL3JUSkQ2VkY1ejRXNWNSZ2gvdlVFVlVVT0MKZmFpZTMyMTI0blFTSU9NOFZ0NjNlMzhKbEZRRUw1R0prUzBPTHlMcDJyVFdLbU1SeElxWm5WWDBObUhNdFdObQpabVQ2V0p6RW9UN0Y4cXhidEx4dmVicG1iTy9FVFhDYmt3dDRKTUZpcHl0UTY1cXN2NmVLbEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-control-plane-kube-controller-manager-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJWGFIWVkyQlZ0V3N3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3TlZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxoVkJoYkdKemtEN21ZV0w1WmdCdkFaYXBVcnZlRVJEWHdSU01SYQpUejM2Qmo2UW4rZWpBVGgvVXNIbUlhU2VkQlJkc25YbmJMQmU0V0psWHNJeWRiaUFURUJzeWhPYVhnWEFkdytzCkFvK3ptb1R6OVMwWGdRajBNUFNxdmlHWGJ2Rnpwc3cxNk91UDBvWndBMVBxK0UrS0p2NU14aHJQaXkxUE4wUEoKY1d0QmU0YXdGaW1oT1ZTdWJndlVUQTdnOExvVWg1SGVrMHJTdUFoS1M4SWIya0kwWGgxMWtXZld6TlU2VTE1RApHSmZjUWViVzZTMVdNK2VWdmJJM2VmSDdFN2t4amZEZHBNZk94QzdDZENaNEdyaENxeWNpWnpQaTdWRHZzNFB5CkxzRWhTWGhXR2E1M3FiWWZISUp0Z3E2TC84cG9MTVBhejdVNEdEcHJLS0YvOHgwQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGS3BDNU1PNTdzM3NkR0ZmeXRnWHIxWnN6UlBPTUI4R0ExVWRJd1FZTUJhQUZLcEM1TU81CjdzM3NkR0ZmeXRnWHIxWnN6UlBPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDeXVXLzJnTmZmWnYwZ0ljVmYKaUpZZFo5d0VxcWQwRm9KRmpwQzdNTVJEMmV6K1U4STNRZ1BwUzJ2N1NNM3c1UmluVnozZDhSeVMwQTVzQVVZNwpsTkt5cUVPeTVsNVBmSDNhOE5adlBlL0hMOHFqajcrdmxsd0tnMTZySFJneGxpaVNJNlFCN013WWdSdEJBaFgwCmN3emlPcXNRR05hV0hJWUM1VGt5UGdoSk5DcXZmcW5xVjVTTmozN3VwcW10dmticnZhNjRrRHYvV1dKU1h6aXoKZVBkZHdnekYzWGxCT2JuV1BGRXo0aC9SQWk1Y2pSemEveEw0ZmJ0MU1BbVV3L2h5Yi8xMDBpV1VpV3hYMXFtVwpiWG1VQzdZWHhaUkpqTjFSblJoalBmbFQrb3orMUZwRmFYS1FpYk1BcnNmNXRpdDlPU0MvVUUwdzVLOGhzWEpWCkxtU3gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-control-plane-kube-scheduler-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWtzeEd3MnNrTEtDNTNmczNJa05GZTA1UkpNdnJ6ZFkxSUdxb05mKy9pNDllK0VnCnRKd1E4MHBNZEhscHRkM0ZIakRNNTFEckdxdlF5S1NpN3FGU2RvTGJVclE2ZUNqdVgxbTVJODZOaEF3Y3ZkNy8KMDhIbVFENS9nMld2L1RjOEd2K05vMjk3ZlJPUUp4MWp0WGVtZWJhWENQZUVERmFhZjg5S2NVWHBGa241Ly9CUApNeGYycEF3MmpBaE5OY3lqbE1JM0JSYjJveDk0aklIc3FodU81Q2toZkM0OEl2YU9wQUFnRWI0cW9oaGw1M1A3CmlzME9SdEt0VzdwWmFCU05LWTZBQnpKMGZVZEIxZWxaaXY3NWFkcnlDTVpSajNKUGxhanRGYkNXVmVNUG5aYTUKRUQ2TUxzaWpjdng2QzBvQkF6cG9iY2kzMkgxOEtMSG5NTlRDVlFJREFRQUJBb0lCQUhlazF2TFRBMk1pNHFPYQpCOHRUVWM0bFBzUmw2eGdTNmNBQlR2NWgrbWh3ZGhoYmE4L1M4NmZzcmRHWU1HWVcrZ1A3djMxSUlOWk9ScGExCjlkWmdVVCsvcHZBa3cvQnNDVHUvdWdIZkpGQU1IMkZxR005OUZrMW9WaWlqWkRXeUJhNHBObVFpc3lLUEwrT1AKSW54blRjbVpsTUt6aEdFUU5jV2o4ZUZ4enRMNnNhaUUrc2tWSUcwYlNIRDJuaEJxZlREank3QnN6eHBWMm9CQwpCZVltd2VBK3BkTjFYZnFwQUpjL1htTGRGOEVWd2hvbitIdVpmcXNnZGZPSUlhdTFaalFiOWlaOC9sc0piMHZSClMyK09mNnltSFl6QXBlOVNEVlBTQWt1WElvdDVEZ1VqZXE3MmFsVmpaaHMrNSs2N2ZlS1lYQ1BSR3d2LytnUlcKSy9xa3JJRUNnWUVBODA1aGdHZml6RDFjeHlGYlVvMHhFYTR2enpYVHFGdzQzeVk5aVE3SWNmZ3dqTWNZOEZhTAozZWl2eEYvbTUxU2h6d0NyRHhsVGh2T3kyNmt0QkRLTlhHOWpMWjYzaEYyd1ZkSXFMOGJCbDZLbG1veXBYaHVjCmJYRkdwN2g5OHhObVkzZDdwZ3psQXpPZ3NYc3llRVB3OWdDcUhmTVlXNHlwN3hEdlpjVlhBc1VDZ1lFQXhBTlkKOHJESmdGMldqTEhuYjE2dVpBSVU4RElWWTFPYlZUcTlYUG5mNTFmMnBYVUVwWHlOS3puTXQ1aHJvT0hmTzQ4NQptVURqNUlBVHU3cUU3cDJOTmxhSGtDUEg1YVpQeUUzeUwycjNMNUdUcHJUU2htTDJxWnBNS3VKelFSYlg4Zkp5ClVZa1VIZmpTZFBBdUlBSnI5SFRvV0RsVmlTbjZqL01WTzlpL2VsRUNnWUVBdkpsSWFSR2VNM1ZwWW81UHpOalgKYlg0WlgwUzVNZXR5eGo5Tk9kMjBzT3VUTHJ6eWJ2S1hic2Q4My9yNjhOeWdwT1krc3ZDTjE3RTJOcUdYM0lZWApIOHpVRXp2Unc1QWdMUlpCVDFHQkpUcVZwZ3hkQ1M3Yi9kWHR6L3JwM3E5dUViSS9yY0tYRHZsSkdlcUdmOFVpCmxuNkRYNzNkWnJITjFCdkxocGNHMElVQ2dZQkNmWHd6dndKclY5UFU0QmhJc0E1cUFFYkgvOFUvajBIVzFIa2QKeStsRzJaRGlLV0t0SENYcTdzMWh6Z05jYktKRDJ0N0gvTG9SYmR6RHhvNkhQc3lERFRFcEZPb2ZIWjVjclF3bApSNXlYOTBMbHZ0clhHVVRnM1dWTytzZnI0V3JaT012TW1ycEhQSHR2alhXb0NBcEV2MDk5ZGQxdEROOWc2eTFkCndyV1pNUUtCZ1FEa1B4VUdpUW54OWNmUVcvRDBrWmFBZStQU09VUG1udjNVYmxIUEkyYUVVY2F6ODQwc2RLQ0IKcit1TjRIbE1BcTBpdHNyeHNZeDdITXhwNmt4V1pPSWs5cnNScm40R2JlVmFvcXQ0bTlrV2JoRzlyZEpGZml4aApYQmxoTXN1SlFXWkRnYkw4OVpQWUNwWHphVUpHbzJQRjBNeVMrVGdCajh4NDQzUjhtS1BjcGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-control-plane-kube-scheduler-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJREY1MWdtYU16NWN3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3Tmxvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxwTE1Sc05ySkN5Z3VkMzdOeUpEUlh0T1VTVEw2ODNXTlNCcXFEWAovdjR1UFh2aElMU2NFUE5LVEhSNWFiWGR4UjR3ek9kUTZ4cXIwTWlrb3U2aFVuYUMyMUswT25nbzdsOVp1U1BPCmpZUU1ITDNlLzlQQjVrQStmNE5sci8wM1BCci9qYU52ZTMwVGtDY2RZN1YzcG5tMmx3ajNoQXhXbW4vUFNuRkYKNlJaSitmL3dUek1YOXFRTU5vd0lUVFhNbzVUQ053VVc5cU1mZUl5QjdLb2JqdVFwSVh3dVBDTDJqcVFBSUJHKwpLcUlZWmVkeis0ck5Ea2JTclZ1NldXZ1VqU21PZ0FjeWRIMUhRZFhwV1lyKytXbmE4Z2pHVVk5eVQ1V283Uld3CmxsWGpENTJXdVJBK2pDN0lvM0w4ZWd0S0FRTTZhRzNJdDloOWZDaXg1ekRVd2xVQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGS3BDNU1PNTdzM3NkR0ZmeXRnWHIxWnN6UlBPTUI4R0ExVWRJd1FZTUJhQUZLcEM1TU81CjdzM3NkR0ZmeXRnWHIxWnN6UlBPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCK2JzZDgrZVZNNThQMStQOFkKcWNqczdQQ1l6allmSy9hMmIwd2xSMHUwc0xOdU8rMENHc3ZCdWJYM3puREFyVFUzSXhOQ3hlaUxMZG43akNpYwo0SXVpQXlTT0hTSVYyQndNWHRaQzhGOVNmRkpuUE9SdVpZeklTOEY1b0ZPZnJ3K0NiK2RLeGsvVDM3SHJGYUdDCnZiL091eklqL2VRYUtIQ1QrWU9zRDI2L0ZRa0ZpcGpHekRiMU9qVTR0aGFjZ0VmR3dadVhuV2I1REhqOUlRTkEKWWEzeGtnL0xIM1VlaUxkdnJab0NIdVpoaERpK3E0QXZKeVlJdk5Ha2R1b0tGalppcEhzRHdIaWlLcnZla0l3MgpvbVh4RGMzSGdmb1IrTTdnVDQyS2J6WnZDNFEwU2ZlWk80elRWSmhJM05abVhDVHNsNkZmbEltMUYwTXRrR0xuCjNrdUwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-control-plane-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd2tUVGVIRFBNcFZXSXJrZUljRlBwbThMZks0a1hYS3JxbGI2VmF4blhnQmtlcm5sClpsYzFJMFM0bDAvaGF1ZHZ2RkRPWTAvZ20rRFBmNmk3eXpFQVozcU0wbGd3SEhhcjJRaVFqblhGMWxzV1UrRmUKcGJNdU1nYlI4Ly9Td21UbGdneGp1WXJ5TUVKSFBuSXg5TGJrdmV3a1hFNXdDZG9kZFJ3ZkpOSFZleGhsQ0xNWQpQc1J4RE1lVVZqQ1lmQmU5SkNqeEVmK3gzOUpwN3RVSzZ3TmFLY3BHK1N1dG9MSUc3S3JUSG1ncnFDV3ZtaStRCmcrTXJvZnh2MWN1OWlvV0ZQcWdIRTliWk5mZzBvUFBHNWxrb1IvRlNyMWlmMjBXU2FKNy9FKzlkTHdnNlpWR3MKSW5ta0JGQUFKUHM2emFwRXlVOVNlaTQ4YThpOER5NnA5bkE3dFFJREFRQUJBb0lCQVFDSmJSalB0YlhOU2JreQpQUlFrdXRSMm4wMVgrUFMrcW5UbnZqbSt5NFFnQ2xVS1FHRVlZWTYwa1ZPbnJwbCsvNU9hZXV0VmM5Y25UZ1JiCmdXaS9sNzE2ZGtZU010SnVBRUVXK2lrUXJoMnl3cUxyMlowVHlNcGdGMVVFcjY5UFZ3TElXYTFlUHYyT3lBUVEKRjhaaEg5UjJ5Z3I2eFg0YWFoSzJtcHNwZDhyMkZSRTRielBVUFlEYVkvMktmeHhWRWd4cTlTTlJiVnlId2ZSWApVWm9icStwdHgrYzU3a25KRlVaamFCcDFrN2JTV3dJSzBBYWZSejZSNkdYajNBZ3dZcjVnbm9jT3h6L0lTdGZUClRLZ1JUcUZ4ZmtVWThmNlhISTZ5bFY5WXFzcDBJWDdxRnNFSXlYVVpheW9KcktFZFdjemp5a1hQY0VybVlBblUKV1pNaEtwcU5Bb0dCQVBtS1JCN1hsajJvdWZsOEVrZXJzQ3pLVVpTZkZYWmx6S21TNmowYlRKc253RHZ3bisrdAowbDdJRXg4dmtyWnVhNHdaT1NQR1R2TS9lK0M4NEdzWW9BZGZDSldQVHBHRytTaWw1K04yb0VVdVpUMzIvMnRrClZML0dTcUdwYXoxSXdFNjZiWXhsNlF0WTZ6UEt3UHRSaThySi8yLzByZjdGUFZhUzV1VWcwTWcvQW9HQkFNZE0KUlRkZmFNcjlPeVRzaS85dWU1OUd6SG5aaStRbHZVSnovakJkUzNkb1NxZVVaVSt1SWFRRkZQN0FMYkNiZ1FkNApXKy9Jd0NBbC9QREVXTFJxMkdyTWgxZWFFT1RSR2Z0ZFVSVERldFA2N2hCQWNMVnBPVG9OZXpZMGVRSWw1NE9HCjhndEF3QjVKNkxKcXhIVFRpcjRta1BPTzN2cFhOTm5RRlc4c3lCOExBb0dCQUxWUnBsWFN5TFJjMldWU3BlVzEKOXZsVXVScUl6WXVPUkx3aXFGbG1jSzk4bnMzdTlnZXVBZUlrOXQvK0xWaXB1ek85VUN1U2VPTi9DWUF2UGRJVAp2cFFjbFp3MjJSd2RPd1l5SnVDODNZL25PbUZnREEvNGd5d2w1U3k2Y2RYQit4bzVsRWdqOU1YdUFsbEx4aFhYCkZ3QnU3bEJuTmRhZGN3aHBEYVVIeHl6NUFvR0JBSTBDRU1NQjFXSXgwMFBudlpIbmVMNFQySjZwNWtsd3pqeVQKVnhpZkdjTU5YaXk5V1FVTVhpN3ZqWkJGSnM2YTU2c0NaSUgrVnJrb1I1T09TSGkyVkJNVVRQb1ZQcmkyblp4MAp4T1pjL0syNUQvRWR0dUVUNXZLRkVWVWp3UzVjNVRYeEo1WUFwUzJJKzRRbytJRDBIMmswWGtDRktJeVZZUVp2CkxJc3hjeEpMQW9HQUVTZmZScTUrL0JqQTU3ZVZRY0c1K0hxZlIxTGYvMlJHR3FUbUhIUmVVZ0RENFhPV2wrRVcKbTl5TVFrOHdXU3BlcG1IMmFQTmhBSG9aeitUUmJ5RDhyK1B5T1VFSG1rRzU3SlBuZWxaNFdrZ1cxQk5rYkhRUApjQXkwNE0rZi9jNkt3aHB3MVloVkxLWGk5M2s5b1V0MElmVXlWUEk3N0p1RExXdVpxaVVqT2hRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kube-control-plane-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJRmROMEVJcnV2Y2t3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd2tUVGVIRFBNcFZXSXJrZUljRlBwbThMZks0awpYWEtycWxiNlZheG5YZ0JrZXJubFpsYzFJMFM0bDAvaGF1ZHZ2RkRPWTAvZ20rRFBmNmk3eXpFQVozcU0wbGd3CkhIYXIyUWlRam5YRjFsc1dVK0ZlcGJNdU1nYlI4Ly9Td21UbGdneGp1WXJ5TUVKSFBuSXg5TGJrdmV3a1hFNXcKQ2RvZGRSd2ZKTkhWZXhobENMTVlQc1J4RE1lVVZqQ1lmQmU5SkNqeEVmK3gzOUpwN3RVSzZ3TmFLY3BHK1N1dApvTElHN0tyVEhtZ3JxQ1d2bWkrUWcrTXJvZnh2MWN1OWlvV0ZQcWdIRTliWk5mZzBvUFBHNWxrb1IvRlNyMWlmCjIwV1NhSjcvRSs5ZEx3ZzZaVkdzSW5ta0JGQUFKUHM2emFwRXlVOVNlaTQ4YThpOER5NnA5bkE3dFFJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpxa0xrdzdudXpleDBZVi9LMkJldlZtek5FODR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZ3eElVbDZXMWJoClRZZG5vTW9lSWpZdlRVUWV2aFI1VUFiTmFUZGora0kxOGx5L2NRVlhmVmhPNCtoM1oxMXFNUWtMMkFzdnNnT2cKRFJtQ0tJN3V0MmVFb0JKcjVneDZ5UE1NUVdXbVlWdURKSm11Z1MxNnUyTVlsZzY5anBQRFdFL0gxR1crdnZpbwo4UndCbTRyb09XZ1RQWU9WcUVMRTFreVN4bmtDWENCZEhoTWNUVGhTZ2l2MVVrL2xzZ2NpLzRGMGFkem42V3RKClVzVFdkek83V05lVllVUzgrVDhDQVRjOGVERGRCb3Y3QklxVHZVaUNyUjJGY2J3UWZzUm5RYUFTeEJLZzdTMTQKUE5DMGovYUMvWTVXM0JwdGE0V3JaVjVTbUNLelZQbEhoZGlNK1h0M3VqQnFVOFNkR1BkanpjZVhCRWdyWnNPdApCTVF6ZGM4NHpEQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kubelet-bootstrap-kubeconfig-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJU2VVUk1ZNFF2VVF3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMU5UaGFGdzB5T1RFeU1EWXhNRFUxTlRoYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNwpnNnpsOGxnT0dYTXZrbzNiWUdURlU1L09QeVBCMCtQcUJKOHJiVGY3WE9FV3VTeWpOOWt4T0JMNFF5VEJPakxOCnltU3FaOUltUml6SnlhZ1NJbWZ1ZERLS3ROeEhZNUtmSHdwU3NUUlZRK2w2eExNWFNGNUk0dE0vVENYSndGZ1YKWkR6ZTQwbzdGMTQ5Y0d2UndoVVdJYzVaV2J2MXpTWEd0OWwvbUt1citHV3pCMnZLSEJPL0tZQUNYd1ptWHllcgpmUm9OaHNkcXA4ZCtSeUtrcVJqUFhIeUt6bG1rSEJ2WmRmWlVlaUZBYmc2Zm1YMkdHb1FYMUxjQTlFWUw0UHloCkFpQVptRUtzU3lNaWtHSkozakl4UHhWSVNudkRaS0RjajhyZmlrRmh5bFFVNGpWbWJ1VTI0NnZCbHYrejBIdUkKK0pCNTEyVjU2VitxN09UMDNaSlBBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNJUEM5cWhYM0RpS0pUdjI1dXFsdGRNangycFRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFzNzRiZjZQMHlYZHlSb0tRdDhENU5DcStvOUxjQUpWQ2hPc0Q2V2xmM2FlK1pIMDkKQytBdkx4L0UzckxqMERQK1A5Z0JmWVVVTnAyb1pINE5JZFlMVWxHZEVuem5heWdOWTFnNXBZOTlraFdhcmE4YQpZWTBwaUNzVzFSZlhPd3FUbElFMUY4eTA4eHdWcFBHbW55RVQyZTJXa3NsR0JBSDhRZGRhakJNdXIxc0ZSSWJ5CmRSQURqaGM1NnhoV2ZJVUJlbXRWMzltbit6OTd0bDFWZzdheEN4T1llRWxWaGhsQTY0ZldSejhvY1JBYU1aajcKN0Y5eDEwVEI2YUxFbmg3R29EMXdXK0JyU2FMb0RzYW5jTXl6OE92cUJxSTdJVWk5SmRJdWxJM2w2cUdqK2h0MApXc1U1ZDM4akFBMUtwQnZicHlzV2tISGdLUXJZZkp3aUZCVzg3dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kubelet-client-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVytIenQ0dVJxb1F3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHhPVEV5TURreApNRFUyTURSYUZ3MHhPVEV5TVRBeE1EVTJNRFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFNYZ2I5cit2L3VPR1Nyd1BkVlV6d2Q5S2pCT0dIMTYzRDhaY1FwUk5lbnlBVzFteXZmMCtqQzhPNApEaG5rd1N6dU5LZ3JVWXlrV3B5Y0tyV29hQ2RRaFpTY3VLVURId1pmYml5aWpCRVdqTHc5aTBLQzJrd1ZNUjlNCnlaaFRwaUpNNkU4Ymt5dDhSazVwMzlIOUErMkxTVWxubEUyYlY3TmsyVDB3K2o0akY0S3IzeDZpQkFhd0hJcnMKY1NHYlk1N1cxL3BUSnRuL0hDWkhGV2ZyY0xPcUMyZGE0UnVTUnBlWE92WEtPa08rYkFzaGl6NGZTZ2pwa3VkbQoxMUNHVnhva1RFeitvanU2QnBjZXpzY1FsNklKdVhBa0xCbTFRWWpkYjRMWEdDM3ZxYjhTdnJDQ1FGa09tTGcxCm5Lb1NLZWtLblhxZEVyeGI0RS9FcVdHb0Z0Sm5BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFpVE9QNTNOa0tBT2FFS3ZoMXJJL0FqOXloUnpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFBRDhsaDgwR0NrbXRSZnlpOEYyS3ptNnNldlVaODM1RnluZmZZVjVWCjJBOXh6OFNtMHJVcE9FQXFvUjBkakgyM2NHLzVrQlNWK0FOOFpBa1RMeXhxb2djMEp1TTlUNmsyeUt5MHM4a3UKckNDa1VOQTZyWlJCSDAzWkhGMTNyc3lrUWJ3bWFEMnAwYWhFSWc4eml1dmNyVVJ1Ym5pYnRVdVlrcXVyemNocwpJVndMbVB0S3JQVHIrekJHYXBnOEk3RWtnQ2lHdkdKbGZVUDVLR3lLQlppUUVENVlVUXJkaS95ZENmYVMzQVRrClFzSlB4V28vcjZPTXZRZVpMRkhGYXd0TGZ3OFJOSW5zUW84TnBpRXVuZ05TOHBzY0NkM1BoemNqRFJQQ1Z2dkwKeXZLbUp2SzdIS3BtbG1VNXdXRVd3UGtkQjJBODVHN1BTTFJYd1l4RzRPNkpOdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kubelet-client.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFE4d0lFQmU2UTNjV1RKU215RnMrajEvSXIyTUhnc01xOVdyejB5N3pjMytVM0swClNNQ2tqSHB0cDUvdW93L2E2U3MySHQ3cTdxUWwyenV1UC80WElicDljdmIyVlNtNlh3eUUxRHM4YWlRZW9vWkEKakwzMVREemRTbUFFT3hKUnk4TU8wUFFmNmFxQ2tKWnRtTTcxYzBwcmRFRVh0Q3N0bFFvZjRHUDJFMTM4bFpHSgpqSXB0RXU1b3RUWkJLbnUrTzkyQkNZeGJFamszN3BQcGdtUWhEZnhwUmJWVk96ZVBIUDU5QytqcEZNRXlpb1dVCjBjdnJWdWZQejVhMlpvaWZJS05HNTN1R0k4YzVwWDRMaktvdXdFbTFnQ1M5Wlg3UlpyQjZ6cWpaK2w4QUMxeisKcE9jd3diU0NLTEIrNG43WkszbGhKUnhoNzFiNnBsaUd5ZDdaU1FJREFRQUJBb0lCQVFDTFRRbEFRMERVanEvTgpmZjFYSEhIbEU4UGowd3BSMG8zS2l1bEJTWVVaSHgxQjhEdnhrZnpBTVd1Q3ExUU9nUTdHOVh6MHBiQjlzaHZ3CnRtZWZaUWNGR01mRmxUN2RSUG95WnE4Zk9DQ2xCNU9BWUZjUkp0ZFlaVTRwWFdhZ08zc0hCNFJad2JrdGZSTi8KRWxlM1JkWE5BamFqbjhBWjVNdjhKNFFSSTVpNFp1QUFWV3dwRktXODlPaEVYQ1dVVEVHcmIzQmhpSzFaNjhCaQpzK1Q4MkxTdXJaQ0NtUEVha1dRSEV3cWl4QytYRWRlRU1HMWtZSm01T3NGRHc1ODZaRDZHVmhIcWdyNS9aOFgrCllvUjdtNVNHcks4WUdCbzFRR1cwUnBoaDJFVU8zL3FnQldscENYbys3NGNzQnFrblpEK2Y1K0VZZ1RKWUp4QVkKT0dRZitSK0JBb0dCQU1Vd0VhNWxlN2dpaitWaGtTMkNLVkgxSUNtM09jRjZjczdiWHJwOGR6Qk0rWHJxTkpMagpvbWRrMVlnL0pmNDNOWkd4RE9qK2lLT2pJSHkySi9lYzlsVTRuTFhSU0ZJWlg5OFpQZm9RNi9OQXpTWnNLUGZECkxlVS8rV0FIQWpUYll0SWR4MzZuczRUMFducHF1UG82ZFNsQXNxTEM3RVJLWU0xbWxQNUxMblFOQW9HQkFQL1YKVDkzOWRHTnB5amNtNGlqVWVXRlFsMjlkVXdFRmsvVkRNVUJDZFAvcmtlWkVTVmtSSmRuVExPR1ZCZ0tLeUd1TQpIRG9DMXhLd1F2VGI5V0crWGpWV0I4SkpEbFJYL3VoMkF2V0MwTmUySG4vdTJyeXN2QVMvbWhSU3crcHhESHU3ClJ0bEFLS1ZCM3NyN2p2dys3ZGV1RldHdUtwTUJXSEpOdXZveEtuOHRBb0dCQUpxY09DRGYzWVBoUmFaN085UE0KN1EwZ0FCbjFXa25EOHVVU3lGRzhhYy9yYXVuZlhWMlhNcTJUT0lKZDBUSmtvNUlhbXA3TmhPR1pkRTJVbmYzZQppcDhEaG94aERpMmhTN1NvSEJwSXpsaXJCTEFOdW9tWjloQjhldEc2YlJaNHRpRTl6RUFZeWYrRGdMWGZuQzVIClM3b095b0lvQ0F6N3JLOGdzYzQ1c0xDNUFvR0FMY1V2RmNzN29IR1QwUXd1MkJrellocTJEU0dJTVIyYlcvemEKZWVHcDV3TnhSZDRmdFVTaEhmaHZCaWpRTzNJeTZ6TFU5ZmYrSElUV1pkSlljMVZJcTRncHVUT3kwWm93cTh3NQpPVTFmS2NpV2FsTUVaVThPRUZkckxJbW1MWEp1UmxDNkd6SWtVM1NXZElCUEU0ZjZxMlNreEtZUlRkMm13a1J2CjJFVWxrajBDZ1lCUDdwdVFPS0t0K0JNendMd3M2bVhDOWxBdG5nQ2dFNWhwWHpoR2JZeW1VazNlQ0YxaWYzUmsKc25NRlFqeU5lRjBzeWNnSC9CYmpmMkZUVWNYQVpPRGt2Wllnb1dyWnYzWElyODFIQjFHNzBYRlRONlZWY2VMegpSeEI2cDVOMzF3RU1KOC8wMGs4cFVrZjREWTFhOVlSUnplK0FZMFNDcDdOUzEvWmwyM3BPaEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kubelet-client.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQwVENDQXJtZ0F3SUJBZ0lJV1lVOElFRHpaU0V3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMU5UaGFGdzB4T1RFeU1UQXhNRFUxTlRoYU1JR1hNVUV3ClB3WURWUVFLRXpoemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpPbTl3Wlc1emFHbG1kQzF0WVdOb2FXNWwKTFdOdmJtWnBaeTF2Y0dWeVlYUnZjakZTTUZBR0ExVUVBeE5KYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1MApPbTl3Wlc1emFHbG1kQzF0WVdOb2FXNWxMV052Ym1acFp5MXZjR1Z5WVhSdmNqcHViMlJsTFdKdmIzUnpkSEpoCmNIQmxjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNVVBNQ0JBWHVrTjNGa3kKVXBzaGJQbzlmeUs5akI0TERLdlZxODlNdTgzTi9sTnl0RWpBcEl4NmJhZWY3cU1QMnVrck5oN2U2dTZrSmRzNwpyai8rRnlHNmZYTDI5bFVwdWw4TWhOUTdQR29rSHFLR1FJeTk5VXc4M1VwZ0JEc1NVY3ZERHREMEgrbXFncENXCmJaak85WE5LYTNSQkY3UXJMWlVLSCtCajloTmQvSldSaVl5S2JSTHVhTFUyUVNwN3ZqdmRnUW1NV3hJNU4rNlQKNllKa0lRMzhhVVcxVlRzM2p4eitmUXZvNlJUQk1vcUZsTkhMNjFibno4K1d0bWFJbnlDalJ1ZDdoaVBIT2FWKwpDNHlxTHNCSnRZQWt2V1YrMFdhd2VzNm8yZnBmQUF0Yy9xVG5NTUcwZ2lpd2Z1SisyU3Q1WVNVY1llOVcrcVpZCmhzbmUyVWtDQXdFQUFhTjFNSE13RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUYKQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRklnOEwycUZmY09Jb2xPL2JtNnFXMTB5UEhhbApNQjhHQTFVZEl3UVlNQmFBRklnOEwycUZmY09Jb2xPL2JtNnFXMTB5UEhhbE1BMEdDU3FHU0liM0RRRUJDd1VBCkE0SUJBUUFPbWNuVjJ3aUlreHlXN3kra0pZUGhMQkZCUTRkaUJURHJPRklmYWJtbUx2YmkzdVV3VkNZNXIyeEQKOXcySDliZ05tL3dsbFJjell5YXMxSXdQRWYwTTNmaVlkRDc0QklEYVhnT1hjZVFta3QwSEhvTW9KU0NzTjF1NgpjMU5VSnBVVFFoK21GUkJzcHFmM0tJNHBRZlZBaWpzNCtFYk82RTBqR3Y1QXFRRlROWHhRMllYaEdwT3RwL0J0CjBjVHZpMU9LQ2NDRHBiK0pIcUpMRUtxUGE4bkFZWnA3b3ZwNVM4T3JpaVk4MTNFd2g4dXhBUGZHL2J0SzZNVnMKT0FtTUNMRzU5L1RHNnJoZjM3L3lSNVVFMEpNSjRkZ3JrejVjMlRNQ2JRTlNIVGNUdGorQ0tPRTUyQjNKRGhTRQo3M3BMR0xaZGdseWtVSit4Q0g0OHNYNE1wT3ViCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kubelet-signer.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMGw0Ry9hL3IvN2poa3E4RDNWVk04SGZTb3dUaGg5ZXR3L0dYRUtVVFhwOGdGdFpzCnIzOVBvd3ZEdUE0WjVNRXM3alNvSzFHTXBGcWNuQ3ExcUdnblVJV1VuTGlsQXg4R1gyNHNvb3dSRm95OFBZdEMKZ3RwTUZURWZUTW1ZVTZZaVRPaFBHNU1yZkVaT2FkL1IvUVB0aTBsSlo1Uk5tMWV6Wk5rOU1QbytJeGVDcTk4ZQpvZ1FHc0J5SzdIRWhtMk9lMXRmNlV5YloveHdtUnhWbjYzQ3pxZ3RuV3VFYmtrYVhsenIxeWpwRHZtd0xJWXMrCkgwb0k2WkxuWnRkUWhsY2FKRXhNL3FJN3VnYVhIczdIRUplaUNibHdKQ3dadFVHSTNXK0MxeGd0NzZtL0VyNncKZ2tCWkRwaTROWnlxRWlucENwMTZuUks4VytCUHhLbGhxQmJTWndJREFRQUJBb0lCQUZnZVF0ZHBKWFlNdjVCdAo5elJ6VXJNM3ZlZkRWNlZMVnVKSkJIcFlhM0NyUHduUjc5emplenhVNVRybnpUamhJaXoxcWF2YmtRb1hXcHFmCjJWQWRzTG90K2o1YnFlTlF6NTZSeStpYXUxMnl2ZmNacWxhZGtsa2VKbnBIeDZMaWFHUEd1N3hWUFZYbExWdDAKQWNYMkt6NjVDQ0ozSUxyOVZZdmM0NkRzY2JMSWwyOUNxQ0lFbnd5cndBSG8yVkpIdTFQOHY4V3g0VUJiRm9tegoySzdjQlRUYnpWMXJFQWJYeGZJcmMwdFk3VXBzWnM2aGtNeng4RHpMTGZSWmVWT0JjUEVyNWFSM3pocklBQktnCklJTGV3QjNGN0U2dFhTcW9GdG9WQ0hQMG5hR2hjenBjbkFQTnRNZDZVZ1doQWhkWVNTa2VzTDBjMHRVcUlTRGUKVXJXeVZBRUNnWUVBK1N5bGQ3RlJvdkpUMWxVc3d3dHE0NlhJMElVVkJ5eHZWcEFTQzhMMXVDZStxTDRtUlNnbApBQk9LL0xZaHVNb1JhZkZBVm52ZlBqYnVxM1ZVSnA5RTl0OENkWkhDVlc4TUlvYWViRGF2SkVYK0VjMDhIQU8xCjRNRk1UQndvekExekw4Vml1aTZEdmx4cXM2NVM4clcxTGNEYkptbEF3N0QzeWJlRzNCSWkzSUVDZ1lFQTJDRSsKU0h5U0FJSGpsKzJKa2g4RFQxR0N3MGNZOVRzNlYrNjRJMUtmMzN6RkR2SytOL0N0OHk3czZQQXNLRXhWR1BrQwpJbzBmWlAwUU84eHdwWUswUHV5S1dNaU1VZjdUajRuNXBFVVZDZWE5TFVoV1JlaXo1QklIcVdLK2s4V21GVXB6Cmc3dXVEU0E2UFJQMStpQ2p1Z3RIMEVUYU55cVZEeEduU0J6YzJ1Y0NnWUF4Q2VwZXpoVUUvckFsUklvVXNOQ08Ka1BnZW9iSnJ3UUVBaGtZbTdtMnhtcERaWU9MalJXMVN3SVhnQ25CRWovQXhhM3VBQ2N6N3o0L1ZTcmdQQ2RWbQp5S2tSUG1pQ3ErSTFnVXo0ZXlLby91VnIxM3AzQVB2d2lkcGNPRWFITWpaek5tT2h4TG5FNHlkVXlZQWxxRUZLCkNlU1hnS3R3V0FuTU4wUmhWMmhwQVFLQmdRRER0b2JCK1J2MUhhbk5JQ3JkaVB2a1RibU52OG9YOTRSRHNFWksKcGoxamtZYVluTFFueitpVk9EOE1TTUNUMVZ1Uis1czFVbm5GWjJ2VjJyRi9EemJOYkVGeldGZkl3R3N2cGcvTAo4MHF6NXFBVWExYkVnNDZ5enFqbGVDZC9oUkY2WWlyc2RYMk5JVXZibDBHOU9PVktTWURFVmpVTWs2RGJQbTh1CjNBUWFyUUtCZ0JDSzNkWVI3dEdmNGdHVTRPSytEWTJ2RjNJUDFqQmVCQmNLZDlaMHg1WjNOUWswWVpsTXNZVG4KNlNPSFJydXprMmJkRXYyVm42QWdvV09hVlNEbS9nNS9xSFVnek5vRUZwbCs2N3NnNDV5S2pXV01CSlpMM3ZISwpYVUVWejhzV054V2wzL0t0K3JEK3gvOVE3Yy9YZnF6UWpob0NSZ0RzQjI4dUZyemhBdUNHCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kubelet-signer.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVytIenQ0dVJxb1F3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHhPVEV5TURreApNRFUyTURSYUZ3MHhPVEV5TVRBeE1EVTJNRFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFNYZ2I5cit2L3VPR1Nyd1BkVlV6d2Q5S2pCT0dIMTYzRDhaY1FwUk5lbnlBVzFteXZmMCtqQzhPNApEaG5rd1N6dU5LZ3JVWXlrV3B5Y0tyV29hQ2RRaFpTY3VLVURId1pmYml5aWpCRVdqTHc5aTBLQzJrd1ZNUjlNCnlaaFRwaUpNNkU4Ymt5dDhSazVwMzlIOUErMkxTVWxubEUyYlY3TmsyVDB3K2o0akY0S3IzeDZpQkFhd0hJcnMKY1NHYlk1N1cxL3BUSnRuL0hDWkhGV2ZyY0xPcUMyZGE0UnVTUnBlWE92WEtPa08rYkFzaGl6NGZTZ2pwa3VkbQoxMUNHVnhva1RFeitvanU2QnBjZXpzY1FsNklKdVhBa0xCbTFRWWpkYjRMWEdDM3ZxYjhTdnJDQ1FGa09tTGcxCm5Lb1NLZWtLblhxZEVyeGI0RS9FcVdHb0Z0Sm5BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFpVE9QNTNOa0tBT2FFS3ZoMXJJL0FqOXloUnpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFBRDhsaDgwR0NrbXRSZnlpOEYyS3ptNnNldlVaODM1RnluZmZZVjVWCjJBOXh6OFNtMHJVcE9FQXFvUjBkakgyM2NHLzVrQlNWK0FOOFpBa1RMeXhxb2djMEp1TTlUNmsyeUt5MHM4a3UKckNDa1VOQTZyWlJCSDAzWkhGMTNyc3lrUWJ3bWFEMnAwYWhFSWc4eml1dmNyVVJ1Ym5pYnRVdVlrcXVyemNocwpJVndMbVB0S3JQVHIrekJHYXBnOEk3RWtnQ2lHdkdKbGZVUDVLR3lLQlppUUVENVlVUXJkaS95ZENmYVMzQVRrClFzSlB4V28vcjZPTXZRZVpMRkhGYXd0TGZ3OFJOSW5zUW84TnBpRXVuZ05TOHBzY0NkM1BoemNqRFJQQ1Z2dkwKeXZLbUp2SzdIS3BtbG1VNXdXRVd3UGtkQjJBODVHN1BTTFJYd1l4RzRPNkpOdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/kubelet-serving-ca-bundle.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVytIenQ0dVJxb1F3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHhPVEV5TURreApNRFUyTURSYUZ3MHhPVEV5TVRBeE1EVTJNRFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFNYZ2I5cit2L3VPR1Nyd1BkVlV6d2Q5S2pCT0dIMTYzRDhaY1FwUk5lbnlBVzFteXZmMCtqQzhPNApEaG5rd1N6dU5LZ3JVWXlrV3B5Y0tyV29hQ2RRaFpTY3VLVURId1pmYml5aWpCRVdqTHc5aTBLQzJrd1ZNUjlNCnlaaFRwaUpNNkU4Ymt5dDhSazVwMzlIOUErMkxTVWxubEUyYlY3TmsyVDB3K2o0akY0S3IzeDZpQkFhd0hJcnMKY1NHYlk1N1cxL3BUSnRuL0hDWkhGV2ZyY0xPcUMyZGE0UnVTUnBlWE92WEtPa08rYkFzaGl6NGZTZ2pwa3VkbQoxMUNHVnhva1RFeitvanU2QnBjZXpzY1FsNklKdVhBa0xCbTFRWWpkYjRMWEdDM3ZxYjhTdnJDQ1FGa09tTGcxCm5Lb1NLZWtLblhxZEVyeGI0RS9FcVdHb0Z0Sm5BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFpVE9QNTNOa0tBT2FFS3ZoMXJJL0FqOXloUnpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFBRDhsaDgwR0NrbXRSZnlpOEYyS3ptNnNldlVaODM1RnluZmZZVjVWCjJBOXh6OFNtMHJVcE9FQXFvUjBkakgyM2NHLzVrQlNWK0FOOFpBa1RMeXhxb2djMEp1TTlUNmsyeUt5MHM4a3UKckNDa1VOQTZyWlJCSDAzWkhGMTNyc3lrUWJ3bWFEMnAwYWhFSWc4eml1dmNyVVJ1Ym5pYnRVdVlrcXVyemNocwpJVndMbVB0S3JQVHIrekJHYXBnOEk3RWtnQ2lHdkdKbGZVUDVLR3lLQlppUUVENVlVUXJkaS95ZENmYVMzQVRrClFzSlB4V28vcjZPTXZRZVpMRkhGYXd0TGZ3OFJOSW5zUW84TnBpRXVuZ05TOHBzY0NkM1BoemNqRFJQQ1Z2dkwKeXZLbUp2SzdIS3BtbG1VNXdXRVd3UGtkQjJBODVHN1BTTFJYd1l4RzRPNkpOdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/machine-config-server.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeWNVeEZDMzYxdXhZWnl5WE94MkVtVVBmZVFlSmgyRTkrTDU4MHU2TGEwZkpudmNBCnhFMDkyTE4vaUxTTXo0cWtKSTByeVFydEhhbmVQM1A1am5yMW9qYTdJWVFOTWhjc1NReW5neTk2eVBZU1R0eU0KbUpiMm5ZaE5YSlJrN2hJeFM4NVcxR3VZaFoyazZNc05sbFMwNDhSYXJ3ck9oWTN1ckw5WDBVNytsYjdGUCtSNwpNbUFzWHFmT2YrcWcxWTJyVUVhbGdnbjdMd2ZQZmI1YVdWVG95TU1lbkpkY1NMNW9CVnlFUzF1c2l6Vm5YdVdyCnVrU1h3ZjJTSjc4bDhKdTdRRjRNZU1NMExwNEZCMndSSjdTMnhjYlJJdlpsMDNMN3NQUkNEbC93VlcyMGRNQXoKNWRDaFdFZ1RSWi9mRGQvQXo0U1RUOVhDUWg4UmN2Nm9NLy9MMlFJREFRQUJBb0lCQUYwWUxLTGc3Q0dKL3Vmcgp2UU03aFZpcDVrd1RYRE1vZk0xdUptMjBQb09MSmMzQXJZdmxENm9TZDc5OWZwS3Jwenh1SGt1dVRPVW80VEJwCnREVTNLbXBqMGtlT2hBQWVqUUpQWW1LMjMzSWxoeUQzeGE4SnlGTzY5ZWJIV1NJM0pxT1JXcUs3MmkyY0pPQjcKLzVMakZtc1l4N2FIeCszN0pLcHp4bkwrZlp4ZERHR0R5VStCSWtCVEVXcktuZDN1aG5KQThoZTJSRDh6ZjRVVAo1eGZFQ2ZhMGE1ZTdHS0lXTGNZWXFZQjhmbGMvWmZwb2c3eEQybVBNNU1iYlFDWGp6eFdSWjk5elNlM3N5Z29ICkxWRDM5dGVhTk9SeEt5cVU1Q09zV3RkdWFTMzR5Z1NsT0ljT2ZxOVNnUjRPaHBReEJ0cUxKMHRrWFlrcFR5SmsKY29NWURtRUNnWUVBMERVcE9YRllRYnFWTUhSSFRGUkNudjA1Tm1oZU9iWU9xWU9VUmY0Mmxia1N4bnlZR0FiSgpnY2djbExEU1kzQkZ5VTBTRkh2UjJFMnB5NThIT2MzOXp2OXBLMXRHaWI1T0VzeGRPc0FRd095WjNNZ0l0YjByCithcVAxSi81eWpYakhiUW1hclV2ckxUTXhjWEVud3lUTjBwaG96cE9yYm5WMmhGSUlKZzh1KzBDZ1lFQStCWEEKeFJIL1luNFphTSsyMUtDZFdtQTdJYVZ0YVViSnR2c1p2UVdSRThNTXdpZHNzbjU3blQzYkNpQjg3MVVJZHJoMApGMWp2RTVQQ2ZiNTZkMmsxU2lwdXNnQ09oSWlyL1o2R2I2aC9WbGx5TkIzcnRjZEZSbE5DeTZVREcwUXU1bjNUCmR1Vjl4YnpSdlJRcmVGVTREcUQ1SWgxUnhQUlM5NFAwSitCOFNoMENnWUVBelFsOUptZDdiWWNzQWtLUU1CZk8KWDdtcFRPNHMxSko0RC9GVzVESzdXR2lnbDd6OUhyUVlYdWxOVkJScHE2bFY0QzQ0dnRsTXhzRjhrOXh4QmpqWQpXSy9ueHQybE1tS3BpaE9kUUEwQ3NxcU52d0Z5cWw2MzNxOWI0eDBEcFdHNTNuZVpXWDVDaThhazNhS3J4YUZoCm5KSndZb2s2RUJVeEJ3WDd6TFYvSWVVQ2dZQm9oT21wWFhMR01UQk5XeTNCR1VZU0hIYnRMd0FRbVpWRWRUZ2IKemV1WWN0VytPdFB0dzZJYTFrT2hXWnlwVEo3N1BhMFRaUkdjb3VVUEN5QVhqUWk1alhVRG8zNW4waGo4Q2p6RApjQzd0MTFOcEo2MzE4TlY3MG5wU3g5dXVNaVM4VVFpMWoreFVVYi9mdEU2NExOY29PcU9idnRTRGNSZy9WYVdZCjQxZ1o5UUtCZ0NvWGpneThxTFJFeURMRlBpNzdsVlAxV0FPR1NQWHc0aDdMdlRnQ0RMbm9CTXFiZURLL3hPc0YKQ1VCUTdzSm9GL3lrVkYzTkFMVUVveDBIZWs2czNYLzcxcWEyOFBNVzU4eTBaUHRGRXhoWFlrUXFpL3k2b3RSeQplSDhlV3graTd6VlRrcHJRb3VLSU42NWlUSVd4MDlrSjg2QzlEN3h0NDg1QlhMZHR0dkpwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/machine-config-server.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURmekNDQW1lZ0F3SUJBZ0lJQVl5Y2VrcTNSbTB3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU1TVRJd09URXdOVFUxT0ZvWApEVEk1TVRJd05qRXdOVFl3TVZvd056RTFNRE1HQTFVRUF4TXNZWEJwTFdsdWRDNWpiSFZ6ZEdWeUxUTTBNMll1CmMyRnVaR0p2ZURFMk5qTXViM0JsYm5Sc1l5NWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUURKeFRFVUxmclc3RmhuTEpjN0hZU1pROTk1QjRtSFlUMzR2bnpTN290clI4bWU5d0RFVFQzWQpzMytJdEl6UGlxUWtqU3ZKQ3UwZHFkNC9jL21PZXZXaU5yc2hoQTB5Rnl4SkRLZURMM3JJOWhKTzNJeVlsdmFkCmlFMWNsR1R1RWpGTHpsYlVhNWlGbmFUb3l3MldWTFRqeEZxdkNzNkZqZTZzdjFmUlR2NlZ2c1UvNUhzeVlDeGUKcDg1LzZxRFZqYXRRUnFXQ0Nmc3ZCODk5dmxwWlZPakl3eDZjbDF4SXZtZ0ZYSVJMVzZ5TE5XZGU1YXU2UkpmQgovWkludnlYd203dEFYZ3g0d3pRdW5nVUhiQkVudExiRnh0RWk5bVhUY3Z1dzlFSU9YL0JWYmJSMHdEUGwwS0ZZClNCTkZuOThOMzhEUGhKTlAxY0pDSHhGeS9xZ3ovOHZaQWdNQkFBR2pnWjh3Z1p3d0V3WURWUjBsQkF3d0NnWUkKS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVRU0xEZ1NDQ0NsbE5VbmZaQnh0Mgp0UDNNS2Rnd0h3WURWUjBqQkJnd0ZvQVVRU0xEZ1NDQ0NsbE5VbmZaQnh0MnRQM01LZGd3TndZRFZSMFJCREF3CkxvSXNZWEJwTFdsdWRDNWpiSFZ6ZEdWeUxUTTBNMll1YzJGdVpHSnZlREUyTmpNdWIzQmxiblJzWXk1amIyMHcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUNQMC9XUEdqUmlOcmV5TkRSeDBQb1k5WjBrMm41OE9qRTQ4RE9GUworK3k4VVROV1BLWHk1WU5kaTRwNmQvT0NwK1FxM1UxOWNYV29rMkkrZVljTXUrd0xEWUtMWHg4UFgySzRXRE9HCmtobnRncy91TGIrVUx0cmkwYmd2ZTZTQlBNN0ZmWTQ2T2ptVkFkZDhiR0Y1ZzQ0RFpHTFphTGEzaUVEd1hnRmkKVE1pQUh6Z0FSdHE4elhsY2p4eGJDNkRJSm5va3Y1Uk1QME1SVUdrNndQWk9obGNZTlFkVXZOeXZBM1RmaW5UbQpseDV2ZjM0b1cvbGZBTzBKUmhMYzRRQ3YyaGtNdjgzZWZ1eWIvT0w2MGg2OW5JMnhvazY5dndFNXNiNjRmbE1MCkJKQnlZRDN6QURPbi8rSk10QTZRUXovMGt0VDErTUFtc0doTldoc3JLWk1HQ1ZJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/service-account.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM3hJWGdjS3N6WWc0VDVVblhlQzFCUnZlN2NvUFlJdzF2emdmYzVyTXNKMk9meU81ClFYYk9jMWZ5OFVhUEc1aW01azdvQkM1VzRuNTZUMXVybzFhUnlrNkF5TlRaUFhlSVhoSThQa2FYKzlkWHQ3WlkKSmRnWHh6T2JweldPZDg2d0xpc05lUHQwZmJYbkNjaWNuWEVCeWtER2RVV244b0g4ZXRmcG4vWWJIaDYyL1NqZApaZFlxWHFoZ292R1lnS2UvUk1tTjlxQ1k5N1hRblZ4aHZwY0tnN2ZXMWo1WFV5TlNSdHRwQ0JKdnQ5RUhyVjl2CmtWSWFTQ0tJbm9VdEV3N2phQmpSZVpVdEVUdXRmK1Z3dG5DY09VUUVaRDZRbTN2ajMyOHVWWVMvbVJJYnVBTkgKd25sdnYzampmeHVpV05mZUhXbG5vOS9PemhmeEVLTFZXa2hoY3dJREFRQUJBb0lCQVFDdlhTaXZzUnhxSTdtcApEcWU1RElzaWJndXVRbGdlWFh0dlRTNmtra0J5WkJwKzV0V2Zta2VvczY1Z2NValZ1QWNWTFZrRzJHc2plYXlyCnNIUlpYeGdUdysxSWROUW5sMDNVTGwrLzBYMXYxWlcyN2htVC9yS0t2bzZTUCs4MVRuNkFmUVlGWXlEc0p0RnYKaG85ZzBsTkc3ZTlXaUNFRTY1MVI4V1ZQaElsQy9naUw0M2xNWTB2Y201L1FXbWZrdlFwZ0REZWVrb2xyQ25QVQpRdXFadzc4MFMwR1RhSHI4TTJ0ckdGalNxVlhWUmo0TytqRERUK3NsZEtHSDlPNVVPWDQwQUdvalBCSk5wTEcvCjFBOHVaMUl2L3JJVzBQckYxdi9oelBGRGFHU29DT0VpcithQy92SkhLTU9YWmF3alAxVDQ4U3Fucm9lVnpYSkgKdmU5UjhpOFJBb0dCQVBiKzNoL2hFQjg2ZVMwd0dwd1ppZlY1R09venh3d2xRYkxobWNKdzkwT3pVN0YrSDNrawptM0JkUUF4cUt6Z0hadTRlWGoyS2VvMUNaTTIxSjRjWVFYdG1Ydk1VcHZzNStVbTJSWUF6K05EUUU0WVhrTDk3CjFBSTFTL3FUR1hROVdBL0Yyb3FjUlZwOUlHcTBuZkVHTC9LTjFPVmFqMktZcG82NTJWTmc3Q2twQW9HQkFPY3oKOE1TNVlzSitCMWE2UHZwTTNjT2I2QmY3eURhOUtHR3huRExvemZLQ2h1MnZVdFhLZkdxUUx3YkNrbytSOGZKTQpkS1hicGo0aW1LbWZQa09CblBGbklkZFhHZUlTaUdFSVFnN2JhR2N5bGx2NkpxcVErTE9CUjVCYmJuZ1p4SUZYCmtya3dpQXBSTmxFMVZiWHQ3TlQrOTFFRUcyeHpXWURocjJ2RGoxMDdBb0dCQUxUbTlzbGlqZXhSWjI4eFRFd0kKYUlMaHJ0M2FEbTlXMmtlcDlIUDFTU1RNc3YvTTRFQmFEMzY4emF4S0ZsMXpEbkJZemExRlAzMDJvNTRHa0d6aAoxeFFLWm9Dakg2bmhURFF3eTdhYVdpS1dRN1p5akJHeklCUjk5S2dTRlJLTjIzR3g5OTZObGo0d1p3M0FPKzNNCkdsSU1qMkZzY3BoRU5ibFRaVmtzSTh3QkFvR0JBTXhpWnpLUks5UUJjMTFnMGJHVlorbTNGa3ExWXIyNUpFeVEKcFNPQUdDZU02ZGlPUjYwRkRrMXAzcGljUXRHMlUrczlXVlVSd25sbFBnMmMzMzd2d3B6STdlcWViaHdqQS9xNwpRU0kvSmFFczRDeTVDNXQzQXRRMHNkM1VaZWkzNXJYc2c2RkFYTks2RGtsbDI3b3pkVXlwaEZwVFJpYnVKYTVBClZFSHdvL2puQW9HQUdBNDd4SWxIVVZYRHJYbVNtVlkrbVBlYVNDRGQwTElEUnE4bzFOSXcycGdxTldHdlJrVWMKYXV6aVd5bG1IdkJsUWdmSUYzdEE2Sm9ocFdnSWpMaVJrb3Z0T1kwUFZ5RjVYb3diMlBCeUc4NzZuT1pPeFY3LwpjTkdOVkFuK0YrMWkyREYvU00xc3IwYW9qcEozV0Z4alV6cUFpZzk5cGp4QTc1RjdrODl0OXVNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/service-account.pub",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBM3hJWGdjS3N6WWc0VDVVblhlQzEKQlJ2ZTdjb1BZSXcxdnpnZmM1ck1zSjJPZnlPNVFYYk9jMWZ5OFVhUEc1aW01azdvQkM1VzRuNTZUMXVybzFhUgp5azZBeU5UWlBYZUlYaEk4UGthWCs5ZFh0N1pZSmRnWHh6T2JweldPZDg2d0xpc05lUHQwZmJYbkNjaWNuWEVCCnlrREdkVVduOG9IOGV0ZnBuL1liSGg2Mi9TamRaZFlxWHFoZ292R1lnS2UvUk1tTjlxQ1k5N1hRblZ4aHZwY0sKZzdmVzFqNVhVeU5TUnR0cENCSnZ0OUVIclY5dmtWSWFTQ0tJbm9VdEV3N2phQmpSZVpVdEVUdXRmK1Z3dG5DYwpPVVFFWkQ2UW0zdmozMjh1VllTL21SSWJ1QU5Id25sdnYzampmeHVpV05mZUhXbG5vOS9PemhmeEVLTFZXa2hoCmN3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/journal-gatewayd.key",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBK1lZclNzZXVPa0oybnNYcEF3cS8yOUQ3aGVvVVpwNDA3aSs3Nk5hSnNtekFZOVVnCklFUG9nWkpLaE16MFdLT1g2UDBYa05nZTNGQUxkWHBqZUJVNkJnbHVrcG80bDVHVnluN3BiNDZPcmVNdndnOHUKc1JCOWU0RzVReXM1RjRSQzJjUnlsa2lFYkFGWks0eU54SFFRVVFkZ3lLbU5LL0lNT0E1c2ZJT29kR2dBeG5pdgpYL1NoRTR6UEFJdTVwam1KZUdQN2x5dnFTWlZWYUlRbTdCVHJMVzRsNmltb3l6ekkvNG45VHNQcmttN2V3MFlLCmdHYnN2dW9LQno5NEVkc3gvWmt1NXdWS05IVEVVek1MWHkwekNQNmNtSW83YnJDblJEWWdoRnlkRjVqRjgza0EKVDJEKzMxdU9xcFVERVA4UzZQTEdNOVpWVmh3N3hkbmZHWUFlL1FJREFRQUJBb0lCQVFDa05WaWVNTVNHMEtCeApvbnJTcHF0V1JMU1NEMWIzcFZ2ZCtBbm9rKzh3UFlOcTc2SGh1ZTd6L2tzT0ZEY2xjaHVSbDZWL2k4cmJYODM2CnROMXE5RVVvSGVMbmxaaHlucnQ5OUlFNUNnNzVmazQ2bm5VeXoxQlZEQ3pZZUVSdEpudzhCWjBISzVnQjMrMUgKeklxclkxb3RpUFozZDZWUTYweUJRM1MvaUlFK2dMcC9ZQ0x5czFjT3pTeUlIVTJuUStHTUtPSjVYQ00waG00VQpMQlhzalpxdWR3MTFwMG91R1c5TWp3Sjcxd01MczVPNjN3enBVc1B4eFk5cThwa3pXcFc5WkhrK0E0bW56MUdkCjB3UjhIRDEwYndER2k5c3pIYWcwTGZRY1pWQkZIb3BBQW5kUGVnUVMrMHZyZkpmZHdSM0J0cG1HK1BTYTZLbG8Ka2VpNS9EK2RBb0dCQVByTzZQNVRSRlM5Y0w4ZEF4NGdxWWt2L3NwSmJ3UGFURC9jbDhIdWpyTmYwWGt3T00xTQpva0hqVmZiKy9HNWpDd042SmVLUm92RDUyMDNCVUJPaVJ6WEg1c0lkb0dnYmRpRXpZOVlJYVBBOHI0NFI0WUZNCkZYWWJYY3huV0RpUDlwY2Mzblh1MFlhcm9XZDBOUzlqaXNPSXg2ekZ2RWczRktVb1pwMkhzUkVmQW9HQkFQNncKZERtc0Qxd01HaWVjcktnQnpKQmdqUXArcG5RM1piUFM2Y2E2dWhndGJXZEV5N1Q3UmVUN3BtM0E3eVBaVUNSQgptYmhUNlZkUUJVNzI3K0pVK2NJQkxVS1dTSUcwdjBKb1RGR2RvbWFEMStLRC93UCtOeVRyMER5TDcwbVN4UjVCCnRYTjF1YUlqUGRmQXNrYitjTjFFNWRFUEVaSlpMNVRCZTkzMnFZQmpBb0dBYk1nYmhGdUhNcDNyN2VoZWRzM0IKMnEvSGVlTjUxQmoxbzJsQkpTc2NGNjdDZ3lhb0xGdEZzUUF5USt2NmZzSlVmNUNXSi92MHlVSUZuV2J3SFdQdwpNT0pnTXVkNHNFN2c0S3VTYkwyL0RodTBKUkdhVm1NeWw4UnMzWUFoWW44R2ZDcFlUcHhqb2w2RXBnTmdJZ3F4Cm4vZU9hMkJrTm9vMVdTRDV5TytXbkE4Q2dZQkJWS3dMbXlvNWQxVkNNZnRNQVdJaTZ0RmpEc2ZONmVQcHM4R0oKMjU0ZTA1Qkx2Q2J3M3IrNEZDRkY2QWF2MEcreFRTNk1UT0gvSnFTbDg4dm01OXRGTzU0TGhaZEZ4a0tGVzFHdwpZZG9scDg0NTZaZ0J3elVNQUgxaStwWS83aWtvTUx6RnlEMzg3RU5SMDdrbll0ODZzeENzaHN3QUdXYU9KdStLCktWcWpkd0tCZ0E0WnVCeHFTK29LVy94Vkk4S1IyaDJjSVgxYitlUTdKNjRIWGIrbGhjY1NIZjIySmZ6S1htbjgKdjYxTXNiM0FzQXorRDN4TGxsdEh4WW0xR0IzdFVQUG1nOWhtZUh6ekc2MFkybmJvdURDaW9CeGErcG1tYUVhMgpySXNZRTZUZTlOVWZEM0J4SHdCOGFjVjd2eXdSZUl5bGxUdFJmaDlCSjRKbUxVK0laNEhHCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/journal-gatewayd.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lJYjJ1enlxM1R3K2N3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU1TVRJd09URXdOVFUxT0ZvWApEVEk1TVRJd05qRXdOVFl3TWxvd09URWNNQm9HQTFVRUNoTVRUM0JsYmxOb2FXWjBJRUp2YjNSemRISmhjREVaCk1CY0dBMVVFQXhNUWFtOTFjbTVoYkMxbllYUmxkMkY1WkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQVBtR0swckhyanBDZHA3RjZRTUt2OXZRKzRYcUZHYWVOTzR2dStqV2liSnN3R1BWSUNCRAo2SUdTU29UTTlGaWpsK2o5RjVEWUh0eFFDM1Y2WTNnVk9nWUpicEthT0plUmxjcCs2VytPanEzakw4SVBMckVRCmZYdUJ1VU1yT1JlRVF0bkVjcFpJaEd3QldTdU1qY1IwRUZFSFlNaXBqU3Z5RERnT2JIeURxSFJvQU1aNHIxLzAKb1JPTXp3Q0x1YVk1aVhoais1Y3I2a21WVldpRUp1d1U2eTF1SmVvcHFNczh5UCtKL1U3RDY1SnUzc05HQ29CbQo3TDdxQ2djL2VCSGJNZjJaTHVjRlNqUjB4Rk16QzE4dE13aituSmlLTzI2d3AwUTJJSVJjblJlWXhmTjVBRTlnCi90OWJqcXFWQXhEL0V1anl4alBXVlZZY084WFozeG1BSHYwQ0F3RUFBYU4vTUgwd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlJCSXNPQklJSUtXVTFTZDlrSEczYTAvY3dwMkRBZkJnTlZIU01FR0RBV2dCUkJJc09CCklJSUtXVTFTZDlrSEczYTAvY3dwMkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUJ2RStuNXhCaFZtYkh0VkcKSjJ5OHR1MEx4TEF0VTJBSkFLUE40UnorMC8xc0ZGV1lxeS9oTmxDWlowS3B5RXF2eHhYUHRmWm9WMDQvaFBtMQpJZXoxb3ptRUNUMkxWLzEwV2hvdk1DTzdnOGFuaFdTQlVNRWpLQkpJOEVZMjl0cXcxRFdmQnc2dVR1bENZZDA1CmZNZFg3UTBoTTd4Mm9wbFN5RUxydytBakxRdjMrWS9kTW03SEF0VjZ3bm5OSHNjejlSN3VwcG5MS1pjU0srVlcKMXNNdTh3TFVVeUdXK3dJWWNRancvMERTWERlVE9tRGFUU1ZrMFVadnRoVVZTQXc5VFVDRDhLYW1QUStxcXA0SApkc1pYYU9rbVJSaXBBbFp0TElzcDhFdHFZZXBiU0MvRXovWER2R0w2VEpVZkkva3psTzdaL2VNL2FiNnBjR3hXCnI4VzdtUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                            "verification": {}
                        },
                        "mode": 384
                    },
                    {
                        "filesystem": "root",
                        "path": "/opt/openshift/tls/root-ca.crt",
                        "user": {
                            "name": "root"
                        },
                        "contents": {
                            "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJU3VKUFBLNC96Lzh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU1TVRJd09URXdOVFUxT0ZvWApEVEk1TVRJd05qRXdOVFUxT0Zvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0Q1dWQysrQ3VHb0gKRGFOcVEyUVhlZ01GUmlCZjlYc3V6T3lyTFNJOEZyKzVFMW51cEV6SnZZNDg2dEpYTTZuQWkrajVtWjUwMENkZgpDMmtmQU1Vc2h6NFZZNXZYUGxvcWh4VkRtWkhyU3pzVk5MNFVPV25GdUNwZGZMb3ZoODF0c1Q5V0txQTFhMlY1Cm1jV0FiNFltcGlJSmZSaFk3TVBhVDcyS3pnakFtR0JSV3FYQktlaTdBTXFHRnRJTjQ4eTZhU3ExbFBhTU53cnoKR3EzOWFCdFM2aW1mNGlnd0hxMXE1QmpwSW45Qi81c0tHaFNXeUxrQXRldll6UjhzQUFkcGdnMjRsWnlsUm5xOQpqWDJCdndodldsMzRBK3dsWnZqL2Jrak94SmFaSUZjKzQyWk1lK1VTMmFKcU5oUGNCdklyQU4rSjdPcmFteVcxCjcvTVFmZjhVZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVFTTERnU0NDQ2xsTlVuZlpCeHQydFAzTUtkZ3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdpK2d0NGRXUlJBZVJNd3hlVzdCWUJ2aEhEb3NsZzBGcmV5K2pubENHN1JDTy9OWXM0TStvdFYzZWxVCjBjL3FLeDVjWUZHTDFtVGFhUDFmemlHdGdNamlnZVljL3NiN01ISCtDa3Z5OHNmMi9OdmJna040RUtodDhUTWIKN2tRWVJuTFFPQmYwTmZqNWpyZEdYVUthTk5zeHUzM1FsMmw3N3F2elkzMkswTG11SEMreWUvUXdKb2R1STdoUwpjZnYyOGs1clZKa2NKMCtLN0graUc1bHJmWVdTUmNyT2c5RXAwbi9CU1h1ejZMb2RuczZZY2Zxanhnc3Nra012Ck5hT1BIRUVYRzc2RUc3UGt1dEx1WDRJeTV3N2wvUzBvSng5ekgxNkFIbzVSY3JvQStzVzdINnBzbS9rMkg3b2MKZDFFQkZ6SVdCWUhPZXZlRUFSeXVhNXNJYmJ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                            "verification": {}
                        },
                        "mode": 420
                    }
                ]
            },
            "systemd": {
                "units": [
                    {
                        "contents": "[Unit]\nDescription=Approve CSRs during bootstrap phase\nWants=bootkube.service\nAfter=bootkube.service\n\n[Service]\nExecStart=/usr/local/bin/approve-csr.sh /opt/openshift/auth/kubeconfig\n\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "approve-csr.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Bootstrap a Kubernetes cluster\nWants=kubelet.service\nAfter=kubelet.service\nConditionPathExists=!/opt/openshift/.bootkube.done\n\n[Service]\nWorkingDirectory=/opt/openshift\nExecStart=/usr/local/bin/bootkube.sh\n\nRestart=on-failure\nRestartSec=5s\n",
                        "name": "bootkube.service"
                    },
                    {
                        "contents": "# In RHEL8 the service uses DynamicUser=yes; we need to work both ways, so hence\n# we hack this by adding the user if it doesn't exist and chown the file, rather\n# than doing it in Ignition.\n# https://github.com/openshift/installer/pull/1445\n[Unit]\nDescription=Change ownership of journal-gatewayd.key\nBefore=systemd-journal-gatewayd.service\n\n[Service]\nType=oneshot\nRemainAfterExit=yes\nExecStart=/bin/sh -c \"if ! getent passwd systemd-journal-gateway \u0026\u003e/dev/null; then useradd -r systemd-journal-gateway; fi \u0026\u0026 chown systemd-journal-gateway: /opt/openshift/tls/journal-gatewayd.{crt,key}\"\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "chown-gatewayd-key.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Kubernetes Kubelet\nWants=rpc-statd.service\n\n[Service]\nType=notify\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/manifests\nExecStartPre=/bin/mkdir --parents /etc/kubernetes/kubelet-plugins/volume/exec\nEnvironment=KUBELET_RUNTIME_REQUEST_TIMEOUT=10m\nEnvironmentFile=-/etc/kubernetes/kubelet-env\n\nExecStart=/usr/bin/hyperkube \\\n  kubelet \\\n    --container-runtime=remote \\\n    --container-runtime-endpoint=/var/run/crio/crio.sock \\\n    --runtime-request-timeout=${KUBELET_RUNTIME_REQUEST_TIMEOUT} \\\n    --pod-manifest-path=/etc/kubernetes/manifests \\\n    --allow-privileged \\\n    --minimum-container-ttl-duration=6m0s \\\n    --cluster-domain=cluster.local \\\n    --cgroup-driver=systemd \\\n    --serialize-image-pulls=false \\\n    --v=2 \\\n    --volume-plugin-dir=/etc/kubernetes/kubelet-plugins/volume/exec \\\n\nRestart=always\nRestartSec=10\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "kubelet.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Bootstrap an OpenShift cluster\nWants=bootkube.service\nAfter=bootkube.service\nConditionPathExists=!/opt/openshift/.openshift.done\n\n[Service]\nWorkingDirectory=/opt/openshift/openshift\nExecStart=/usr/local/bin/openshift.sh /opt/openshift/auth/kubeconfig\n\nRestart=on-failure\nRestartSec=5s\n",
                        "name": "openshift.service"
                    },
                    {
                        "contents": "[Unit]\nDescription=Report the completion of the cluster bootstrap process\n# Workaround for https://github.com/systemd/systemd/issues/1312\nWants=bootkube.service openshift.service\nAfter=bootkube.service openshift.service\n\n[Service]\nExecStart=/usr/local/bin/report-progress.sh /opt/openshift/auth/kubeconfig\n\nRestart=on-failure\nRestartSec=5s\n\n[Install]\nWantedBy=multi-user.target\n",
                        "enabled": true,
                        "name": "progress.service"
                    },
                    {
                        "dropins": [
                            {
                                "contents": "[Service]\nExecStart=\nExecStart=/usr/lib/systemd/systemd-journal-gatewayd \\\n  --key=/opt/openshift/tls/journal-gatewayd.key \\\n  --cert=/opt/openshift/tls/journal-gatewayd.crt \\\n  --trust=/opt/openshift/tls/root-ca.crt\n",
                                "name": "certs.conf"
                            }
                        ],
                        "name": "systemd-journal-gatewayd.service"
                    },
                    {
                        "enabled": true,
                        "name": "systemd-journal-gatewayd.socket"
                    }
                ]
            }
        },
        "File": {
            "Filename": "bootstrap.ign",
            "Data": ""
        }
    },
    "*cluster.Cluster": {
        "FileList": [
            {
                "Filename": "terraform.tfstate",
                "Data": ""
            }
        ]
    },
    "*cluster.Metadata": {
        "File": {
            "Filename": "metadata.json",
            "Data": "eyJjbHVzdGVyTmFtZSI6ImNsdXN0ZXItMzQzZiIsImNsdXN0ZXJJRCI6IjE0OTUzZTE5LWZkMzQtNDlkMC1iOGNlLWQ4MzU4NDMxOWQzNiIsImluZnJhSUQiOiJjbHVzdGVyLTM0M2YtOGZqa2oiLCJhd3MiOnsicmVnaW9uIjoiZXUtY2VudHJhbC0xIiwiaWRlbnRpZmllciI6W3sia3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpraiI6Im93bmVkIn0seyJvcGVuc2hpZnRDbHVzdGVySUQiOiIxNDk1M2UxOS1mZDM0LTQ5ZDAtYjhjZS1kODM1ODQzMTlkMzYifV19fQ=="
        }
    },
    "*cluster.TerraformVariables": {
        "FileList": [
            {
                "Filename": "terraform.tfvars",
                "Data": ""
            },
            {
                "Filename": "terraform.aws.auto.tfvars",
                "Data": "ewogICJhd3NfYW1pIjogImFtaS0wMmZkZDYyNzAyOWMwMDU1YiIsCiAgImF3c19leHRyYV90YWdzIjogewogICAgImt1YmVybmV0ZXMuaW8vY2x1c3Rlci9jbHVzdGVyLTM0M2YtOGZqa2oiOiAib3duZWQiCiAgfSwKICAiYXdzX2Jvb3RzdHJhcF9pbnN0YW5jZV90eXBlIjogIm00LmxhcmdlIiwKICAiYXdzX21hc3Rlcl9pbnN0YW5jZV90eXBlIjogIm00LnhsYXJnZSIsCiAgImF3c19tYXN0ZXJfYXZhaWxhYmlsaXR5X3pvbmVzIjogWwogICAgImV1LWNlbnRyYWwtMWEiLAogICAgImV1LWNlbnRyYWwtMWIiLAogICAgImV1LWNlbnRyYWwtMWMiCiAgXSwKICAiYXdzX3dvcmtlcl9hdmFpbGFiaWxpdHlfem9uZXMiOiBbCiAgICAiZXUtY2VudHJhbC0xYSIsCiAgICAiZXUtY2VudHJhbC0xYiIsCiAgICAiZXUtY2VudHJhbC0xYyIKICBdLAogICJhd3NfbWFzdGVyX3Jvb3Rfdm9sdW1lX2lvcHMiOiAwLAogICJhd3NfbWFzdGVyX3Jvb3Rfdm9sdW1lX3NpemUiOiAxMjAsCiAgImF3c19tYXN0ZXJfcm9vdF92b2x1bWVfdHlwZSI6ICJncDIiLAogICJhd3NfcmVnaW9uIjogImV1LWNlbnRyYWwtMSIKfQ=="
            }
        ]
    },
    "*installconfig.ClusterID": {
        "UUID": "14953e19-fd34-49d0-b8ce-d83584319d36",
        "InfraID": "cluster-343f-8fjkj"
    },
    "*installconfig.InstallConfig": {
        "config": {
            "apiVersion": "v1",
            "metadata": {
                "name": "cluster-343f",
                "creationTimestamp": null
            },
            "baseDomain": "sandbox1663.opentlc.com",
            "networking": {
                "machineCIDR": "10.0.0.0/16",
                "networkType": "OpenShiftSDN",
                "clusterNetwork": [
                    {
                        "cidr": "10.128.0.0/14",
                        "hostPrefix": 23
                    }
                ],
                "serviceNetwork": [
                    "172.30.0.0/16"
                ]
            },
            "controlPlane": {
                "name": "master",
                "replicas": 3,
                "platform": {
                    "aws": {
                        "zones": [
                            "eu-central-1a",
                            "eu-central-1b",
                            "eu-central-1c"
                        ],
                        "type": "m4.xlarge",
                        "rootVolume": {
                            "iops": 0,
                            "size": 120,
                            "type": "gp2"
                        }
                    }
                },
                "hyperthreading": "Enabled"
            },
            "compute": [
                {
                    "name": "worker",
                    "replicas": 3,
                    "platform": {},
                    "hyperthreading": "Enabled"
                }
            ],
            "platform": {
                "aws": {
                    "region": "eu-central-1"
                }
            },
            "pullSecret": "{\"auths\":{\"cloud.openshift.com\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K2ZlbGl4Y2VudGVuZXJhbWVyaW5vMWp4eDk0OWRtc3Z3YXB0am1neG9zanBsOXZoOk5ES0xISlFXS0dOQUIxMDVVRFdZR1pWSTZUU0E5N0xEMTBLMkgwM01HS0lTSEtNQTZRTkxaOVc3QlczQ1pRUFo=\",\"email\":\"felix.cent.merino@hotmail.es\"},\"quay.io\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K2ZlbGl4Y2VudGVuZXJhbWVyaW5vMWp4eDk0OWRtc3Z3YXB0am1neG9zanBsOXZoOk5ES0xISlFXS0dOQUIxMDVVRFdZR1pWSTZUU0E5N0xEMTBLMkgwM01HS0lTSEtNQTZRTkxaOVc3QlczQ1pRUFo=\",\"email\":\"felix.cent.merino@hotmail.es\"},\"registry.connect.redhat.com\":{\"auth\":\"NTE4NjU5MTh8dWhjLTFKeFg5NDlETVNWV2FwVGptZ1hPc0pwbDlWSDpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSXhZV0pqWmpjNE1HVmpPR1EwTVdFMVlqaGpNalF3WkRNelkyVTBZVFUwWXlKOS5NendieG43dWRpUFNvbk43ZzVtRjg0cEUyNnliUktIWFJuQWtvX1RFQWRvM1BRWXNCTjRKME11bzB3TmhGdENxY3NmY1I5OUZseTN6MFdqUW9qQXpYVTdvRkQ5OVZrLWNJTGl3RHhmRmRfczloeUFvN3E3aUJxUkdKZHJXdDRidWZRbi1GVk81cG0zbG5GTUlENFMza2JBa3UwaEt0cWFKN3dTcHNGbVg4OWlBcnpuVjFoRTBiR1pfUWlBNnBhSUR0V1lhOVBiWXgzZWRkYWJOZVg2aUU1M2xKYzd6Yk9zRVBQM1pnYkxOZFdsQldWZjhON0pxOEx4b09sakw3ZmdHX3JZV3JJb1ZEZlV4TS1FVVlqU2ZfUUQ5b29Wb20wYi1XMmR5ZDIwZTFvTllCOGttazNwck85bHVQZEtVLVVWbjBjVENCQjVNWnFYdjdlNWlkcWpDeWNWRUhsQ2hVMVJrVWFJMHhnTS1JMlozeFRaX3pVckFGNWdaZmJtN0JBTm1nc3I4NFlTOEcxVDdpRl82Y2ZKVmd0dTZIU0FEbTJqNVhsTVludGVFYy0wTE1adS1uUXVQOGZteEp1YmM3TWNfQnNDSThpZ0xBMVJUSjRxeDloYUhZc2R5VnhfZ0RMZi1INVV1dDEzT3FiOHJ5TGFxV0ExcHlvNDdnRXM4aXo1QWw0ZGZ2QlhNa2pweFR5TjdPdWpTZElWYXFsc2lpXzZkRDBhT1N3eWhsby1MWEFiekN4MUktZER5Yi1JcHNmYlZzc0VpMnpkNnlGaGNXc25UdmdLelJzb1dJN0VNVEdVTHdyejlyMmJhaHJWU0NlVkptel84bTN1QUJ6VmxjZGN1TmFDVWllUGpQNnpRbmRtSnE4UnJ2bU5PVW5ja0lhVTA2MkhqT3FxZ0pHcw==\",\"email\":\"felix.cent.merino@hotmail.es\"},\"registry.redhat.io\":{\"auth\":\"NTE4NjU5MTh8dWhjLTFKeFg5NDlETVNWV2FwVGptZ1hPc0pwbDlWSDpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSXhZV0pqWmpjNE1HVmpPR1EwTVdFMVlqaGpNalF3WkRNelkyVTBZVFUwWXlKOS5NendieG43dWRpUFNvbk43ZzVtRjg0cEUyNnliUktIWFJuQWtvX1RFQWRvM1BRWXNCTjRKME11bzB3TmhGdENxY3NmY1I5OUZseTN6MFdqUW9qQXpYVTdvRkQ5OVZrLWNJTGl3RHhmRmRfczloeUFvN3E3aUJxUkdKZHJXdDRidWZRbi1GVk81cG0zbG5GTUlENFMza2JBa3UwaEt0cWFKN3dTcHNGbVg4OWlBcnpuVjFoRTBiR1pfUWlBNnBhSUR0V1lhOVBiWXgzZWRkYWJOZVg2aUU1M2xKYzd6Yk9zRVBQM1pnYkxOZFdsQldWZjhON0pxOEx4b09sakw3ZmdHX3JZV3JJb1ZEZlV4TS1FVVlqU2ZfUUQ5b29Wb20wYi1XMmR5ZDIwZTFvTllCOGttazNwck85bHVQZEtVLVVWbjBjVENCQjVNWnFYdjdlNWlkcWpDeWNWRUhsQ2hVMVJrVWFJMHhnTS1JMlozeFRaX3pVckFGNWdaZmJtN0JBTm1nc3I4NFlTOEcxVDdpRl82Y2ZKVmd0dTZIU0FEbTJqNVhsTVludGVFYy0wTE1adS1uUXVQOGZteEp1YmM3TWNfQnNDSThpZ0xBMVJUSjRxeDloYUhZc2R5VnhfZ0RMZi1INVV1dDEzT3FiOHJ5TGFxV0ExcHlvNDdnRXM4aXo1QWw0ZGZ2QlhNa2pweFR5TjdPdWpTZElWYXFsc2lpXzZkRDBhT1N3eWhsby1MWEFiekN4MUktZER5Yi1JcHNmYlZzc0VpMnpkNnlGaGNXc25UdmdLelJzb1dJN0VNVEdVTHdyejlyMmJhaHJWU0NlVkptel84bTN1QUJ6VmxjZGN1TmFDVWllUGpQNnpRbmRtSnE4UnJ2bU5PVW5ja0lhVTA2MkhqT3FxZ0pHcw==\",\"email\":\"felix.cent.merino@hotmail.es\"}}}"
        },
        "file": {
            "Filename": "install-config.yaml",
            "Data": "YXBpVmVyc2lvbjogdjEKYmFzZURvbWFpbjogc2FuZGJveDE2NjMub3BlbnRsYy5jb20KY29tcHV0ZToKLSBoeXBlcnRocmVhZGluZzogRW5hYmxlZAogIG5hbWU6IHdvcmtlcgogIHBsYXRmb3JtOiB7fQogIHJlcGxpY2FzOiAzCmNvbnRyb2xQbGFuZToKICBoeXBlcnRocmVhZGluZzogRW5hYmxlZAogIG5hbWU6IG1hc3RlcgogIHBsYXRmb3JtOiB7fQogIHJlcGxpY2FzOiAzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3Rlci0zNDNmCm5ldHdvcmtpbmc6CiAgY2x1c3Rlck5ldHdvcms6CiAgLSBjaWRyOiAxMC4xMjguMC4wLzE0CiAgICBob3N0UHJlZml4OiAyMwogIG1hY2hpbmVDSURSOiAxMC4wLjAuMC8xNgogIG5ldHdvcmtUeXBlOiBPcGVuU2hpZnRTRE4KICBzZXJ2aWNlTmV0d29yazoKICAtIDE3Mi4zMC4wLjAvMTYKcGxhdGZvcm06CiAgYXdzOgogICAgcmVnaW9uOiBldS1jZW50cmFsLTEKcHVsbFNlY3JldDogJ3siYXV0aHMiOnsiY2xvdWQub3BlbnNoaWZ0LmNvbSI6eyJhdXRoIjoiYjNCbGJuTm9hV1owTFhKbGJHVmhjMlV0WkdWMksyWmxiR2w0WTJWdWRHVnVaWEpoYldWeWFXNXZNV3A0ZURrME9XUnRjM1ozWVhCMGFtMW5lRzl6YW5Cc09YWm9PazVFUzB4SVNsRlhTMGRPUVVJeE1EVlZSRmRaUjFwV1NUWlVVMEU1TjB4RU1UQkxNa2d3TTAxSFMwbFRTRXROUVRaUlRreGFPVmMzUWxjelExcFJVRm89IiwiZW1haWwiOiJmZWxpeC5jZW50Lm1lcmlub0Bob3RtYWlsLmVzIn0sInF1YXkuaW8iOnsiYXV0aCI6ImIzQmxibk5vYVdaMExYSmxiR1ZoYzJVdFpHVjJLMlpsYkdsNFkyVnVkR1Z1WlhKaGJXVnlhVzV2TVdwNGVEazBPV1J0YzNaM1lYQjBhbTFuZUc5emFuQnNPWFpvT2s1RVMweElTbEZYUzBkT1FVSXhNRFZWUkZkWlIxcFdTVFpVVTBFNU4weEVNVEJMTWtnd00wMUhTMGxUU0V0TlFUWlJUa3hhT1ZjM1FsY3pRMXBSVUZvPSIsImVtYWlsIjoiZmVsaXguY2VudC5tZXJpbm9AaG90bWFpbC5lcyJ9LCJyZWdpc3RyeS5jb25uZWN0LnJlZGhhdC5jb20iOnsiYXV0aCI6Ik5URTROalU1TVRoOGRXaGpMVEZLZUZnNU5EbEVUVk5XVjJGd1ZHcHRaMWhQYzBwd2JEbFdTRHBsZVVwb1lrZGphVTlwU2xOVmVsVjRUV2xLT1M1bGVVcDZaRmRKYVU5cFNYaFpWMHBxV21wak5FMUhWbXBQUjFFd1RWZEZNVmxxYUdwTmFsRjNXa1JOZWxreVZUQlpWRlV3V1hsS09TNU5lbmRpZUc0M2RXUnBVRk52Yms0M1p6VnRSamcwY0VVeU5ubGlVa3RJV0ZKdVFXdHZYMVJGUVdSdk0xQlJXWE5DVGpSS01FMTFiekIzVG1oR2RFTnhZM05tWTFJNU9VWnNlVE42TUZkcVVXOXFRWHBZVlRkdlJrUTVPVlpyTFdOSlRHbDNSSGhtUm1SZmN6bG9lVUZ2TjNFM2FVSnhVa2RLWkhKWGREUmlkV1pSYmkxR1ZrODFjRzB6Ykc1R1RVbEVORk16YTJKQmEzVXdhRXQwY1dGS04zZFRjSE5HYlZnNE9XbEJjbnB1VmpGb1JUQmlSMXBmVVdsQk5uQmhTVVIwVjFsaE9WQmlXWGd6WldSa1lXSk9aVmcyYVVVMU0yeEtZemQ2WWs5elJWQlFNMXBuWWt4T1pGZHNRbGRXWmpoT04wcHhPRXg0YjA5c2FrdzNabWRIWDNKWlYzSkpiMVpFWmxWNFRTMUZWVmxxVTJaZlVVUTViMjlXYjIwd1lpMVhNbVI1WkRJd1pURnZUbGxDT0d0dGF6Tndjazg1YkhWUVpFdFZMVlZXYmpCalZFTkNRalZOV25GWWRqZGxOV2xrY1dwRGVXTldSVWhzUTJoVk1WSnJWV0ZKTUhoblRTMUpNbG96ZUZSYVgzcFZja0ZHTldkYVptSnROMEpCVG0xbmMzSTRORmxUT0VjeFZEZHBSbDgyWTJaS1ZtZDBkVFpJVTBGRWJUSnFOVmhzVFZsdWRHVkZZeTB3VEUxYWRTMXVVWFZRT0dadGVFcDFZbU0zVFdOZlFuTkRTVGhwWjB4Qk1WSlVTalJ4ZURsb1lVaFpjMlI1Vm5oZlowUk1aaTFJTlZWMWRERXpUM0ZpT0hKNVRHRnhWMEV4Y0hsdk5EZG5SWE00YVhvMVFXdzBaR1oyUWxoTmEycHdlRlI1VGpkUGRXcFRaRWxXWVhGc2MybHBYelprUkRCaFQxTjNlV2hzYnkxTVdFRmlla040TVVrdFpFUjVZaTFKY0hObVlsWnpjMFZwTW5wa05ubEdhR05YYzI1VWRtZExlbEp6YjFkSk4wVk5WRWRWVEhkeWVqbHlNbUpoYUhKV1UwTmxWa3B0ZWw4NGJUTjFRVUo2Vm14alpHTjFUbUZEVldsbFVHcFFObnBSYm1SdFNuRTRVbkoyYlU1UFZXNWphMGxoVlRBMk1raHFUM0Z4WjBwSGN3PT0iLCJlbWFpbCI6ImZlbGl4LmNlbnQubWVyaW5vQGhvdG1haWwuZXMifSwicmVnaXN0cnkucmVkaGF0LmlvIjp7ImF1dGgiOiJOVEU0TmpVNU1UaDhkV2hqTFRGS2VGZzVORGxFVFZOV1YyRndWR3B0WjFoUGMwcHdiRGxXU0RwbGVVcG9Za2RqYVU5cFNsTlZlbFY0VFdsS09TNWxlVXA2WkZkSmFVOXBTWGhaVjBwcVdtcGpORTFIVm1wUFIxRXdUVmRGTVZscWFHcE5hbEYzV2tSTmVsa3lWVEJaVkZVd1dYbEtPUzVOZW5kaWVHNDNkV1JwVUZOdmJrNDNaelZ0UmpnMGNFVXlObmxpVWt0SVdGSnVRV3R2WDFSRlFXUnZNMUJSV1hOQ1RqUktNRTExYnpCM1RtaEdkRU54WTNObVkxSTVPVVpzZVRONk1GZHFVVzlxUVhwWVZUZHZSa1E1T1ZackxXTkpUR2wzUkhobVJtUmZjemxvZVVGdk4zRTNhVUp4VWtkS1pISlhkRFJpZFdaUmJpMUdWazgxY0cwemJHNUdUVWxFTkZNemEySkJhM1V3YUV0MGNXRktOM2RUY0hOR2JWZzRPV2xCY25wdVZqRm9SVEJpUjFwZlVXbEJObkJoU1VSMFYxbGhPVkJpV1hnelpXUmtZV0pPWlZnMmFVVTFNMnhLWXpkNllrOXpSVkJRTTFwbllreE9aRmRzUWxkV1pqaE9OMHB4T0V4NGIwOXNha3czWm1kSFgzSlpWM0pKYjFaRVpsVjRUUzFGVlZscVUyWmZVVVE1YjI5V2IyMHdZaTFYTW1SNVpESXdaVEZ2VGxsQ09HdHRhek53Y2s4NWJIVlFaRXRWTFZWV2JqQmpWRU5DUWpWTlduRllkamRsTldsa2NXcERlV05XUlVoc1EyaFZNVkpyVldGSk1IaG5UUzFKTWxvemVGUmFYM3BWY2tGR05XZGFabUp0TjBKQlRtMW5jM0k0TkZsVE9FY3hWRGRwUmw4MlkyWktWbWQwZFRaSVUwRkViVEpxTlZoc1RWbHVkR1ZGWXkwd1RFMWFkUzF1VVhWUU9HWnRlRXAxWW1NM1RXTmZRbk5EU1RocFoweEJNVkpVU2pSeGVEbG9ZVWhaYzJSNVZuaGZaMFJNWmkxSU5WVjFkREV6VDNGaU9ISjVUR0Z4VjBFeGNIbHZORGRuUlhNNGFYbzFRV3cwWkdaMlFsaE5hMnB3ZUZSNVRqZFBkV3BUWkVsV1lYRnNjMmxwWHpaa1JEQmhUMU4zZVdoc2J5MU1XRUZpZWtONE1Va3RaRVI1WWkxSmNITm1ZbFp6YzBWcE1ucGtObmxHYUdOWGMyNVVkbWRMZWxKemIxZEpOMFZOVkVkVlRIZHllamx5TW1KaGFISldVME5sVmtwdGVsODRiVE4xUVVKNlZteGpaR04xVG1GRFZXbGxVR3BRTm5wUmJtUnRTbkU0VW5KMmJVNVBWVzVqYTBsaFZUQTJNa2hxVDNGeFowcEhjdz09IiwiZW1haWwiOiJmZWxpeC5jZW50Lm1lcmlub0Bob3RtYWlsLmVzIn19fScK"
        }
    },
    "*installconfig.PlatformCredsCheck": {},
    "*installconfig.baseDomain": {
        "BaseDomain": "sandbox1663.opentlc.com"
    },
    "*installconfig.clusterName": {
        "ClusterName": "cluster-343f"
    },
    "*installconfig.platform": {
        "aws": {
            "region": "eu-central-1"
        }
    },
    "*installconfig.pullSecret": {
        "PullSecret": "{\"auths\":{\"cloud.openshift.com\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K2ZlbGl4Y2VudGVuZXJhbWVyaW5vMWp4eDk0OWRtc3Z3YXB0am1neG9zanBsOXZoOk5ES0xISlFXS0dOQUIxMDVVRFdZR1pWSTZUU0E5N0xEMTBLMkgwM01HS0lTSEtNQTZRTkxaOVc3QlczQ1pRUFo=\",\"email\":\"felix.cent.merino@hotmail.es\"},\"quay.io\":{\"auth\":\"b3BlbnNoaWZ0LXJlbGVhc2UtZGV2K2ZlbGl4Y2VudGVuZXJhbWVyaW5vMWp4eDk0OWRtc3Z3YXB0am1neG9zanBsOXZoOk5ES0xISlFXS0dOQUIxMDVVRFdZR1pWSTZUU0E5N0xEMTBLMkgwM01HS0lTSEtNQTZRTkxaOVc3QlczQ1pRUFo=\",\"email\":\"felix.cent.merino@hotmail.es\"},\"registry.connect.redhat.com\":{\"auth\":\"NTE4NjU5MTh8dWhjLTFKeFg5NDlETVNWV2FwVGptZ1hPc0pwbDlWSDpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSXhZV0pqWmpjNE1HVmpPR1EwTVdFMVlqaGpNalF3WkRNelkyVTBZVFUwWXlKOS5NendieG43dWRpUFNvbk43ZzVtRjg0cEUyNnliUktIWFJuQWtvX1RFQWRvM1BRWXNCTjRKME11bzB3TmhGdENxY3NmY1I5OUZseTN6MFdqUW9qQXpYVTdvRkQ5OVZrLWNJTGl3RHhmRmRfczloeUFvN3E3aUJxUkdKZHJXdDRidWZRbi1GVk81cG0zbG5GTUlENFMza2JBa3UwaEt0cWFKN3dTcHNGbVg4OWlBcnpuVjFoRTBiR1pfUWlBNnBhSUR0V1lhOVBiWXgzZWRkYWJOZVg2aUU1M2xKYzd6Yk9zRVBQM1pnYkxOZFdsQldWZjhON0pxOEx4b09sakw3ZmdHX3JZV3JJb1ZEZlV4TS1FVVlqU2ZfUUQ5b29Wb20wYi1XMmR5ZDIwZTFvTllCOGttazNwck85bHVQZEtVLVVWbjBjVENCQjVNWnFYdjdlNWlkcWpDeWNWRUhsQ2hVMVJrVWFJMHhnTS1JMlozeFRaX3pVckFGNWdaZmJtN0JBTm1nc3I4NFlTOEcxVDdpRl82Y2ZKVmd0dTZIU0FEbTJqNVhsTVludGVFYy0wTE1adS1uUXVQOGZteEp1YmM3TWNfQnNDSThpZ0xBMVJUSjRxeDloYUhZc2R5VnhfZ0RMZi1INVV1dDEzT3FiOHJ5TGFxV0ExcHlvNDdnRXM4aXo1QWw0ZGZ2QlhNa2pweFR5TjdPdWpTZElWYXFsc2lpXzZkRDBhT1N3eWhsby1MWEFiekN4MUktZER5Yi1JcHNmYlZzc0VpMnpkNnlGaGNXc25UdmdLelJzb1dJN0VNVEdVTHdyejlyMmJhaHJWU0NlVkptel84bTN1QUJ6VmxjZGN1TmFDVWllUGpQNnpRbmRtSnE4UnJ2bU5PVW5ja0lhVTA2MkhqT3FxZ0pHcw==\",\"email\":\"felix.cent.merino@hotmail.es\"},\"registry.redhat.io\":{\"auth\":\"NTE4NjU5MTh8dWhjLTFKeFg5NDlETVNWV2FwVGptZ1hPc0pwbDlWSDpleUpoYkdjaU9pSlNVelV4TWlKOS5leUp6ZFdJaU9pSXhZV0pqWmpjNE1HVmpPR1EwTVdFMVlqaGpNalF3WkRNelkyVTBZVFUwWXlKOS5NendieG43dWRpUFNvbk43ZzVtRjg0cEUyNnliUktIWFJuQWtvX1RFQWRvM1BRWXNCTjRKME11bzB3TmhGdENxY3NmY1I5OUZseTN6MFdqUW9qQXpYVTdvRkQ5OVZrLWNJTGl3RHhmRmRfczloeUFvN3E3aUJxUkdKZHJXdDRidWZRbi1GVk81cG0zbG5GTUlENFMza2JBa3UwaEt0cWFKN3dTcHNGbVg4OWlBcnpuVjFoRTBiR1pfUWlBNnBhSUR0V1lhOVBiWXgzZWRkYWJOZVg2aUU1M2xKYzd6Yk9zRVBQM1pnYkxOZFdsQldWZjhON0pxOEx4b09sakw3ZmdHX3JZV3JJb1ZEZlV4TS1FVVlqU2ZfUUQ5b29Wb20wYi1XMmR5ZDIwZTFvTllCOGttazNwck85bHVQZEtVLVVWbjBjVENCQjVNWnFYdjdlNWlkcWpDeWNWRUhsQ2hVMVJrVWFJMHhnTS1JMlozeFRaX3pVckFGNWdaZmJtN0JBTm1nc3I4NFlTOEcxVDdpRl82Y2ZKVmd0dTZIU0FEbTJqNVhsTVludGVFYy0wTE1adS1uUXVQOGZteEp1YmM3TWNfQnNDSThpZ0xBMVJUSjRxeDloYUhZc2R5VnhfZ0RMZi1INVV1dDEzT3FiOHJ5TGFxV0ExcHlvNDdnRXM4aXo1QWw0ZGZ2QlhNa2pweFR5TjdPdWpTZElWYXFsc2lpXzZkRDBhT1N3eWhsby1MWEFiekN4MUktZER5Yi1JcHNmYlZzc0VpMnpkNnlGaGNXc25UdmdLelJzb1dJN0VNVEdVTHdyejlyMmJhaHJWU0NlVkptel84bTN1QUJ6VmxjZGN1TmFDVWllUGpQNnpRbmRtSnE4UnJ2bU5PVW5ja0lhVTA2MkhqT3FxZ0pHcw==\",\"email\":\"felix.cent.merino@hotmail.es\"}}}"
    },
    "*installconfig.sshPublicKey": {
        "Key": ""
    },
    "*kubeconfig.AdminClient": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "cluster-343f",
                    "cluster": {
                        "server": "https://api.cluster-343f.sandbox1663.opentlc.com:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSWFEQ2dJL2dST3Jzd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1Ua3hNakE1TVRBMU5UVTNXaGNOTWpreE1qQTJNVEExTlRVM1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUpydU9mZzkrc2xiMTBld0hGVzFVa3RteGFVWTMxclcKUzl1NXZRN21IY0xPaHRzWFB5SWk5cUVtZDFReSt3ZmdFR3BSbkNoZjNSR0s1UDF0ZzRZejdmSTFhSlZlaUYrVwowTll0bFU4TUxuNURXK2VWc0o3eHBWTnZWU3FVMUFqUlNRWWpDRS9ybTNsYkF6a2U4RTVHNWxsQkdqdnFVdXJhCjVraG1abVVKOUo1d2NsNGJIVFV6VzczOVBzVFVQb3ZMV1kzVkIvMWI3dlNrWkJob1dPOHVZdTFMQklLVEJ0MGoKMXRaeXdRbEtMU0NGRlZUd09MclFrNG14QlhqWHJVTDFMVmxKY3Q3cG9TUFVvbkMxakVQUXB3WFhTSTFqb0xQWApuaWdBY2tGazZvN3BmTUxFWGVQKzRGak5ucms3blhpQ2xmTGpRN2JGNncza0l6bWQzQTZnWXlNQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCd1oKSHRraUhuMms4L3h4cjlFVExmdFRVd0U4TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCbEtTWkNPZ1JoeEpSNgowSkVrdDgrN0YyTldKS1czOVc1RXpUTUE4a09kOUlRdDFUa0s2cURiWGNzVjBjcEM0YXNabVl1TlRjY0plRkdNCitweWFMVnpNTkNVV3FQcytxSHRQSWxjdUlBc1Y1VUZnQVgyQU9Dd05TQ2c1OXA0QWZUWFZuWTdVY0kyTVdrc08KNU12M05MTGZET2F5VURiT3NjcWN4WlU5N0hYbFJPYXVxTjFnZjg0dUk0R2ZXYkFBSUJ0RndFSHBsbnlQb2JqRgpJUUY5TDU1OVV1WEk5NGhLOUNURVpJQ2F6bGxIZkZhaTZCK2llZUZnYVhBOG53Q3BPMXBiTit1VGJCSkRjTkZQClZscjhlZ0VmUTBVMCtSc1ZmUlNoTnBjNEZMTnhLeWxXQjd5OHJPakU4eHZmQmoxVGtnRFlUN1BidXhQVUtXbnEKUy9ibWlCKzAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "admin",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJVm9ib0luOElXV2d3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB4T1RFeU1Ea3hNRFUxTlRaYUZ3MHlPVEV5TURZeE1EVTFOVGRhTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURkc2xiZmw2UHpKL0xRb0tZV2lJeUFSVlBBNUErSjBqS2M2a0orQXl4cwpzbmg0MzR3RG1OTFF3SHdZM1oxeERwWFQ2QmpVdEdzYW1GdzJwY3Rla1dRZ1ZuYWtXSDlBVWVPUFRNSHdZTjVCCm5mclNvNW5ZV1p0Y0hqVEF6Yys3WktUcnl2MXFEcnNzbXNuRHVwdHVMTDlIa2d4QUF4b1FHRDkxTEdZYUY2R00KRjlHNURLaXlwZmo4djlFOGd1WWxXWW9vaUxkL1ltVmRNeHo2M2syM1Y0Sno3UnJ0Rm1pRnlEV3FiNUtCVW5hcgpiaVJ0aGdBS3VUUkdMYWIvdE9oTXNRMXlIYUpLZVlNTHExZDhsT1VLSm5PbGdoUVFobUpVNTQ2cFFBK2hxUHJYCjZCZkR4dDVMcVRzS1k2aW4wcG5KQWJpTGw0RnpHZFZkcjdvQzMvQjlKc2ZMQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVzRWRDOUlCQng1cmZ2c05WQUpyZWVMMWVwcDR3SHdZRFZSMGpCQmd3CkZvQVVzRWRDOUlCQng1cmZ2c05WQUpyZWVMMWVwcDR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUdlR2srYjcKZFRWeXovTFc3WWxlM0xpVjF6S0ZVT2J5dWMvWUlTNExnMHVKSjhLaDhZMHU1NDRDZ3U4amduaUZTY0RNQi9Bawp6WUxJcHQ1YVdBWFd4NzduRmFZZnFxQWJNT3hJYWNxSTJKN0w3b1E5VG1qQllQMmp2dHNYV1dJbzNScG02a0RWCjBnUlRzOWF0L3JlcjdxQlhPY2MzVitac3VZU0wvT25XeE5ZTTdoTWlSTG54aFBBa2hqN3RBWmxhRzdxZ0YyelkKRDdxdVphZmpiMWt3NnMzeXc2UlBIUjJGSk9RWVBtU1VOS0tXUEt5RkdpQUM3WGRDcHlDczU2RVlyUEw2WmQrcwpIWjcwN0FNbS9mZGx2L1RTTWpBRHFoRGI2eHVlV3Y3QldIR0tiS3pwVjZTT0pSejYweGFSTFAvOXEyWTUzZUNHCmYrUUZXTmpFOU9RcVliMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM2JKVzM1ZWo4eWZ5MEtDbUZvaU1nRVZUd09RUGlkSXluT3BDZmdNc2JMSjRlTitNCkE1alMwTUI4R04yZGNRNlYwK2dZMUxSckdwaGNOcVhMWHBGa0lGWjJwRmgvUUZIamowekI4R0RlUVozNjBxT1oKMkZtYlhCNDB3TTNQdTJTazY4cjlhZzY3TEpySnc3cWJiaXkvUjVJTVFBTWFFQmcvZFN4bUdoZWhqQmZSdVF5bwpzcVg0L0wvUlBJTG1KVm1LS0lpM2YySmxYVE1jK3Q1TnQxZUNjKzBhN1Jab2hjZzFxbStTZ1ZKMnEyNGtiWVlBCkNyazBSaTJtLzdUb1RMRU5jaDJpU25tREM2dFhmSlRsQ2laenBZSVVFSVppVk9lT3FVQVBvYWo2MStnWHc4YmUKUzZrN0NtT29wOUtaeVFHNGk1ZUJjeG5WWGErNkF0L3dmU2JIeXdJREFRQUJBb0lCQUc4WnI1V1B2ZGJlWHo0VQpOQWU0MkloenRieEZ6aytvS2pzZTNzR2R2NGFkamVndFIxS0tKS1Ard25JSHBaNEJ6QzRNODF5dEtidURQVHNaCnJTZ3dQbmhDUEdTeUFOdHY3bFZqQnhINnlZY2lyNDhkODd4TGM2TWZkQnBuU2NKRWRxMi81VzFnQW9jZzd4b0sKaTFnVVRxdUVVbVZGNktyR0xBOEJlQTE5YURUMno1R3hvTXBaUUM0M2V0U1Vmb0p2a1l1REpFTENFSHI1YXpLOQp3WVR0UC8yem9ycHg4TDRBV0x4Y1psSTFEaERXcTBydWhZV3lxTnEzUit1ODZLckZPVkg2cFFTaDF0V1hMQmN4Cm5KL01teTNEaVJuQVJmQ2xRSUdXenhROEUrQm9GMWlHY2V4aHg3dmFZZ0dUMTRNbFQ1NHZzdGEwanM1amZndzcKdDZkcW1CRUNnWUVBL3FKN1Jydi8yYVk5RDJQbXhMNEk5dEI2MFNxU1JTVk11TFR0MktrZFZkV0ZUQW5BODN5agpXVENsdUgxb0NHMDZBUUR5RzJkSFhWeThhdTRCeGY2bXc3enI5TDZXR0k3ZUU1UHNsZnVLcGYyaGJWS3VhRzZ0ClVmUWhQdEx2dzdHY3pQdEZuZnErZDIrNVRlNXVkc0h4b01ZN2Y3Ny84UUdnUEtkTDBXSGFnSU1DZ1lFQTN1S2wKYVVKcnBJdUdYNklKZFNwZ0lFVlJnU3hKT01sdFV0M1JqcVBlOUR1S2U3WG92RjEzUnJZZ09ncHYyNFJqaTJKMgpNU0l2TnRoNjV5RnVRZG95WWdpSTZtK29Qam5nZDB2UXpiR1YyVEJoUGFyV1hYWU5sSkgweWhpUm9oNmwxam1SCmEvR3pKZlhFdll1UlNtUUYraXUxWjBYSHZYano5cDBVTmtkejZSa0NnWUJocHBRYUswelIvaE9hakZoYWlQcE4KRk9TVXhIdTFzcms2ZUlCaVAzQzFreDM4YkIwb0ExdHRmOTk5NGZIOGtVN1dSYk9UV01jZ2djanNSUHcvSHdwNwpORDlVNjZZS0l2ZjlrQlFCN0taZVErY2RVc0Q1NGIvc0Z2Q005RDNvMFh0dGpNdEU2MzBSdHJIY3RoeDh4S0hTClkxTThDVmFENlhpMjZmMkVmYjlhMndLQmdRQ3Jld2owZ1F1OFh6U1ZJMS9QYXpqbDJ5OG9DT0NVOWpSTVN5bE4KYXpyQUFZYzhRdXE2OGRZdzZ6TEVOUDkyanRiZmlIT1N2ZEJCakRDUzN4K3JQcXNBemJ3NVVvckl4Vkt6dGZzQwpKcDA1cW9WR0lzZ214QXNTd1hEcWhCaVgrS2h5dDN2dzV0YUVZQ0JzREpOTi9zS3loU3BlT0V2Q3RPcE9WUEFXCkNzZGRFUUtCZ0ROeHlveFAvRmtobFo3c1YyZ203Z3RUNzdhU0xub0phcFNKbEV5eG01dk0yWVZiaUVaS1BiZ08KS0tuRGpFaUFkRWszbDlRc1psdHpjNi9rV3poS2hTRkx3eGRrMU81bjlkaUNhWm9IcE11Z1pJZEZyUGxUM0IrZwpRL0dCWjU2cHRXNWVsV215ZEp0M284Zlp6TTYzSkhDSUFxeDZsK1NVTWl0SnZUUDJDSyt2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "admin",
                    "context": {
                        "cluster": "cluster-343f",
                        "user": "admin"
                    }
                }
            ],
            "current-context": "admin"
        },
        "File": {
            "Filename": "auth/kubeconfig",
            "Data": ""
        }
    },
    "*kubeconfig.Kubelet": {
        "Config": {
            "preferences": {},
            "clusters": [
                {
                    "name": "cluster-343f",
                    "cluster": {
                        "server": "https://api-int.cluster-343f.sandbox1663.opentlc.com:6443",
                        "certificate-authority-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSWFEQ2dJL2dST3Jzd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1Ua3hNakE1TVRBMU5UVTNXaGNOTWpreE1qQTJNVEExTlRVM1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUpydU9mZzkrc2xiMTBld0hGVzFVa3RteGFVWTMxclcKUzl1NXZRN21IY0xPaHRzWFB5SWk5cUVtZDFReSt3ZmdFR3BSbkNoZjNSR0s1UDF0ZzRZejdmSTFhSlZlaUYrVwowTll0bFU4TUxuNURXK2VWc0o3eHBWTnZWU3FVMUFqUlNRWWpDRS9ybTNsYkF6a2U4RTVHNWxsQkdqdnFVdXJhCjVraG1abVVKOUo1d2NsNGJIVFV6VzczOVBzVFVQb3ZMV1kzVkIvMWI3dlNrWkJob1dPOHVZdTFMQklLVEJ0MGoKMXRaeXdRbEtMU0NGRlZUd09MclFrNG14QlhqWHJVTDFMVmxKY3Q3cG9TUFVvbkMxakVQUXB3WFhTSTFqb0xQWApuaWdBY2tGazZvN3BmTUxFWGVQKzRGak5ucms3blhpQ2xmTGpRN2JGNncza0l6bWQzQTZnWXlNQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCd1oKSHRraUhuMms4L3h4cjlFVExmdFRVd0U4TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCbEtTWkNPZ1JoeEpSNgowSkVrdDgrN0YyTldKS1czOVc1RXpUTUE4a09kOUlRdDFUa0s2cURiWGNzVjBjcEM0YXNabVl1TlRjY0plRkdNCitweWFMVnpNTkNVV3FQcytxSHRQSWxjdUlBc1Y1VUZnQVgyQU9Dd05TQ2c1OXA0QWZUWFZuWTdVY0kyTVdrc08KNU12M05MTGZET2F5VURiT3NjcWN4WlU5N0hYbFJPYXVxTjFnZjg0dUk0R2ZXYkFBSUJ0RndFSHBsbnlQb2JqRgpJUUY5TDU1OVV1WEk5NGhLOUNURVpJQ2F6bGxIZkZhaTZCK2llZUZnYVhBOG53Q3BPMXBiTit1VGJCSkRjTkZQClZscjhlZ0VmUTBVMCtSc1ZmUlNoTnBjNEZMTnhLeWxXQjd5OHJPakU4eHZmQmoxVGtnRFlUN1BidXhQVUtXbnEKUy9ibWlCKzAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
                    }
                }
            ],
            "users": [
                {
                    "name": "kubelet",
                    "user": {
                        "client-certificate-data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQwVENDQXJtZ0F3SUJBZ0lJV1lVOElFRHpaU0V3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMU5UaGFGdzB4T1RFeU1UQXhNRFUxTlRoYU1JR1hNVUV3ClB3WURWUVFLRXpoemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpPbTl3Wlc1emFHbG1kQzF0WVdOb2FXNWwKTFdOdmJtWnBaeTF2Y0dWeVlYUnZjakZTTUZBR0ExVUVBeE5KYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1MApPbTl3Wlc1emFHbG1kQzF0WVdOb2FXNWxMV052Ym1acFp5MXZjR1Z5WVhSdmNqcHViMlJsTFdKdmIzUnpkSEpoCmNIQmxjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNVVBNQ0JBWHVrTjNGa3kKVXBzaGJQbzlmeUs5akI0TERLdlZxODlNdTgzTi9sTnl0RWpBcEl4NmJhZWY3cU1QMnVrck5oN2U2dTZrSmRzNwpyai8rRnlHNmZYTDI5bFVwdWw4TWhOUTdQR29rSHFLR1FJeTk5VXc4M1VwZ0JEc1NVY3ZERHREMEgrbXFncENXCmJaak85WE5LYTNSQkY3UXJMWlVLSCtCajloTmQvSldSaVl5S2JSTHVhTFUyUVNwN3ZqdmRnUW1NV3hJNU4rNlQKNllKa0lRMzhhVVcxVlRzM2p4eitmUXZvNlJUQk1vcUZsTkhMNjFibno4K1d0bWFJbnlDalJ1ZDdoaVBIT2FWKwpDNHlxTHNCSnRZQWt2V1YrMFdhd2VzNm8yZnBmQUF0Yy9xVG5NTUcwZ2lpd2Z1SisyU3Q1WVNVY1llOVcrcVpZCmhzbmUyVWtDQXdFQUFhTjFNSE13RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUYKQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRklnOEwycUZmY09Jb2xPL2JtNnFXMTB5UEhhbApNQjhHQTFVZEl3UVlNQmFBRklnOEwycUZmY09Jb2xPL2JtNnFXMTB5UEhhbE1BMEdDU3FHU0liM0RRRUJDd1VBCkE0SUJBUUFPbWNuVjJ3aUlreHlXN3kra0pZUGhMQkZCUTRkaUJURHJPRklmYWJtbUx2YmkzdVV3VkNZNXIyeEQKOXcySDliZ05tL3dsbFJjell5YXMxSXdQRWYwTTNmaVlkRDc0QklEYVhnT1hjZVFta3QwSEhvTW9KU0NzTjF1NgpjMU5VSnBVVFFoK21GUkJzcHFmM0tJNHBRZlZBaWpzNCtFYk82RTBqR3Y1QXFRRlROWHhRMllYaEdwT3RwL0J0CjBjVHZpMU9LQ2NDRHBiK0pIcUpMRUtxUGE4bkFZWnA3b3ZwNVM4T3JpaVk4MTNFd2g4dXhBUGZHL2J0SzZNVnMKT0FtTUNMRzU5L1RHNnJoZjM3L3lSNVVFMEpNSjRkZ3JrejVjMlRNQ2JRTlNIVGNUdGorQ0tPRTUyQjNKRGhTRQo3M3BMR0xaZGdseWtVSit4Q0g0OHNYNE1wT3ViCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
                        "client-key-data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFE4d0lFQmU2UTNjV1RKU215RnMrajEvSXIyTUhnc01xOVdyejB5N3pjMytVM0swClNNQ2tqSHB0cDUvdW93L2E2U3MySHQ3cTdxUWwyenV1UC80WElicDljdmIyVlNtNlh3eUUxRHM4YWlRZW9vWkEKakwzMVREemRTbUFFT3hKUnk4TU8wUFFmNmFxQ2tKWnRtTTcxYzBwcmRFRVh0Q3N0bFFvZjRHUDJFMTM4bFpHSgpqSXB0RXU1b3RUWkJLbnUrTzkyQkNZeGJFamszN3BQcGdtUWhEZnhwUmJWVk96ZVBIUDU5QytqcEZNRXlpb1dVCjBjdnJWdWZQejVhMlpvaWZJS05HNTN1R0k4YzVwWDRMaktvdXdFbTFnQ1M5Wlg3UlpyQjZ6cWpaK2w4QUMxeisKcE9jd3diU0NLTEIrNG43WkszbGhKUnhoNzFiNnBsaUd5ZDdaU1FJREFRQUJBb0lCQVFDTFRRbEFRMERVanEvTgpmZjFYSEhIbEU4UGowd3BSMG8zS2l1bEJTWVVaSHgxQjhEdnhrZnpBTVd1Q3ExUU9nUTdHOVh6MHBiQjlzaHZ3CnRtZWZaUWNGR01mRmxUN2RSUG95WnE4Zk9DQ2xCNU9BWUZjUkp0ZFlaVTRwWFdhZ08zc0hCNFJad2JrdGZSTi8KRWxlM1JkWE5BamFqbjhBWjVNdjhKNFFSSTVpNFp1QUFWV3dwRktXODlPaEVYQ1dVVEVHcmIzQmhpSzFaNjhCaQpzK1Q4MkxTdXJaQ0NtUEVha1dRSEV3cWl4QytYRWRlRU1HMWtZSm01T3NGRHc1ODZaRDZHVmhIcWdyNS9aOFgrCllvUjdtNVNHcks4WUdCbzFRR1cwUnBoaDJFVU8zL3FnQldscENYbys3NGNzQnFrblpEK2Y1K0VZZ1RKWUp4QVkKT0dRZitSK0JBb0dCQU1Vd0VhNWxlN2dpaitWaGtTMkNLVkgxSUNtM09jRjZjczdiWHJwOGR6Qk0rWHJxTkpMagpvbWRrMVlnL0pmNDNOWkd4RE9qK2lLT2pJSHkySi9lYzlsVTRuTFhSU0ZJWlg5OFpQZm9RNi9OQXpTWnNLUGZECkxlVS8rV0FIQWpUYll0SWR4MzZuczRUMFducHF1UG82ZFNsQXNxTEM3RVJLWU0xbWxQNUxMblFOQW9HQkFQL1YKVDkzOWRHTnB5amNtNGlqVWVXRlFsMjlkVXdFRmsvVkRNVUJDZFAvcmtlWkVTVmtSSmRuVExPR1ZCZ0tLeUd1TQpIRG9DMXhLd1F2VGI5V0crWGpWV0I4SkpEbFJYL3VoMkF2V0MwTmUySG4vdTJyeXN2QVMvbWhSU3crcHhESHU3ClJ0bEFLS1ZCM3NyN2p2dys3ZGV1RldHdUtwTUJXSEpOdXZveEtuOHRBb0dCQUpxY09DRGYzWVBoUmFaN085UE0KN1EwZ0FCbjFXa25EOHVVU3lGRzhhYy9yYXVuZlhWMlhNcTJUT0lKZDBUSmtvNUlhbXA3TmhPR1pkRTJVbmYzZQppcDhEaG94aERpMmhTN1NvSEJwSXpsaXJCTEFOdW9tWjloQjhldEc2YlJaNHRpRTl6RUFZeWYrRGdMWGZuQzVIClM3b095b0lvQ0F6N3JLOGdzYzQ1c0xDNUFvR0FMY1V2RmNzN29IR1QwUXd1MkJrellocTJEU0dJTVIyYlcvemEKZWVHcDV3TnhSZDRmdFVTaEhmaHZCaWpRTzNJeTZ6TFU5ZmYrSElUV1pkSlljMVZJcTRncHVUT3kwWm93cTh3NQpPVTFmS2NpV2FsTUVaVThPRUZkckxJbW1MWEp1UmxDNkd6SWtVM1NXZElCUEU0ZjZxMlNreEtZUlRkMm13a1J2CjJFVWxrajBDZ1lCUDdwdVFPS0t0K0JNendMd3M2bVhDOWxBdG5nQ2dFNWhwWHpoR2JZeW1VazNlQ0YxaWYzUmsKc25NRlFqeU5lRjBzeWNnSC9CYmpmMkZUVWNYQVpPRGt2Wllnb1dyWnYzWElyODFIQjFHNzBYRlRONlZWY2VMegpSeEI2cDVOMzF3RU1KOC8wMGs4cFVrZjREWTFhOVlSUnplK0FZMFNDcDdOUzEvWmwyM3BPaEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
                    }
                }
            ],
            "contexts": [
                {
                    "name": "kubelet",
                    "context": {
                        "cluster": "cluster-343f",
                        "user": "kubelet"
                    }
                }
            ],
            "current-context": "kubelet"
        },
        "File": {
            "Filename": "auth/kubeconfig-kubelet",
            "Data": ""
        }
    },
    "*machine.Master": {
        "Config": {
            "ignition": {
                "config": {
                    "append": [
                        {
                            "source": "https://api-int.cluster-343f.sandbox1663.opentlc.com:22623/config/master",
                            "verification": {}
                        }
                    ]
                },
                "security": {
                    "tls": {
                        "certificateAuthorities": [
                            {
                                "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJU3VKUFBLNC96Lzh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU1TVRJd09URXdOVFUxT0ZvWApEVEk1TVRJd05qRXdOVFUxT0Zvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0Q1dWQysrQ3VHb0gKRGFOcVEyUVhlZ01GUmlCZjlYc3V6T3lyTFNJOEZyKzVFMW51cEV6SnZZNDg2dEpYTTZuQWkrajVtWjUwMENkZgpDMmtmQU1Vc2h6NFZZNXZYUGxvcWh4VkRtWkhyU3pzVk5MNFVPV25GdUNwZGZMb3ZoODF0c1Q5V0txQTFhMlY1Cm1jV0FiNFltcGlJSmZSaFk3TVBhVDcyS3pnakFtR0JSV3FYQktlaTdBTXFHRnRJTjQ4eTZhU3ExbFBhTU53cnoKR3EzOWFCdFM2aW1mNGlnd0hxMXE1QmpwSW45Qi81c0tHaFNXeUxrQXRldll6UjhzQUFkcGdnMjRsWnlsUm5xOQpqWDJCdndodldsMzRBK3dsWnZqL2Jrak94SmFaSUZjKzQyWk1lK1VTMmFKcU5oUGNCdklyQU4rSjdPcmFteVcxCjcvTVFmZjhVZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVFTTERnU0NDQ2xsTlVuZlpCeHQydFAzTUtkZ3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdpK2d0NGRXUlJBZVJNd3hlVzdCWUJ2aEhEb3NsZzBGcmV5K2pubENHN1JDTy9OWXM0TStvdFYzZWxVCjBjL3FLeDVjWUZHTDFtVGFhUDFmemlHdGdNamlnZVljL3NiN01ISCtDa3Z5OHNmMi9OdmJna040RUtodDhUTWIKN2tRWVJuTFFPQmYwTmZqNWpyZEdYVUthTk5zeHUzM1FsMmw3N3F2elkzMkswTG11SEMreWUvUXdKb2R1STdoUwpjZnYyOGs1clZKa2NKMCtLN0graUc1bHJmWVdTUmNyT2c5RXAwbi9CU1h1ejZMb2RuczZZY2Zxanhnc3Nra012Ck5hT1BIRUVYRzc2RUc3UGt1dEx1WDRJeTV3N2wvUzBvSng5ekgxNkFIbzVSY3JvQStzVzdINnBzbS9rMkg3b2MKZDFFQkZ6SVdCWUhPZXZlRUFSeXVhNXNJYmJ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                "verification": {}
                            }
                        ]
                    }
                },
                "timeouts": {},
                "version": "2.2.0"
            },
            "networkd": {},
            "passwd": {},
            "storage": {},
            "systemd": {}
        },
        "File": {
            "Filename": "master.ign",
            "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQuY2x1c3Rlci0zNDNmLnNhbmRib3gxNjYzLm9wZW50bGMuY29tOjIyNjIzL2NvbmZpZy9tYXN0ZXIiLCJ2ZXJpZmljYXRpb24iOnt9fV19LCJzZWN1cml0eSI6eyJ0bHMiOnsiY2VydGlmaWNhdGVBdXRob3JpdGllcyI6W3sic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJGUkVORFFXWnBaMEYzU1VKQlowbEpVM1ZLVUZCTE5DOTZMemgzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS2FrVlRUVUpCUjBFeFZVVUtRM2hOU21JelFteGliazV2WVZkYU1FMVNRWGRFWjFsRVZsRlJSRVYzWkhsaU1qa3dURmRPYUUxQ05GaEVWRVUxVFZSSmQwOVVSWGRPVkZVeFQwWnZXQXBFVkVrMVRWUkpkMDVxUlhkT1ZGVXhUMFp2ZDBwcVJWTk5Ra0ZIUVRGVlJVTjRUVXBpTTBKc1ltNU9iMkZYV2pCTlVrRjNSR2RaUkZaUlVVUkZkMlI1Q21JeU9UQk1WMDVvVFVsSlFrbHFRVTVDWjJ0eGFHdHBSemwzTUVKQlVVVkdRVUZQUTBGUk9FRk5TVWxDUTJkTFEwRlJSVUUwUTFkV1F5c3JRM1ZIYjBnS1JHRk9jVkV5VVZobFowMUdVbWxDWmpsWWMzVjZUM2x5VEZOSk9FWnlLelZGTVc1MWNFVjZTblpaTkRnMmRFcFlUVFp1UVdrcmFqVnRXalV3TUVOa1pncERNbXRtUVUxVmMyaDZORlpaTlhaWVVHeHZjV2g0VmtSdFdraHlVM3B6Vms1TU5GVlBWMjVHZFVOd1pHWk1iM1pvT0RGMGMxUTVWMHR4UVRGaE1sWTFDbTFqVjBGaU5GbHRjR2xKU21aU2FGazNUVkJoVkRjeVMzcG5ha0Z0UjBKU1YzRllRa3RsYVRkQlRYRkhSblJKVGpRNGVUWmhVM0V4YkZCaFRVNTNjbm9LUjNFek9XRkNkRk0yYVcxbU5HbG5kMGh4TVhFMVFtcHdTVzQ1UWk4MWMwdEhhRk5YZVV4clFYUmxkbGw2VWpoelFVRmtjR2RuTWpSc1dubHNVbTV4T1FwcVdESkNkbmRvZGxkc016UkJLM2RzV25acUwySnJhazk0U21GYVNVWmpLelF5V2sxbEsxVlRNbUZLY1U1b1VHTkNka2x5UVU0clNqZFBjbUZ0ZVZjeENqY3ZUVkZtWmpoVlozZEpSRUZSUVVKdk1FbDNVVVJCVDBKblRsWklVVGhDUVdZNFJVSkJUVU5CY1ZGM1JIZFpSRlpTTUZSQlVVZ3ZRa0ZWZDBGM1JVSUtMM3BCWkVKblRsWklVVFJGUm1kUlZWRlRURVJuVTBORFEyeHNUbFZ1WmxwQ2VIUXlkRkF6VFV0a1ozZEVVVmxLUzI5YVNXaDJZMDVCVVVWTVFsRkJSQXBuWjBWQ1FVZHBLMmQwTkdSWFVsSkJaVkpOZDNobFZ6ZENXVUoyYUVoRWIzTnNaekJHY21WNUsycHViRU5ITjFKRFR5OU9XWE0wVFN0dmRGWXpaV3hWQ2pCakwzRkxlRFZqV1VaSFRERnRWR0ZoVURGbWVtbEhkR2ROYW1sblpWbGpMM05pTjAxSVNDdERhM1o1T0hObU1pOU9kbUpuYTA0MFJVdG9kRGhVVFdJS04ydFJXVkp1VEZGUFFtWXdUbVpxTldweVpFZFlWVXRoVGs1emVIVXpNMUZzTW13M04zRjJlbGt6TWtzd1RHMTFTRU1yZVdVdlVYZEtiMlIxU1Rkb1V3cGpabll5T0dzMWNsWkthMk5LTUN0TE4wZ3JhVWMxYkhKbVdWZFRVbU55VDJjNVJYQXdiaTlDVTFoMWVqWk1iMlJ1Y3paWlkyWnhhbmhuYzNOcmEwMTJDazVoVDFCSVJVVllSemMyUlVjM1VHdDFkRXgxV0RSSmVUVjNOMnd2VXpCdlNuZzVla2d4TmtGSWJ6VlNZM0p2UVN0elZ6ZElObkJ6YlM5ck1rZzNiMk1LWkRGRlFrWjZTVmRDV1VoUFpYWmxSVUZTZVhWaE5YTkpZbUozUFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PSIsInZlcmlmaWNhdGlvbiI6e319XX19LCJ0aW1lb3V0cyI6e30sInZlcnNpb24iOiIyLjIuMCJ9LCJuZXR3b3JrZCI6e30sInBhc3N3ZCI6e30sInN0b3JhZ2UiOnt9LCJzeXN0ZW1kIjp7fX0="
        }
    },
    "*machine.Worker": {
        "Config": {
            "ignition": {
                "config": {
                    "append": [
                        {
                            "source": "https://api-int.cluster-343f.sandbox1663.opentlc.com:22623/config/worker",
                            "verification": {}
                        }
                    ]
                },
                "security": {
                    "tls": {
                        "certificateAuthorities": [
                            {
                                "source": "data:text/plain;charset=utf-8;base64,LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJU3VKUFBLNC96Lzh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU1TVRJd09URXdOVFUxT0ZvWApEVEk1TVRJd05qRXdOVFUxT0Zvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0Q1dWQysrQ3VHb0gKRGFOcVEyUVhlZ01GUmlCZjlYc3V6T3lyTFNJOEZyKzVFMW51cEV6SnZZNDg2dEpYTTZuQWkrajVtWjUwMENkZgpDMmtmQU1Vc2h6NFZZNXZYUGxvcWh4VkRtWkhyU3pzVk5MNFVPV25GdUNwZGZMb3ZoODF0c1Q5V0txQTFhMlY1Cm1jV0FiNFltcGlJSmZSaFk3TVBhVDcyS3pnakFtR0JSV3FYQktlaTdBTXFHRnRJTjQ4eTZhU3ExbFBhTU53cnoKR3EzOWFCdFM2aW1mNGlnd0hxMXE1QmpwSW45Qi81c0tHaFNXeUxrQXRldll6UjhzQUFkcGdnMjRsWnlsUm5xOQpqWDJCdndodldsMzRBK3dsWnZqL2Jrak94SmFaSUZjKzQyWk1lK1VTMmFKcU5oUGNCdklyQU4rSjdPcmFteVcxCjcvTVFmZjhVZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVFTTERnU0NDQ2xsTlVuZlpCeHQydFAzTUtkZ3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdpK2d0NGRXUlJBZVJNd3hlVzdCWUJ2aEhEb3NsZzBGcmV5K2pubENHN1JDTy9OWXM0TStvdFYzZWxVCjBjL3FLeDVjWUZHTDFtVGFhUDFmemlHdGdNamlnZVljL3NiN01ISCtDa3Z5OHNmMi9OdmJna040RUtodDhUTWIKN2tRWVJuTFFPQmYwTmZqNWpyZEdYVUthTk5zeHUzM1FsMmw3N3F2elkzMkswTG11SEMreWUvUXdKb2R1STdoUwpjZnYyOGs1clZKa2NKMCtLN0graUc1bHJmWVdTUmNyT2c5RXAwbi9CU1h1ejZMb2RuczZZY2Zxanhnc3Nra012Ck5hT1BIRUVYRzc2RUc3UGt1dEx1WDRJeTV3N2wvUzBvSng5ekgxNkFIbzVSY3JvQStzVzdINnBzbS9rMkg3b2MKZDFFQkZ6SVdCWUhPZXZlRUFSeXVhNXNJYmJ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
                                "verification": {}
                            }
                        ]
                    }
                },
                "timeouts": {},
                "version": "2.2.0"
            },
            "networkd": {},
            "passwd": {},
            "storage": {},
            "systemd": {}
        },
        "File": {
            "Filename": "worker.ign",
            "Data": "eyJpZ25pdGlvbiI6eyJjb25maWciOnsiYXBwZW5kIjpbeyJzb3VyY2UiOiJodHRwczovL2FwaS1pbnQuY2x1c3Rlci0zNDNmLnNhbmRib3gxNjYzLm9wZW50bGMuY29tOjIyNjIzL2NvbmZpZy93b3JrZXIiLCJ2ZXJpZmljYXRpb24iOnt9fV19LCJzZWN1cml0eSI6eyJ0bHMiOnsiY2VydGlmaWNhdGVBdXRob3JpdGllcyI6W3sic291cmNlIjoiZGF0YTp0ZXh0L3BsYWluO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LExTMHRMUzFDUlVkSlRpQkRSVkpVU1VaSlEwRlVSUzB0TFMwdENrMUpTVVJGUkVORFFXWnBaMEYzU1VKQlowbEpVM1ZLVUZCTE5DOTZMemgzUkZGWlNrdHZXa2xvZG1OT1FWRkZURUpSUVhkS2FrVlRUVUpCUjBFeFZVVUtRM2hOU21JelFteGliazV2WVZkYU1FMVNRWGRFWjFsRVZsRlJSRVYzWkhsaU1qa3dURmRPYUUxQ05GaEVWRVUxVFZSSmQwOVVSWGRPVkZVeFQwWnZXQXBFVkVrMVRWUkpkMDVxUlhkT1ZGVXhUMFp2ZDBwcVJWTk5Ra0ZIUVRGVlJVTjRUVXBpTTBKc1ltNU9iMkZYV2pCTlVrRjNSR2RaUkZaUlVVUkZkMlI1Q21JeU9UQk1WMDVvVFVsSlFrbHFRVTVDWjJ0eGFHdHBSemwzTUVKQlVVVkdRVUZQUTBGUk9FRk5TVWxDUTJkTFEwRlJSVUUwUTFkV1F5c3JRM1ZIYjBnS1JHRk9jVkV5VVZobFowMUdVbWxDWmpsWWMzVjZUM2x5VEZOSk9FWnlLelZGTVc1MWNFVjZTblpaTkRnMmRFcFlUVFp1UVdrcmFqVnRXalV3TUVOa1pncERNbXRtUVUxVmMyaDZORlpaTlhaWVVHeHZjV2g0VmtSdFdraHlVM3B6Vms1TU5GVlBWMjVHZFVOd1pHWk1iM1pvT0RGMGMxUTVWMHR4UVRGaE1sWTFDbTFqVjBGaU5GbHRjR2xKU21aU2FGazNUVkJoVkRjeVMzcG5ha0Z0UjBKU1YzRllRa3RsYVRkQlRYRkhSblJKVGpRNGVUWmhVM0V4YkZCaFRVNTNjbm9LUjNFek9XRkNkRk0yYVcxbU5HbG5kMGh4TVhFMVFtcHdTVzQ1UWk4MWMwdEhhRk5YZVV4clFYUmxkbGw2VWpoelFVRmtjR2RuTWpSc1dubHNVbTV4T1FwcVdESkNkbmRvZGxkc016UkJLM2RzV25acUwySnJhazk0U21GYVNVWmpLelF5V2sxbEsxVlRNbUZLY1U1b1VHTkNka2x5UVU0clNqZFBjbUZ0ZVZjeENqY3ZUVkZtWmpoVlozZEpSRUZSUVVKdk1FbDNVVVJCVDBKblRsWklVVGhDUVdZNFJVSkJUVU5CY1ZGM1JIZFpSRlpTTUZSQlVVZ3ZRa0ZWZDBGM1JVSUtMM3BCWkVKblRsWklVVFJGUm1kUlZWRlRURVJuVTBORFEyeHNUbFZ1WmxwQ2VIUXlkRkF6VFV0a1ozZEVVVmxLUzI5YVNXaDJZMDVCVVVWTVFsRkJSQXBuWjBWQ1FVZHBLMmQwTkdSWFVsSkJaVkpOZDNobFZ6ZENXVUoyYUVoRWIzTnNaekJHY21WNUsycHViRU5ITjFKRFR5OU9XWE0wVFN0dmRGWXpaV3hWQ2pCakwzRkxlRFZqV1VaSFRERnRWR0ZoVURGbWVtbEhkR2ROYW1sblpWbGpMM05pTjAxSVNDdERhM1o1T0hObU1pOU9kbUpuYTA0MFJVdG9kRGhVVFdJS04ydFJXVkp1VEZGUFFtWXdUbVpxTldweVpFZFlWVXRoVGs1emVIVXpNMUZzTW13M04zRjJlbGt6TWtzd1RHMTFTRU1yZVdVdlVYZEtiMlIxU1Rkb1V3cGpabll5T0dzMWNsWkthMk5LTUN0TE4wZ3JhVWMxYkhKbVdWZFRVbU55VDJjNVJYQXdiaTlDVTFoMWVqWk1iMlJ1Y3paWlkyWnhhbmhuYzNOcmEwMTJDazVoVDFCSVJVVllSemMyUlVjM1VHdDFkRXgxV0RSSmVUVjNOMnd2VXpCdlNuZzVla2d4TmtGSWJ6VlNZM0p2UVN0elZ6ZElObkJ6YlM5ck1rZzNiMk1LWkRGRlFrWjZTVmRDV1VoUFpYWmxSVUZTZVhWaE5YTkpZbUozUFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PSIsInZlcmlmaWNhdGlvbiI6e319XX19LCJ0aW1lb3V0cyI6e30sInZlcnNpb24iOiIyLjIuMCJ9LCJuZXR3b3JrZCI6e30sInBhc3N3ZCI6e30sInN0b3JhZ2UiOnt9LCJzeXN0ZW1kIjp7fX0="
        }
    },
    "*machines.Master": {
        "UserDataFile": {
            "Filename": "openshift/99_openshift-cluster-api_master-user-data-secret.yaml",
            "Data": "CmtpbmQ6IExpc3QKYXBpVmVyc2lvbjogdjEKbWV0YWRhdGE6CiAgcmVzb3VyY2VWZXJzaW9uOiAiIgogIHNlbGZMaW5rOiAiIgppdGVtczoKLSBhcGlWZXJzaW9uOiB2MQogIGtpbmQ6IFNlY3JldAogIG1ldGFkYXRhOgogICAgbmFtZTogbWFzdGVyLXVzZXItZGF0YQogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKICB0eXBlOiBPcGFxdWUKICBkYXRhOgogICAgZGlzYWJsZVRlbXBsYXRpbmc6ICJkSEoxWlFvPSIKICAgIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaVlYQndaVzVrSWpwYmV5SnpiM1Z5WTJVaU9pSm9kSFJ3Y3pvdkwyRndhUzFwYm5RdVkyeDFjM1JsY2kwek5ETm1Mbk5oYm1SaWIzZ3hOall6TG05d1pXNTBiR011WTI5dE9qSXlOakl6TDJOdmJtWnBaeTl0WVhOMFpYSWlMQ0oyWlhKcFptbGpZWFJwYjI0aU9udDlmVjE5TENKelpXTjFjbWwwZVNJNmV5SjBiSE1pT25zaVkyVnlkR2xtYVdOaGRHVkJkWFJvYjNKcGRHbGxjeUk2VzNzaWMyOTFjbU5sSWpvaVpHRjBZVHAwWlhoMEwzQnNZV2x1TzJOb1lYSnpaWFE5ZFhSbUxUZzdZbUZ6WlRZMExFeFRNSFJNVXpGRFVsVmtTbFJwUWtSU1ZrcFZVMVZhU2xFd1JsVlNVekIwVEZNd2RFTnJNVXBUVlZKR1VrVk9SRkZYV25CYU1FWXpVMVZLUWxvd2JFcFZNMVpMVlVaQ1RFNURPVFpNZW1nelVrWkdXbE5yZEhaWGEyeHZaRzFPVDFGV1JrWlVSVXBTVVZoa1MyRnJWbFJVVlVwQ1VqQkZlRlpWVlV0Uk0yaE9VMjFKZWxGdGVHbGlhelYyV1Zaa1lVMUZNVk5SV0dSRldqRnNSVlpzUmxKU1JWWXpXa2hzYVUxcWEzZFVSbVJQWVVVeFEwNUdhRVZXUlZVeFZGWlNTbVF3T1ZWU1dHUlBWa1pWZUZRd1duWlhRWEJGVmtWck1WUldVa3BrTURWeFVsaGtUMVpHVlhoVU1GcDJaREJ3Y1ZKV1RrNVJhMFpJVVZSR1ZsSlZUalJVVlhCcFRUQktjMWx0TlU5aU1rWllWMnBDVGxWclJqTlNSMlJhVWtaYVVsVlZVa1prTWxJMVEyMUplVTlVUWsxV01EVnZWRlZzU2xGcmJIRlJWVFZEV2pKMGVHRkhkSEJTZW13elRVVktRbFZWVmtkUlZVWlFVVEJHVWs5RlJrNVRWV3hEVVRKa1RGRXdSbEpTVlVVd1VURmtWMUY1YzNKUk0xWklZakJuUzFKSFJrOWpWa1Y1VlZab2JGb3dNVWRWYld4RFdtcHNXV016VmpaVU0yeDVWRVpPU2s5RldubExlbFpHVFZjMU1XTkZWalpUYmxwYVRrUm5NbVJGY0ZsVVZGcDFVVmRyY21GcVZuUlhhbFYzVFVWT2ExcG5jRVJOYlhSdFVWVXhWbU15YURaT1JscGFUbGhhV1ZWSGVIWmpWMmcwVm10U2RGZHJhSGxWTTNCNlZtczFUVTVHVmxCV01qVkhaRlZPZDFwSFdrMWlNMXB2VDBSR01HTXhVVFZXTUhSNFVWUkdhRTFzV1RGRGJURnFWakJHYVU1R2JIUmpSMnhLVTIxYVUyRkdhek5VVmtKb1ZrUmplVk16Y0c1aGEwWjBVakJLVTFZelJsbFJhM1JzWVZSa1FsUllSa2hTYmxKS1ZHcFJOR1ZVV21oVk0wVjRZa1pDYUZSVk5UTmpibTlMVWpORmVrOVhSa05rUmsweVlWY3hiVTVIYkc1a01HaDRUVmhGTVZGdGNIZFRWelExVVdrNE1XTXdkRWhoUms1WVpWVjRjbEZZVW14a2JHdzJWV3BvZWxGVlJtdGpSMlJ1VFdwU2MxZHViSE5WYlRWNFQxRndjVmRFU2tOa2JtUnZaR3hrYzAxNlVrSkxNMlJ6VjI1YWNVd3lTbkpoYXprMFUyMUdZVk5WV21wTGVsRjVWMnN4YkVzeFZsUk5iVVpMWTFVMWIxVkhUa05rYTJ4NVVWVTBjbE5xWkZCamJVWjBaVlpqZUVOcVkzWlVWa1p0V21wb1Zsb3paRXBTUlVaU1VWVktkazFGYkROVlZWSkNWREJLYmxSc1drbFZWR2hEVVZkWk5GSlZTa0pVVlU1Q1kxWkdNMUpJWkZwU1JscFRUVVpTUWxWVlozWlJhMFpXWkRCR00xSlZTVXRNTTNCQ1drVktibFJzV2tsVlZGSkdVbTFrVWxaV1JsUlVSVkp1VlRCT1JGRXllSE5VYkZaMVdteHdRMlZJVVhsa1JrRjZWRlYwYTFvelpFVlZWbXhMVXpJNVlWTlhhREpaTURWQ1ZWVldUVkZzUmtKU1FYQnVXakJXUTFGVlpIQkxNbVF3VGtkU1dGVnNTa0phVmtwT1pETm9iRlo2WkVOWFZVb3lZVVZvUldJelRuTmFla0pIWTIxV05Vc3ljSFZpUlU1SVRqRktSRlI1T1U5WFdFMHdWRk4wZG1SR1dYcGFWM2hXUTJwQ2Frd3pSa3hsUkZacVYxVmFTRlJFUm5SV1IwWm9WVVJHYldWdGJFaGtSMlJPWVcxc2JscFdiR3BNTTA1cFRqQXhTVk5EZEVSaE0xbzFUMGhPYlUxcE9VOWtiVXB1WVRBME1GSlZkRzlrUkdoVlZGZEpTMDR5ZEZKWFZrcDFWRVpHVUZGdFdYZFViVnB4VGxkd2VWcEZaRmxXVlhSb1ZHczFlbVZJVlhwTk1VWnpUVzEzTTA0elJqSmxiR3Q2VFd0emQxUkhNVEZUUlUxeVpWZFZkbFZZWkV0aU1sSXhVMVJrYjFWM2NHcGFibGw1VDBkek1XTnNXa3RoTWs1TFRVTjBURTR3WjNKaFZXTXhZa2hLYlZkV1pGUlZiVTU1VkRKak5WSllRWGRpYVRsRFZURm9NV1ZxV2sxaU1sSjFZM3BhV2xreVduaGhibWh1WXpOT2NtRXdNVEpEYXpWb1ZERkNTVkpWVmxsU2VtTXlVbFZqTTFWSGRERmtSWGd4VjBSU1NtVlVWak5PTW5kMlZYcENkbE51WnpWbGEyZDRUbXRHU1dKNlZsTlpNMHAyVVZOMGVsWjZaRWxPYmtKNllsTTVjazFyWnpOaU1rMUxXa1JHUmxGcldqWlRWbVJEVjFWb1VGcFlXbXhTVlVaVFpWaFdhRTVZVGtwWmJVb3pVRkZ2ZEV4VE1IUk1WVlpQVWtOQ1JGSldTbFZUVlZwS1VUQkdWVkpUTUhSTVV6QjBRMmM5UFNJc0luWmxjbWxtYVdOaGRHbHZiaUk2ZTMxOVhYMTlMQ0owYVcxbGIzVjBjeUk2ZTMwc0luWmxjbk5wYjI0aU9pSXlMakl1TUNKOUxDSnVaWFIzYjNKclpDSTZlMzBzSW5CaGMzTjNaQ0k2ZTMwc0luTjBiM0poWjJVaU9udDlMQ0p6ZVhOMFpXMWtJanA3ZlgwPQo="
        },
        "MachineConfigFiles": null,
        "MachineFiles": [
            {
                "Filename": "openshift/99_openshift-cluster-api_master-machines-0.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IG1hc3RlcgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiBtYXN0ZXIKICBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otbWFzdGVyLTAKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQpzcGVjOgogIG1ldGFkYXRhOgogICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMDJmZGQ2MjcwMjljMDA1NWIKICAgICAgYXBpVmVyc2lvbjogYXdzcHJvdmlkZXJjb25maWcub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAtIGViczoKICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AyCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItcHJvZmlsZQogICAgICBpbnN0YW5jZVR5cGU6IG00LnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICAtIG5hbWU6IGNsdXN0ZXItMzQzZi04Zmprai1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIG1ldGFkYXRhOgogICAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIHBsYWNlbWVudDoKICAgICAgICBhdmFpbGFiaWxpdHlab25lOiBldS1jZW50cmFsLTFhCiAgICAgICAgcmVnaW9uOiBldS1jZW50cmFsLTEKICAgICAgcHVibGljSXA6IG51bGwKICAgICAgc2VjdXJpdHlHcm91cHM6CiAgICAgIC0gZmlsdGVyczoKICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAtIGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBjbHVzdGVyLTM0M2YtOGZqa2otcHJpdmF0ZS1ldS1jZW50cmFsLTFhCiAgICAgIHRhZ3M6CiAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgIHZhbHVlOiBvd25lZAogICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICBuYW1lOiBtYXN0ZXItdXNlci1kYXRhCnN0YXR1czoge30K"
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_master-machines-1.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IG1hc3RlcgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiBtYXN0ZXIKICBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otbWFzdGVyLTEKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQpzcGVjOgogIG1ldGFkYXRhOgogICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMDJmZGQ2MjcwMjljMDA1NWIKICAgICAgYXBpVmVyc2lvbjogYXdzcHJvdmlkZXJjb25maWcub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAtIGViczoKICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AyCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItcHJvZmlsZQogICAgICBpbnN0YW5jZVR5cGU6IG00LnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICAtIG5hbWU6IGNsdXN0ZXItMzQzZi04Zmprai1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIG1ldGFkYXRhOgogICAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIHBsYWNlbWVudDoKICAgICAgICBhdmFpbGFiaWxpdHlab25lOiBldS1jZW50cmFsLTFiCiAgICAgICAgcmVnaW9uOiBldS1jZW50cmFsLTEKICAgICAgcHVibGljSXA6IG51bGwKICAgICAgc2VjdXJpdHlHcm91cHM6CiAgICAgIC0gZmlsdGVyczoKICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAtIGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBjbHVzdGVyLTM0M2YtOGZqa2otcHJpdmF0ZS1ldS1jZW50cmFsLTFiCiAgICAgIHRhZ3M6CiAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgIHZhbHVlOiBvd25lZAogICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICBuYW1lOiBtYXN0ZXItdXNlci1kYXRhCnN0YXR1czoge30K"
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_master-machines-2.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IG1hc3RlcgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS10eXBlOiBtYXN0ZXIKICBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otbWFzdGVyLTIKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWFwaQpzcGVjOgogIG1ldGFkYXRhOgogICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBwcm92aWRlclNwZWM6CiAgICB2YWx1ZToKICAgICAgYW1pOgogICAgICAgIGlkOiBhbWktMDJmZGQ2MjcwMjljMDA1NWIKICAgICAgYXBpVmVyc2lvbjogYXdzcHJvdmlkZXJjb25maWcub3BlbnNoaWZ0LmlvL3YxYmV0YTEKICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAtIGViczoKICAgICAgICAgIGlvcHM6IDAKICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgdm9sdW1lVHlwZTogZ3AyCiAgICAgIGNyZWRlbnRpYWxzU2VjcmV0OgogICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICBkZXZpY2VJbmRleDogMAogICAgICBpYW1JbnN0YW5jZVByb2ZpbGU6CiAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItcHJvZmlsZQogICAgICBpbnN0YW5jZVR5cGU6IG00LnhsYXJnZQogICAgICBraW5kOiBBV1NNYWNoaW5lUHJvdmlkZXJDb25maWcKICAgICAgbG9hZEJhbGFuY2VyczoKICAgICAgLSBuYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otZXh0CiAgICAgICAgdHlwZTogbmV0d29yawogICAgICAtIG5hbWU6IGNsdXN0ZXItMzQzZi04Zmprai1pbnQKICAgICAgICB0eXBlOiBuZXR3b3JrCiAgICAgIG1ldGFkYXRhOgogICAgICAgIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgICAgIHBsYWNlbWVudDoKICAgICAgICBhdmFpbGFiaWxpdHlab25lOiBldS1jZW50cmFsLTFjCiAgICAgICAgcmVnaW9uOiBldS1jZW50cmFsLTEKICAgICAgcHVibGljSXA6IG51bGwKICAgICAgc2VjdXJpdHlHcm91cHM6CiAgICAgIC0gZmlsdGVyczoKICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICB2YWx1ZXM6CiAgICAgICAgICAtIGNsdXN0ZXItMzQzZi04Zmprai1tYXN0ZXItc2cKICAgICAgc3VibmV0OgogICAgICAgIGZpbHRlcnM6CiAgICAgICAgLSBuYW1lOiB0YWc6TmFtZQogICAgICAgICAgdmFsdWVzOgogICAgICAgICAgLSBjbHVzdGVyLTM0M2YtOGZqa2otcHJpdmF0ZS1ldS1jZW50cmFsLTFjCiAgICAgIHRhZ3M6CiAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgIHZhbHVlOiBvd25lZAogICAgICB1c2VyRGF0YVNlY3JldDoKICAgICAgICBuYW1lOiBtYXN0ZXItdXNlci1kYXRhCnN0YXR1czoge30K"
            }
        ]
    },
    "*machines.Worker": {
        "UserDataFile": {
            "Filename": "openshift/99_openshift-cluster-api_worker-user-data-secret.yaml",
            "Data": "CmtpbmQ6IExpc3QKYXBpVmVyc2lvbjogdjEKbWV0YWRhdGE6CiAgcmVzb3VyY2VWZXJzaW9uOiAiIgogIHNlbGZMaW5rOiAiIgppdGVtczoKLSBhcGlWZXJzaW9uOiB2MQogIGtpbmQ6IFNlY3JldAogIG1ldGFkYXRhOgogICAgbmFtZTogd29ya2VyLXVzZXItZGF0YQogICAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKICB0eXBlOiBPcGFxdWUKICBkYXRhOgogICAgZGlzYWJsZVRlbXBsYXRpbmc6ICJkSEoxWlFvPSIKICAgIHVzZXJEYXRhOiBleUpwWjI1cGRHbHZiaUk2ZXlKamIyNW1hV2NpT25zaVlYQndaVzVrSWpwYmV5SnpiM1Z5WTJVaU9pSm9kSFJ3Y3pvdkwyRndhUzFwYm5RdVkyeDFjM1JsY2kwek5ETm1Mbk5oYm1SaWIzZ3hOall6TG05d1pXNTBiR011WTI5dE9qSXlOakl6TDJOdmJtWnBaeTkzYjNKclpYSWlMQ0oyWlhKcFptbGpZWFJwYjI0aU9udDlmVjE5TENKelpXTjFjbWwwZVNJNmV5SjBiSE1pT25zaVkyVnlkR2xtYVdOaGRHVkJkWFJvYjNKcGRHbGxjeUk2VzNzaWMyOTFjbU5sSWpvaVpHRjBZVHAwWlhoMEwzQnNZV2x1TzJOb1lYSnpaWFE5ZFhSbUxUZzdZbUZ6WlRZMExFeFRNSFJNVXpGRFVsVmtTbFJwUWtSU1ZrcFZVMVZhU2xFd1JsVlNVekIwVEZNd2RFTnJNVXBUVlZKR1VrVk9SRkZYV25CYU1FWXpVMVZLUWxvd2JFcFZNMVpMVlVaQ1RFNURPVFpNZW1nelVrWkdXbE5yZEhaWGEyeHZaRzFPVDFGV1JrWlVSVXBTVVZoa1MyRnJWbFJVVlVwQ1VqQkZlRlpWVlV0Uk0yaE9VMjFKZWxGdGVHbGlhelYyV1Zaa1lVMUZNVk5SV0dSRldqRnNSVlpzUmxKU1JWWXpXa2hzYVUxcWEzZFVSbVJQWVVVeFEwNUdhRVZXUlZVeFZGWlNTbVF3T1ZWU1dHUlBWa1pWZUZRd1duWlhRWEJGVmtWck1WUldVa3BrTURWeFVsaGtUMVpHVlhoVU1GcDJaREJ3Y1ZKV1RrNVJhMFpJVVZSR1ZsSlZUalJVVlhCcFRUQktjMWx0TlU5aU1rWllWMnBDVGxWclJqTlNSMlJhVWtaYVVsVlZVa1prTWxJMVEyMUplVTlVUWsxV01EVnZWRlZzU2xGcmJIRlJWVFZEV2pKMGVHRkhkSEJTZW13elRVVktRbFZWVmtkUlZVWlFVVEJHVWs5RlJrNVRWV3hEVVRKa1RGRXdSbEpTVlVVd1VURmtWMUY1YzNKUk0xWklZakJuUzFKSFJrOWpWa1Y1VlZab2JGb3dNVWRWYld4RFdtcHNXV016VmpaVU0yeDVWRVpPU2s5RldubExlbFpHVFZjMU1XTkZWalpUYmxwYVRrUm5NbVJGY0ZsVVZGcDFVVmRyY21GcVZuUlhhbFYzVFVWT2ExcG5jRVJOYlhSdFVWVXhWbU15YURaT1JscGFUbGhhV1ZWSGVIWmpWMmcwVm10U2RGZHJhSGxWTTNCNlZtczFUVTVHVmxCV01qVkhaRlZPZDFwSFdrMWlNMXB2VDBSR01HTXhVVFZXTUhSNFVWUkdhRTFzV1RGRGJURnFWakJHYVU1R2JIUmpSMnhLVTIxYVUyRkdhek5VVmtKb1ZrUmplVk16Y0c1aGEwWjBVakJLVTFZelJsbFJhM1JzWVZSa1FsUllSa2hTYmxKS1ZHcFJOR1ZVV21oVk0wVjRZa1pDYUZSVk5UTmpibTlMVWpORmVrOVhSa05rUmsweVlWY3hiVTVIYkc1a01HaDRUVmhGTVZGdGNIZFRWelExVVdrNE1XTXdkRWhoUms1WVpWVjRjbEZZVW14a2JHdzJWV3BvZWxGVlJtdGpSMlJ1VFdwU2MxZHViSE5WYlRWNFQxRndjVmRFU2tOa2JtUnZaR3hrYzAxNlVrSkxNMlJ6VjI1YWNVd3lTbkpoYXprMFUyMUdZVk5WV21wTGVsRjVWMnN4YkVzeFZsUk5iVVpMWTFVMWIxVkhUa05rYTJ4NVVWVTBjbE5xWkZCamJVWjBaVlpqZUVOcVkzWlVWa1p0V21wb1Zsb3paRXBTUlVaU1VWVktkazFGYkROVlZWSkNWREJLYmxSc1drbFZWR2hEVVZkWk5GSlZTa0pVVlU1Q1kxWkdNMUpJWkZwU1JscFRUVVpTUWxWVlozWlJhMFpXWkRCR00xSlZTVXRNTTNCQ1drVktibFJzV2tsVlZGSkdVbTFrVWxaV1JsUlVSVkp1VlRCT1JGRXllSE5VYkZaMVdteHdRMlZJVVhsa1JrRjZWRlYwYTFvelpFVlZWbXhMVXpJNVlWTlhhREpaTURWQ1ZWVldUVkZzUmtKU1FYQnVXakJXUTFGVlpIQkxNbVF3VGtkU1dGVnNTa0phVmtwT1pETm9iRlo2WkVOWFZVb3lZVVZvUldJelRuTmFla0pIWTIxV05Vc3ljSFZpUlU1SVRqRktSRlI1T1U5WFdFMHdWRk4wZG1SR1dYcGFWM2hXUTJwQ2Frd3pSa3hsUkZacVYxVmFTRlJFUm5SV1IwWm9WVVJHYldWdGJFaGtSMlJPWVcxc2JscFdiR3BNTTA1cFRqQXhTVk5EZEVSaE0xbzFUMGhPYlUxcE9VOWtiVXB1WVRBME1GSlZkRzlrUkdoVlZGZEpTMDR5ZEZKWFZrcDFWRVpHVUZGdFdYZFViVnB4VGxkd2VWcEZaRmxXVlhSb1ZHczFlbVZJVlhwTk1VWnpUVzEzTTA0elJqSmxiR3Q2VFd0emQxUkhNVEZUUlUxeVpWZFZkbFZZWkV0aU1sSXhVMVJrYjFWM2NHcGFibGw1VDBkek1XTnNXa3RoTWs1TFRVTjBURTR3WjNKaFZXTXhZa2hLYlZkV1pGUlZiVTU1VkRKak5WSllRWGRpYVRsRFZURm9NV1ZxV2sxaU1sSjFZM3BhV2xreVduaGhibWh1WXpOT2NtRXdNVEpEYXpWb1ZERkNTVkpWVmxsU2VtTXlVbFZqTTFWSGRERmtSWGd4VjBSU1NtVlVWak5PTW5kMlZYcENkbE51WnpWbGEyZDRUbXRHU1dKNlZsTlpNMHAyVVZOMGVsWjZaRWxPYmtKNllsTTVjazFyWnpOaU1rMUxXa1JHUmxGcldqWlRWbVJEVjFWb1VGcFlXbXhTVlVaVFpWaFdhRTVZVGtwWmJVb3pVRkZ2ZEV4VE1IUk1WVlpQVWtOQ1JGSldTbFZUVlZwS1VUQkdWVkpUTUhSTVV6QjBRMmM5UFNJc0luWmxjbWxtYVdOaGRHbHZiaUk2ZTMxOVhYMTlMQ0owYVcxbGIzVjBjeUk2ZTMwc0luWmxjbk5wYjI0aU9pSXlMakl1TUNKOUxDSnVaWFIzYjNKclpDSTZlMzBzSW5CaGMzTjNaQ0k2ZTMwc0luTjBiM0poWjJVaU9udDlMQ0p6ZVhOMFpXMWtJanA3ZlgwPQo="
        },
        "MachineConfigFiles": null,
        "MachineSetFiles": [
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-machineset-0.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgbmFtZTogY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1ldS1jZW50cmFsLTFhCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICByZXBsaWNhczogMQogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLWNsdXN0ZXI6IGNsdXN0ZXItMzQzZi04ZmpragogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBjbHVzdGVyLTM0M2YtOGZqa2otd29ya2VyLWV1LWNlbnRyYWwtMWEKICB0ZW1wbGF0ZToKICAgIG1ldGFkYXRhOgogICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBsYWJlbHM6CiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS1yb2xlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmVzZXQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItZXUtY2VudHJhbC0xYQogICAgc3BlYzoKICAgICAgbWV0YWRhdGE6CiAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgcHJvdmlkZXJTcGVjOgogICAgICAgIHZhbHVlOgogICAgICAgICAgYW1pOgogICAgICAgICAgICBpZDogYW1pLTAyZmRkNjI3MDI5YzAwNTViCiAgICAgICAgICBhcGlWZXJzaW9uOiBhd3Nwcm92aWRlcmNvbmZpZy5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAgICAgLSBlYnM6CiAgICAgICAgICAgICAgaW9wczogMAogICAgICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgICAgIHZvbHVtZVR5cGU6IGdwMgogICAgICAgICAgY3JlZGVudGlhbHNTZWNyZXQ6CiAgICAgICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICAgICAgZGV2aWNlSW5kZXg6IDAKICAgICAgICAgIGlhbUluc3RhbmNlUHJvZmlsZToKICAgICAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItcHJvZmlsZQogICAgICAgICAgaW5zdGFuY2VUeXBlOiBtNC5sYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIHBsYWNlbWVudDoKICAgICAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogZXUtY2VudHJhbC0xYQogICAgICAgICAgICByZWdpb246IGV1LWNlbnRyYWwtMQogICAgICAgICAgcHVibGljSXA6IG51bGwKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1zZwogICAgICAgICAgc3VibmV0OgogICAgICAgICAgICBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXByaXZhdGUtZXUtY2VudHJhbC0xYQogICAgICAgICAgdGFnczoKICAgICAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo="
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-machineset-1.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgbmFtZTogY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1ldS1jZW50cmFsLTFiCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICByZXBsaWNhczogMQogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLWNsdXN0ZXI6IGNsdXN0ZXItMzQzZi04ZmpragogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBjbHVzdGVyLTM0M2YtOGZqa2otd29ya2VyLWV1LWNlbnRyYWwtMWIKICB0ZW1wbGF0ZToKICAgIG1ldGFkYXRhOgogICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBsYWJlbHM6CiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS1yb2xlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmVzZXQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItZXUtY2VudHJhbC0xYgogICAgc3BlYzoKICAgICAgbWV0YWRhdGE6CiAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgcHJvdmlkZXJTcGVjOgogICAgICAgIHZhbHVlOgogICAgICAgICAgYW1pOgogICAgICAgICAgICBpZDogYW1pLTAyZmRkNjI3MDI5YzAwNTViCiAgICAgICAgICBhcGlWZXJzaW9uOiBhd3Nwcm92aWRlcmNvbmZpZy5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAgICAgLSBlYnM6CiAgICAgICAgICAgICAgaW9wczogMAogICAgICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgICAgIHZvbHVtZVR5cGU6IGdwMgogICAgICAgICAgY3JlZGVudGlhbHNTZWNyZXQ6CiAgICAgICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICAgICAgZGV2aWNlSW5kZXg6IDAKICAgICAgICAgIGlhbUluc3RhbmNlUHJvZmlsZToKICAgICAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItcHJvZmlsZQogICAgICAgICAgaW5zdGFuY2VUeXBlOiBtNC5sYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIHBsYWNlbWVudDoKICAgICAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogZXUtY2VudHJhbC0xYgogICAgICAgICAgICByZWdpb246IGV1LWNlbnRyYWwtMQogICAgICAgICAgcHVibGljSXA6IG51bGwKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1zZwogICAgICAgICAgc3VibmV0OgogICAgICAgICAgICBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXByaXZhdGUtZXUtY2VudHJhbC0xYgogICAgICAgICAgdGFnczoKICAgICAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo="
            },
            {
                "Filename": "openshift/99_openshift-cluster-api_worker-machineset-2.yaml",
                "Data": "YXBpVmVyc2lvbjogbWFjaGluZS5vcGVuc2hpZnQuaW8vdjFiZXRhMQpraW5kOiBNYWNoaW5lU2V0Cm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbGFiZWxzOgogICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgbmFtZTogY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1ldS1jZW50cmFsLTFjCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtbWFjaGluZS1hcGkKc3BlYzoKICByZXBsaWNhczogMQogIHNlbGVjdG9yOgogICAgbWF0Y2hMYWJlbHM6CiAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLWNsdXN0ZXI6IGNsdXN0ZXItMzQzZi04ZmpragogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXJvbGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lc2V0OiBjbHVzdGVyLTM0M2YtOGZqa2otd29ya2VyLWV1LWNlbnRyYWwtMWMKICB0ZW1wbGF0ZToKICAgIG1ldGFkYXRhOgogICAgICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogICAgICBsYWJlbHM6CiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktY2x1c3RlcjogY2x1c3Rlci0zNDNmLThmamtqCiAgICAgICAgbWFjaGluZS5vcGVuc2hpZnQuaW8vY2x1c3Rlci1hcGktbWFjaGluZS1yb2xlOiB3b3JrZXIKICAgICAgICBtYWNoaW5lLm9wZW5zaGlmdC5pby9jbHVzdGVyLWFwaS1tYWNoaW5lLXR5cGU6IHdvcmtlcgogICAgICAgIG1hY2hpbmUub3BlbnNoaWZ0LmlvL2NsdXN0ZXItYXBpLW1hY2hpbmVzZXQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItZXUtY2VudHJhbC0xYwogICAgc3BlYzoKICAgICAgbWV0YWRhdGE6CiAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgcHJvdmlkZXJTcGVjOgogICAgICAgIHZhbHVlOgogICAgICAgICAgYW1pOgogICAgICAgICAgICBpZDogYW1pLTAyZmRkNjI3MDI5YzAwNTViCiAgICAgICAgICBhcGlWZXJzaW9uOiBhd3Nwcm92aWRlcmNvbmZpZy5vcGVuc2hpZnQuaW8vdjFiZXRhMQogICAgICAgICAgYmxvY2tEZXZpY2VzOgogICAgICAgICAgLSBlYnM6CiAgICAgICAgICAgICAgaW9wczogMAogICAgICAgICAgICAgIHZvbHVtZVNpemU6IDEyMAogICAgICAgICAgICAgIHZvbHVtZVR5cGU6IGdwMgogICAgICAgICAgY3JlZGVudGlhbHNTZWNyZXQ6CiAgICAgICAgICAgIG5hbWU6IGF3cy1jbG91ZC1jcmVkZW50aWFscwogICAgICAgICAgZGV2aWNlSW5kZXg6IDAKICAgICAgICAgIGlhbUluc3RhbmNlUHJvZmlsZToKICAgICAgICAgICAgaWQ6IGNsdXN0ZXItMzQzZi04Zmprai13b3JrZXItcHJvZmlsZQogICAgICAgICAgaW5zdGFuY2VUeXBlOiBtNC5sYXJnZQogICAgICAgICAga2luZDogQVdTTWFjaGluZVByb3ZpZGVyQ29uZmlnCiAgICAgICAgICBtZXRhZGF0YToKICAgICAgICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgICAgIHBsYWNlbWVudDoKICAgICAgICAgICAgYXZhaWxhYmlsaXR5Wm9uZTogZXUtY2VudHJhbC0xYwogICAgICAgICAgICByZWdpb246IGV1LWNlbnRyYWwtMQogICAgICAgICAgcHVibGljSXA6IG51bGwKICAgICAgICAgIHNlY3VyaXR5R3JvdXBzOgogICAgICAgICAgLSBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXdvcmtlci1zZwogICAgICAgICAgc3VibmV0OgogICAgICAgICAgICBmaWx0ZXJzOgogICAgICAgICAgICAtIG5hbWU6IHRhZzpOYW1lCiAgICAgICAgICAgICAgdmFsdWVzOgogICAgICAgICAgICAgIC0gY2x1c3Rlci0zNDNmLThmamtqLXByaXZhdGUtZXUtY2VudHJhbC0xYwogICAgICAgICAgdGFnczoKICAgICAgICAgIC0gbmFtZToga3ViZXJuZXRlcy5pby9jbHVzdGVyL2NsdXN0ZXItMzQzZi04ZmpragogICAgICAgICAgICB2YWx1ZTogb3duZWQKICAgICAgICAgIHVzZXJEYXRhU2VjcmV0OgogICAgICAgICAgICBuYW1lOiB3b3JrZXItdXNlci1kYXRhCnN0YXR1czoKICByZXBsaWNhczogMAo="
            }
        ]
    },
    "*manifests.CloudProviderConfig": {
        "ConfigMap": null,
        "File": null
    },
    "*manifests.DNS": {
        "FileList": [
            {
                "Filename": "manifests/cluster-dns-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogY2x1c3Rlci0zNDNmLnNhbmRib3gxNjYzLm9wZW50bGMuY29tCiAgcHJpdmF0ZVpvbmU6CiAgICB0YWdzOgogICAgICBOYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otaW50CiAgICAgIGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9jbHVzdGVyLTM0M2YtOGZqa2o6IG93bmVkCiAgcHVibGljWm9uZToKICAgIGlkOiBaMjM5TjhCMDRRN1lLVgpzdGF0dXM6IHt9Cg=="
            }
        ]
    },
    "*manifests.Infrastructure": {
        "FileList": [
            {
                "Filename": "manifests/cluster-infrastructure-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmZyYXN0cnVjdHVyZQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICBjbG91ZENvbmZpZzoKICAgIG5hbWU6ICIiCnN0YXR1czoKICBhcGlTZXJ2ZXJJbnRlcm5hbFVSSTogaHR0cHM6Ly9hcGktaW50LmNsdXN0ZXItMzQzZi5zYW5kYm94MTY2My5vcGVudGxjLmNvbTo2NDQzCiAgYXBpU2VydmVyVVJMOiBodHRwczovL2FwaS5jbHVzdGVyLTM0M2Yuc2FuZGJveDE2NjMub3BlbnRsYy5jb206NjQ0MwogIGV0Y2REaXNjb3ZlcnlEb21haW46IGNsdXN0ZXItMzQzZi5zYW5kYm94MTY2My5vcGVudGxjLmNvbQogIGluZnJhc3RydWN0dXJlTmFtZTogY2x1c3Rlci0zNDNmLThmamtqCiAgcGxhdGZvcm06IEFXUwo="
            }
        ]
    },
    "*manifests.Ingress": {
        "FileList": [
            {
                "Filename": "manifests/cluster-ingress-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5jbHVzdGVyLTM0M2Yuc2FuZGJveDE2NjMub3BlbnRsYy5jb20Kc3RhdHVzOiB7fQo="
            }
        ]
    },
    "*manifests.Manifests": {
        "KubeSysConfig": {
            "kind": "ConfigMap",
            "apiVersion": "v1",
            "metadata": {
                "name": "cluster-config-v1",
                "namespace": "kube-system"
            },
            "data": {
                "install-config": "apiVersion: v1\nbaseDomain: sandbox1663.opentlc.com\ncompute:\n- hyperthreading: Enabled\n  name: worker\n  platform: {}\n  replicas: 3\ncontrolPlane:\n  hyperthreading: Enabled\n  name: master\n  platform:\n    aws:\n      rootVolume:\n        iops: 0\n        size: 120\n        type: gp2\n      type: m4.xlarge\n      zones:\n      - eu-central-1a\n      - eu-central-1b\n      - eu-central-1c\n  replicas: 3\nmetadata:\n  creationTimestamp: null\n  name: cluster-343f\nnetworking:\n  clusterNetwork:\n  - cidr: 10.128.0.0/14\n    hostPrefix: 23\n  machineCIDR: 10.0.0.0/16\n  networkType: OpenShiftSDN\n  serviceNetwork:\n  - 172.30.0.0/16\nplatform:\n  aws:\n    region: eu-central-1\npullSecret: \"\"\n"
            }
        },
        "FileList": [
            {
                "Filename": "manifests/04-openshift-machine-config-operator.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogIGxhYmVsczoKICAgIG5hbWU6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgogICAgb3BlbnNoaWZ0LmlvL3J1bi1sZXZlbDogIjEiCg=="
            },
            {
                "Filename": "manifests/cluster-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKZGF0YToKICBpbnN0YWxsLWNvbmZpZzogfAogICAgYXBpVmVyc2lvbjogdjEKICAgIGJhc2VEb21haW46IHNhbmRib3gxNjYzLm9wZW50bGMuY29tCiAgICBjb21wdXRlOgogICAgLSBoeXBlcnRocmVhZGluZzogRW5hYmxlZAogICAgICBuYW1lOiB3b3JrZXIKICAgICAgcGxhdGZvcm06IHt9CiAgICAgIHJlcGxpY2FzOiAzCiAgICBjb250cm9sUGxhbmU6CiAgICAgIGh5cGVydGhyZWFkaW5nOiBFbmFibGVkCiAgICAgIG5hbWU6IG1hc3RlcgogICAgICBwbGF0Zm9ybToKICAgICAgICBhd3M6CiAgICAgICAgICByb290Vm9sdW1lOgogICAgICAgICAgICBpb3BzOiAwCiAgICAgICAgICAgIHNpemU6IDEyMAogICAgICAgICAgICB0eXBlOiBncDIKICAgICAgICAgIHR5cGU6IG00LnhsYXJnZQogICAgICAgICAgem9uZXM6CiAgICAgICAgICAtIGV1LWNlbnRyYWwtMWEKICAgICAgICAgIC0gZXUtY2VudHJhbC0xYgogICAgICAgICAgLSBldS1jZW50cmFsLTFjCiAgICAgIHJlcGxpY2FzOiAzCiAgICBtZXRhZGF0YToKICAgICAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICAgICAgbmFtZTogY2x1c3Rlci0zNDNmCiAgICBuZXR3b3JraW5nOgogICAgICBjbHVzdGVyTmV0d29yazoKICAgICAgLSBjaWRyOiAxMC4xMjguMC4wLzE0CiAgICAgICAgaG9zdFByZWZpeDogMjMKICAgICAgbWFjaGluZUNJRFI6IDEwLjAuMC4wLzE2CiAgICAgIG5ldHdvcmtUeXBlOiBPcGVuU2hpZnRTRE4KICAgICAgc2VydmljZU5ldHdvcms6CiAgICAgIC0gMTcyLjMwLjAuMC8xNgogICAgcGxhdGZvcm06CiAgICAgIGF3czoKICAgICAgICByZWdpb246IGV1LWNlbnRyYWwtMQogICAgcHVsbFNlY3JldDogIiIKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGNsdXN0ZXItY29uZmlnLXYxCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQo="
            },
            {
                "Filename": "manifests/cluster-dns-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBETlMKbWV0YWRhdGE6CiAgY3JlYXRpb25UaW1lc3RhbXA6IG51bGwKICBuYW1lOiBjbHVzdGVyCnNwZWM6CiAgYmFzZURvbWFpbjogY2x1c3Rlci0zNDNmLnNhbmRib3gxNjYzLm9wZW50bGMuY29tCiAgcHJpdmF0ZVpvbmU6CiAgICB0YWdzOgogICAgICBOYW1lOiBjbHVzdGVyLTM0M2YtOGZqa2otaW50CiAgICAgIGt1YmVybmV0ZXMuaW8vY2x1c3Rlci9jbHVzdGVyLTM0M2YtOGZqa2o6IG93bmVkCiAgcHVibGljWm9uZToKICAgIGlkOiBaMjM5TjhCMDRRN1lLVgpzdGF0dXM6IHt9Cg=="
            },
            {
                "Filename": "manifests/cluster-infrastructure-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmZyYXN0cnVjdHVyZQptZXRhZGF0YToKICBjcmVhdGlvblRpbWVzdGFtcDogbnVsbAogIG5hbWU6IGNsdXN0ZXIKc3BlYzoKICBjbG91ZENvbmZpZzoKICAgIG5hbWU6ICIiCnN0YXR1czoKICBhcGlTZXJ2ZXJJbnRlcm5hbFVSSTogaHR0cHM6Ly9hcGktaW50LmNsdXN0ZXItMzQzZi5zYW5kYm94MTY2My5vcGVudGxjLmNvbTo2NDQzCiAgYXBpU2VydmVyVVJMOiBodHRwczovL2FwaS5jbHVzdGVyLTM0M2Yuc2FuZGJveDE2NjMub3BlbnRsYy5jb206NjQ0MwogIGV0Y2REaXNjb3ZlcnlEb21haW46IGNsdXN0ZXItMzQzZi5zYW5kYm94MTY2My5vcGVudGxjLmNvbQogIGluZnJhc3RydWN0dXJlTmFtZTogY2x1c3Rlci0zNDNmLThmamtqCiAgcGxhdGZvcm06IEFXUwo="
            },
            {
                "Filename": "manifests/cluster-ingress-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBJbmdyZXNzCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGRvbWFpbjogYXBwcy5jbHVzdGVyLTM0M2Yuc2FuZGJveDE2NjMub3BlbnRsYy5jb20Kc3RhdHVzOiB7fQo="
            },
            {
                "Filename": "manifests/cluster-network-01-crd.yml",
                "Data": "Ci0tLQojIFRoaXMgaXMgdGhlIGFkdmFuY2VkIG5ldHdvcmsgY29uZmlndXJhdGlvbiBDUkQKIyBPbmx5IG5lY2Vzc2FyeSBpZiB5b3UgbmVlZCB0byB0d2VhayBjZXJ0YWluIHNldHRpbmdzLgojIFNlZSBodHRwczovL2dpdGh1Yi5jb20vb3BlbnNoaWZ0L2NsdXN0ZXItbmV0d29yay1vcGVyYXRvciNjb25maWd1cmluZwphcGlWZXJzaW9uOiBhcGlleHRlbnNpb25zLms4cy5pby92MWJldGExCmtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgptZXRhZGF0YToKICBuYW1lOiBuZXR3b3Jrcy5vcGVyYXRvci5vcGVuc2hpZnQuaW8Kc3BlYzoKICBncm91cDogb3BlcmF0b3Iub3BlbnNoaWZ0LmlvCiAgbmFtZXM6CiAgICBraW5kOiBOZXR3b3JrCiAgICBsaXN0S2luZDogTmV0d29ya0xpc3QKICAgIHBsdXJhbDogbmV0d29ya3MKICAgIHNpbmd1bGFyOiBuZXR3b3JrCiAgc2NvcGU6IENsdXN0ZXIKICB2ZXJzaW9uczoKICAtIG5hbWU6IHYxCiAgICBzZXJ2ZWQ6IHRydWUKICAgIHN0b3JhZ2U6IHRydWUK"
            },
            {
                "Filename": "manifests/cluster-network-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogIC0gY2lkcjogMTAuMTI4LjAuMC8xNAogICAgaG9zdFByZWZpeDogMjMKICBuZXR3b3JrVHlwZTogT3BlblNoaWZ0U0ROCiAgc2VydmljZU5ldHdvcms6CiAgLSAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K"
            },
            {
                "Filename": "manifests/cvo-overrides.yaml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBDbHVzdGVyVmVyc2lvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jbHVzdGVyLXZlcnNpb24KICBuYW1lOiB2ZXJzaW9uCnNwZWM6CiAgdXBzdHJlYW06IGh0dHBzOi8vYXBpLm9wZW5zaGlmdC5jb20vYXBpL3VwZ3JhZGVzX2luZm8vdjEvZ3JhcGgKICBjaGFubmVsOiBzdGFibGUtNC4xCiAgY2x1c3RlcklEOiAxNDk1M2UxOS1mZDM0LTQ5ZDAtYjhjZS1kODM1ODQzMTlkMzYK"
            },
            {
                "Filename": "manifests/etcd-ca-bundle-configmap.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtY2EtYnVuZGxlCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCmRhdGE6CiAgY2EtYnVuZGxlLmNydDogfAogICAgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCiAgICBNSUlER0RDQ0FnQ2dBd0lCQWdJSUkyWUJta3pHdmtJd0RRWUpLb1pJaHZjTkFRRUxCUUF3S2pFU01CQUdBMVVFCiAgICBDeE1KYjNCbGJuTm9hV1owTVJRd0VnWURWUVFERXd0bGRHTmtMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUxCiAgICBOVGxhRncweU9URXlNRFl4TURVMU5UbGFNQ294RWpBUUJnTlZCQXNUQ1c5d1pXNXphR2xtZERFVU1CSUdBMVVFCiAgICBBeE1MWlhSalpDMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNpCiAgICBBYm5kdEYvaHkzUjNncktxbGNTUEcyNjNLOC9oSXFHdWVEWVBhSXA1bTNBdW1mMGkrMjA2bkZ2VVZEdnQ0K29VCiAgICB3QzhNVWZ5RjVtZ3FobnZDTGdFOW9SYWJkc012aHhQODBIaHBVWUdhT2Iwb2d5R2Y3Unp4N3dyY1hWNmpqMkowCiAgICBNZlFBSC9pZ3MzU2Y0Z2N2b1dYekx6cTJ3MUpmSEJtRHo2cDNpSFpwMUh2QWVLUVlOTHFJOFhpd1VRSjdhZXp0CiAgICBXUFBwbWdhVlFZOS8vSE01QU5VVjZPV0dvOVdlbkVia01jWU5KZURra1grNVhuV1BPMFZ0WER3V2ZvZ1NZNzFuCiAgICB3MGl5QytGWnZGNG9NU1dvcko4YitmSVVYS3NSVWlCYjlHNmtwVDFlc0tyRk5hRndsb3h1T0N6cURrRDVxeWxICiAgICBZdUJCd2dGY2dreUFEcjR3YmxPekFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUVBd0lDcERBUEJnTlZIUk1CCiAgICBBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlJ3VDZtYXBNVkJBWS9NV0swWkQxdDhIZFdSU1RBTkJna3Foa2lHCiAgICA5dzBCQVFzRkFBT0NBUUVBV2g3RGI2V0EyazB3ZDllNUdmV1Z1SXhDTjUxekc2UXdWSjBWRXIybU1FV2x2Ym1wCiAgICB1bE9SbHg3ZVViRCsya09udjBDQUtlRW5VY1pCTVpjWXl5Q044WGdnRS9KeTFnU2V2Zk14TUZISHVyMTZBRWZjCiAgICBJV0RPYnZyVC9vVzc1d0RPZ1BxenBVSUhicDlaVHIrNDlhNnZ5MGJ0OVY0L1UyMHBlM2RveFV1RDJaZnVCaWs4CiAgICBxUFNSQVNac3JLV1JQQkhWZ01rdDMrUGVuN3VSZ2ZXSG5SWW5QOERJSnFrQkhzbXFKTTZYNmJXZ3Y5SkhqUUdBCiAgICB5U3hXUnhiVUsyWWxHQklHUHgxdWp6dWhjVDZJYzdMQ1ZhS1RJUjVFYjVaWm95amFhaDVJL3c0cGVYMVhDaUJOCiAgICBFd292a25ybFRmWkxUZE5IdFBVRFZpVnNjaGtzdU1oRkNDRkEvdz09CiAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAK"
            },
            {
                "Filename": "manifests/etcd-client-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtY2xpZW50CiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCnR5cGU6IFNlY3JldFR5cGVUTFMKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSUWVrTkRRV2xsWjBGM1NVSkJaMGxKU0dWdVlWUTJVamhqUTBsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZExha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTVVhkRloxbEVWbEZSUkVWM2RHeGtSMDVyVEZoT2NGb3lOV3hqYWtGbFJuY3dlRTlVUlhsTlJHdDRUVVJWTVFwT1ZHeGhSbmN3ZVU5VVJYbE5SRmw0VFVSVk1rMUVRbUZOUWpSNFJGUkJURUpuVGxaQ1FYTlVRa2RXTUZreVVYaEVWRUZNUW1kT1ZrSkJUVlJDUjFZd0Nsa3lVWGRuWjBWcFRVRXdSME5UY1VkVFNXSXpSRkZGUWtGUlZVRkJORWxDUkhkQmQyZG5SVXRCYjBsQ1FWRkROa1JsTmtSR1ZETlNWVWszZEdGaFYwOEtabnBKWkVGVFRGVnhaM05rVUZScllqSktUWEJMWTJsSlZHeHRUWFpJYzA5WlVFbHdkVlZDU1N0d1VITm9OVzV6VDFKUGJFOHhaeXR1VjFGYU1IaGpWd3BDWW5SUkwzSmhWSHBQVGxNck9EZHJhbTVuTjBocldXaHlTMVZVVm1sSGVXcFdNVmRRVTFkTVkyOXZOak5oVDNaMVFqSlFTR3RSV20xR1JGZHBXRkowQ205b1RETkJRMjFVUm1aV1JGUnVVM1V6YmpkYWFWWkZZV0ZOYkhjNVRXVk5lblZCVUdscVNXOXlNR0oxWlZWU2F6aGpRbTFXVmk5WGMwdzNXa292TUZNS05XeG5aREpHY0ZSdWJsRlBiR3BaU25GWFVESnZXRTB5YzNwcGJHMTFXRGxJYW5obWMydG5iSFZSWlRZd1FXbEdVekYyU0ZCMVJFdDVSVGN2VUdONFl3cEphalpOUWtFNGJWUnRSbFpYWlU1emIwSmxNRFF4UWsxaldHZG9WRkpUTUhSSloweFFjV0ZYUlhoMmFIaDVPREUzTjBaR2NtUXZSRVp5VW5OVFZHcENDbXByV0ZaQlowMUNRVUZIYW1SVVFucE5RVFJIUVRGVlpFUjNSVUl2ZDFGRlFYZEpSa2xFUVZSQ1owNVdTRk5WUlVSRVFVdENaMmR5UW1kRlJrSlJZMFFLUVdwQlRVSm5UbFpJVWsxQ1FXWTRSVUZxUVVGTlFqQkhRVEZWWkVSblVWZENRbEozVkRadFlYQk5Wa0pCV1M5TlYwc3dXa1F4ZERoSVpGZFNVMVJCWmdwQ1owNVdTRk5OUlVkRVFWZG5RbEozVkRadFlYQk5Wa0pCV1M5TlYwc3dXa1F4ZERoSVpGZFNVMVJCVGtKbmEzRm9hMmxIT1hjd1FrRlJjMFpCUVU5RENrRlJSVUZDYWtGc1JHTmFaVWxpYTJsQlNtcGFTWGxOVm1SblVWQnhLMlpZY21vcmMzQTJZMlU1UlM4eGFHSktTV2xQTDBkdFpERlJlRUkwTDJObFNFNEtVVFZ0YmpSMWJrOXZWemxOUW5vMkwzWk9hVVU1YUhSU2FXRlNMekpRWms1MWNXcEhiMGw0ZEV4dlZUWndTV0Z5VFhCYWNXOHlUbTF5VUdoQ2FtMDJTd3BYUmtSaVZVa3dNbkJFYVVSc09WVmpiemhGV0doblVHUjRUMm8yTkVoSFpIWkpRVGxTYVc5cmVDOVNUMVJ5Y2tsWlFWZG1RMGN4VERNckwwRkZaRGxyQ2xwalExQmxiSEp0V0dacFNteGxWSEJwUW1GME0zUldZbFpGYWpaTFRqbHhRVmhLWW5WTVNWZEdibGxYWmxCbWFXRXZTMDFDY1hBeVMxRnllbEUxTUVvS2FFMWpWSFZwUVZOMFltOHlPSEpCVFV4UU5rMVJUVFpLZUN0YVdteENjMHh6V0ZOS2JUTXdTWFYzUlRWeVUxQm5jV1J2VGpGblUzUjJiQ3RzTVRKWlRBcFFUVTE2Y1VVMmJFNUVVM0ZhYkZjM2RYZE9lVU54UlU4eVVUMDlDaTB0TFMwdFJVNUVJRU5GVWxSSlJrbERRVlJGTFMwdExTMEsKICB0bHMua2V5OiBMUzB0TFMxQ1JVZEpUaUJTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFwTlNVbEZjRUZKUWtGQlMwTkJVVVZCZFdjemRXZDRWVGt3VmtOUE4xZHRiR3B1T0hsSVVVVnBNVXR2VEVoVU1EVkhPV2xVUzFOdVNXbEZOVnBxVEhnM0NrUnRSSGxMWW14QlUxQnhWRGRKWlZvM1JHdFVjRlIwV1ZCd01XdEhaRTFZUm1kWE4xVlFOakpyT0hwcVZYWjJUelZKTlRSUGVEVkhTV0Y1YkVVeFdXZ0tjMjh4WkZacU1HeHBNMHRMVDNReWFuSTNaMlJxZURWRlIxcG9VVEZ2YkRCaVlVbFRPWGRCY0d0NFdERlJNRFV3Y25RMUt6SlpiRkpIYldwS1kxQlVTQXBxVFRkblJEUnZlVXRMT1VjM2JteEZXbEJJUVZwc1ZtWXhja01yTWxObU9VVjFXbGxJWkdoaFZUVTFNRVJ3V1RKRFlXeHFPWEZHZWs1eVRUUndXbkpzQ2k5U05EaFlOMHBKU21KclNIVjBRVWxvVlhSaWVIbzNaM2x6YUU4dmVqTk5XRU5KSzJwQlVWQkthelZvVmxadWFtSkxRVmgwVDA1UlZFaEdORWxWTUZVS2RFeFRTVU42Tm0xc2FFMWlOR05qZGs1bEszaFNZVE5tZDNoaE1HSkZhelIzV1RWR01WRkpSRUZSUVVKQmIwbENRVVE0Vm1KRVMySTJRM0p3WjNCNWVRb3ZiMUo2VldveVRsaG5Oek5ZVHpsalF6bHZTMDA1VGpSTVJuTjZTRm92WmxwSFdEWnlkMFpCYnpkQ1lUZG1OemM1TUN0dFFuRm5NbXd2VVdKRU5EZEhDa05SVkZwcGNYRnhkM0ZOV1dwR1pHUnpPR1pDUjNKclNYbGpVM1pOWjFZNVdtTXlVbkYyTUV4dVNXaE5iazUyWVhaS05XVTRaamRPZURBNVlWZHpXbm9LVFhKMlpHZFZjVzlxYmtGc2RVNVNTMkpNZGtORGQyRmtWRnBsUkV4bk9EUlBlV3d3VWpVM1UybHliMXBIVDJOYU0ybFVSRk5CSzBKbE1FUjZVbFkwWndwSVQyVkxiMHR5T0ZwdGJ6TlRiRlpNY3pFelozUkRjUzh4Y0RsNmJ6aFdjRUpLU0Vab2NrVjFUMVZwTVU0d1ZXRjNiRllyVFhSVFpVZFdjRUpHZFRKYUNtcFNLMDB2ZEhod1RuUkljVzl1UzBaSVptWm9ibTlTTUV0VWFrRmxOVWw2TkROb1drTkRkR1p1TjBGWUx6TldObXRLSzBWbGJrNTJWRWhzZURkTmFtMEtiVTVCTVZOWU1FTm5XVVZCTVRCV1pXZGxhR0Z6Y2xKSmFtSlhka2xPUlU5bUsweDJUMmhXUkRoblpXTmlNMVI2VUU0MU0zbHFNMWRuWjJ4UGNHcEdhZ3BzYTI0d1lYZHlNa296TjBoTFV6azVXR3h0WjA0MFNVSlJka1ZOYWtoRlowWkhOVmQzYm05b0wxazVkMUpZZFRCSkswTnBkbGtyVDJwWlVXUkhSSE50Q2t0eU0yOUVia1YwWjBWM2RFeEtWa2RyTTJWYWJsaHRlWEVyVUdkdFl6a3hkbFJOWm5Zd1YwSkhka3BaWldVNVdFOUJiemxKV0hORFoxbEZRVE5WUmpJS1IyZzNLMWsyZWxOR1R6TnVia05STm1WSFZYaElZbmRqYWpSYVlUVk1VM1pDVG14SFVUVTBVelYyTmpaaWMzcDRSbXRqY1dKTWFVVmtORzlwTVhGUllncHlPVUpEY0dScVoyUXJNMVF6ZGt3M2EyVkxTSGt4VG5kUlJrNTZiRXhYZFdWRlIwRmtORXg2VGtwSlR6aDVjMDB5TVVKRlJtOU5jbUZGWjJsNWFGUnlDbVZFTUVWNWJYWmhhV0YxWmxwUk5tVndPSHBGYTBSUU5XVjFSVUppSzNjMk9GaGpTM3BQT0VObldVVkJkMHR0U0VGalJWRnRNblZoYlRadFJsTldkVklLU0VsbVowUjRNMFpLTjBsRlNXZFRURkpYYW1Rd1VsVjZSRVZMUlV3eE1UUm5ZVTVEY1hsTGRWWXpObmhvU0hwTFQxVXdRbWhYZUVjNFRVTklkVXBJZFFwWmFIRXlZakoxWWxSRVJ6WkROVmhDUkZoTldXTTBjM1I2UWpNeldrSTFZamxHYW5WbVV6VjRlVXRrYTNKeloxTXlRbmh6VlZoSUwzQk1UbGcyY0VOM0NrVldjbGREVUhWT2NIRTFTek5UWVVZMmRGQlFSR3N3UTJkWlFtWjRXVmx3Y1VkRVZrcEhiVXhTWVN0TWJIVk1ORmRzVkRSWFoxUkRNalZXWTJsb2JEUUtURGxUUzFWR1NTdFRkVlJKVFZVemNVcHpVRzFoTjJoeVVtY3ZkV1ZRY2tSRU5VeEtNWGxpVTNkekswUkpaM0JxUXpOMFkwNDNTRkJLYkVKU1puQk5Wd295YzA5Uk9UZ3pkVmswY1RGR01URndWVlZWYm5WWUswRnNSR28yTkVST1RYbEtlbUZSWmxaSGQyeE5jMjE2WkhoNWRVVkxlVzVUYWtNclNtcFpRVE5xQ213elVFWlpVVXRDWjFGRGVFdHNhRVpNU0RCRGMyRnZlRzVNTDBaVVEyTldVRWRYT0hsUU56Y3JiSFZDY21zNFVFRjRhbHAzUkhWU2REUlpWSEJLZHpnS2RtUm9WR1EwU0dSbFIwOHlaU3Q0WlhkT2F6aHVOemswUmtzclJFdGxiREEwTWt0TVNtZHRVbk5PVFZJeVJqTTFhV2xMY3pjMk1rUkdUVEZSTTFoa1VRcHVNemxyUW1kcVZTdEhjMkZVWjBSRkwzaFZNelphYzBKS1ExTXhOMjVNY1VaWmFFVlVSelJhU1ZCSFFuSmhSRkpCV0RScGRWRTlQUW90TFMwdExVVk9SQ0JTVTBFZ1VGSkpWa0ZVUlNCTFJWa3RMUzB0TFFvPQo="
            },
            {
                "Filename": "manifests/etcd-host-service-endpoints.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogRW5kcG9pbnRzCm1ldGFkYXRhOgogIG5hbWU6IGhvc3QtZXRjZAogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWV0Y2QKICBhbm5vdGF0aW9uczoKICAgIGFscGhhLmluc3RhbGxlci5vcGVuc2hpZnQuaW8vZG5zLXN1ZmZpeDogY2x1c3Rlci0zNDNmLnNhbmRib3gxNjYzLm9wZW50bGMuY29tCnN1YnNldHM6Ci0gYWRkcmVzc2VzOgogIC0gaXA6IDE5Mi4wLjIuMQogICAgaG9zdG5hbWU6IGV0Y2QtMAogIC0gaXA6IDE5Mi4wLjIuMgogICAgaG9zdG5hbWU6IGV0Y2QtMQogIC0gaXA6IDE5Mi4wLjIuMwogICAgaG9zdG5hbWU6IGV0Y2QtMgogIHBvcnRzOgogIC0gbmFtZTogZXRjZAogICAgcG9ydDogMjM3OQogICAgcHJvdG9jb2w6IFRDUAo="
            },
            {
                "Filename": "manifests/etcd-host-service.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBob3N0LWV0Y2QKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1ldGNkCiAgbGFiZWxzOgogICAgIyB0aGlzIGxhYmVsIGlzIHVzZWQgdG8gaW5kaWNhdGUgdGhhdCBpdCBzaG91bGQgYmUgc2NyYXBlZCBieSBwcm9tZXRoZXVzCiAgICBrOHMtYXBwOiBldGNkCnNwZWM6CiAgY2x1c3RlcklQOiBOb25lCiAgcG9ydHM6CiAgLSBuYW1lOiBldGNkCiAgICBwb3J0OiAyMzc5CiAgICBwcm90b2NvbDogVENQCg=="
            },
            {
                "Filename": "manifests/etcd-metric-client-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtbWV0cmljLWNsaWVudAogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNvbmZpZwp0eXBlOiBTZWNyZXRUeXBlVExTCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUldSRU5EUVdwNVowRjNTVUpCWjBsSlVsaExVbGh4YUVweGNWVjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGROVkVWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxU2MzZEhVVmxFVmxGUlJFVjRTbXhrUjA1clRGY3hiR1JJU25CWmVURjZZVmRrZFZwWVNYZElhR05PVFZScmVBcE5ha0UxVFZSQk1VNXFRWGRYYUdOT1RXcHJlRTFxUVRKTlZFRXhUbXBCZDFkcVFYTk5VbEYzUldkWlJGWlJVVXhGZDNSc1pFZE9hMHhYTVd4a1NFcHdDbGw2UlZWTlFrbEhRVEZWUlVGNFRVeGFXRkpxV2tNeGRGcFlVbmxoVjAxM1oyZEZhVTFCTUVkRFUzRkhVMGxpTTBSUlJVSkJVVlZCUVRSSlFrUjNRWGNLWjJkRlMwRnZTVUpCVVVOc2RXRlNja0l2ZW5aUldqbFBkMmxxUVhJMFp6RnZSMEpNVmt4RWFreE5PRUZMZURCellYcHBaV0YyTkdRMU4xUlBaVWhaVHdwWlVUTldMeloxVm1samRXcEdkV3RXZDJoQlYxbHVOVGgxTUV0WlVuWmpObU4yVVZZclFTc3JhWEZFZVd4aFRHVldia3d4VW0xeGR6RjZhR05GV0RSTENuVnNhRnB5VG0xV1VVWnJObU5tV0dzeFNuaGhhamxqV0dFMmFWaE9UWEZTWTB4NU4xcHVXbkp2ZGpVekwwZDBZamRtUmtVeVVFRlJiR2hhVG01WFdGY0tRbmd2T1hSSFkxVkhUVFpUT1daa2VHODVPWFZqUXpaVlUzZHJSSFpCU1U5cWVFZGFPSFIwV1dkRFVrcHJiMDVRWlUxaFFVNTFZM0ZOYVc5dVltVnpPQXBTUjFrNU5GZE9UVVpuV1RKVE4yMTRibkZ6UjJ3dlMyWnNkek5NTUdWVk5tMURkazVWWVdabkx6WlRialZ3UlVnelNpOWlVVlZ5VUc1SmR6WnpNWFphQ210bFZ6ZENUR1JsVEdJdlVXOXRNVzFtZHpJNGFGSlVSMjFvV1dOV1ltOXlRV2ROUWtGQlIycGtWRUo2VFVFMFIwRXhWV1JFZDBWQ0wzZFJSVUYzU1VZS2IwUkJWRUpuVGxaSVUxVkZSRVJCUzBKblozSkNaMFZHUWxGalJFRnFRVTFDWjA1V1NGSk5Ra0ZtT0VWQmFrRkJUVUl3UjBFeFZXUkVaMUZYUWtKU2FncDVRalZQWjNvNVZXdzJiMDAySzNsNE9HOVFTRkZ2YkVWMmFrRm1RbWRPVmtoVFRVVkhSRUZYWjBKU2FubENOVTluZWpsVmJEWnZUVFlyZVhnNGIxQklDbEZ2YkVWMmFrRk9RbWRyY1docmFVYzVkekJDUVZGelJrRkJUME5CVVVWQmVHWTNhemxpY2s1NVEwVkhhVXBITm1kVVF6QlVjRGcyZVVkck4yY3pZVmNLVEdsclkyRmpkWE40Vnk4cmFtcE5UbU5LY25NdmJYUlNTbmQ0U1ZCUFkyZHdPSFJhUmtkSVdsWkRSbkZYTVVkVVoydHJMeXQwUWpGeGFsTnRhMHhRWlFwVVVrOHdUa0pKV25KWk9VWkZiVFl4Y1RoaFQyRTRhMlpDUTFaWVNqTk9XWGhGVTI5QlJHdE1UVUZFY1hkSE5rOTRTMFZCTVZST2RWRlRVMWQ2T0hkTENsbHBVRlpyV21OSU5WRkdhRk1yV0VKSWEySnVlRGsxV2xwTUwyeDNLemhRWlhKV1ZrVklaVE5sUVVkMGMxQnZRbmRpT1hRelFXaGlSbmRaV1ZKQk9EWUtTbllyYld4bU9YUlRhRlpDZUV4NmFIRnNOMDEwTTFoeWJVcGFVV3hITVd4dFNETkhNVk51U1VZNU1GVnhjSFZPY1ZKa09VSTFWMjkyUjBGa00zRm1hd3BITmpKcFQzQnRjUzlZYWpOR1ZVRlRPVkUwVmpnM1dXeDNUMUpsVFUxNE1rSkpTVTlPVEVjM05YcERTMWR1ZWxKRGIycEtlVUU5UFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIyZEpRa0ZCUzBOQlVVVkJjR0p0YTJGM1pqZzNNRWRtVkhOSmIzZExLMGxPWVVKblV6RlRkelI1ZWxCQlEzTmtURWR6Tkc1dGNpdElaV1V3Q25wdWFESkViVVZPTVdZcmNteFpia3h2ZUdKd1JtTkpVVVp0U2l0bVRIUkRiVVZpTTA5dVREQkdabWRRZG05eFp6aHdWMmt6YkZwNU9WVmFjWE5PWXpRS1dFSkdLME55Y0ZsWFlYcGFiRlZDV2s5dVNERTFUbE5qVjI4dldFWXlkVzlzZWxSTGExaERPSFV5V2pKaE5rd3JaQzk0Y2xjck0zaFNUbXAzUlVwWlZ3cFVXakZzTVdkalppOWlVbTVHUW1wUGEzWllNMk5oVUdaaWJrRjFiRVZ6U2tFM2QwTkViemhTYldaTVlsZEpRV3RUV2t0RVZETnFSMmRFWW01TGFrbHhDa295TTNKUVJWSnRVR1ZHYWxSQ1dVZE9hM1UxYzFvMmNrSndabmx1TldOT2VUbEliRTl3WjNKNlZrZHVORkFyYTNBcllWSkNPWGxtTWpCR1MzbzFlVTBLVDNKT1lqSmFTR3gxZDFNeldHa3lMekJMU25SYWJqaE9ka2xWVlhod2IxZElSbGMyUzNkSlJFRlJRVUpCYjBsQ1FVRnpUelJTWVROUFRIaHhVRFIzVFFwNmNGWlZORko2WVRjM1NETkhOM0E0TkdVNFlqaFdNVzFhYVdaRU9HVk1hVGxEUTFkNmVVaFZabWQ2WVdVMFQwWTFNREpvYlV4dU16aG5WR05YTlRWT0NrUklkVWQxVEZwM2RIcE1SVVUyUkdWT1ZFVmhjRkI0Tmk5cU5qVnFVMHg0Y1ZoUlZGRnlja3RvYkhsMFpWQk9TbXRQY1dsalozSnlNazlpSzBaQ1kyVUtLM1ZtYTBGUFVrWm9iMHB0Y1hRMGVIbFNUVTlvT0dSb2EwTnFUWGxYZG5JeE1WZzJWelUwZW1aa01VVlVWRFpVTUZOaVNqRlNSMUYwWmtoVFEyZGlTUW93YmsxUWRFMVZUMmg2U1VWc1NXaERRblZsUjNNcloyTmpRblpXUkVKSmJXTnNaM2MxVm5wSlF6UkpNR2RGYTI0eGVHbFlNVnBNV1hKRk4zY3JSMG9yQ21sdmRVUmhaMkZ6VWtOeFRVUmtSREoyU1doSVlsbHpOMlJMWmlzMGJERXpkbEp3U0dFNGQycFRTVkIzUnk5WlYzcHhZV3BXTkVOT2RFMWFkVmM0Wlc0S2EzbGhRakpvUlVObldVVkJNVE5vZVdwMFZEVkJVR1pLYUU5NGFXOUdWR3c1VVU1TlJXcEVjazQxWVV0UWRWUlFhRWw2VkdwNWJVeFVkQzh6WldOTmNncDFPVVZXYzFkcGVIRjRWMFpVVlRoRlVVZFlRbXQzVUZVNFFuQjBRVzV4YkhsUE5FZFlXbEZYU21vNFZEaGlTSFpZTDBVMFFUVnhSazg0YUZwbVdHUnBDbW8wWVZJNFVVUk9PRXhLVFVwMmRqZFhNelpRVjJwNVNqZHpXRE5tU3prMEswMTZUM2t4TlhOSFRsWXpTU3RNTlRGa1JGSjFWRTFEWjFsRlFYaFBXRThLYzBOeU5UUjZiVGN6TDNkUVRESjZhVFZuTWpCR2QzaEpSRk5YVmxKd1NXRnFNREJ2ZGtwNVZTOUliRGR1VFdOa2FUWTBWRmhNWVZWREswMDBaa1JyVFFwb1FXbE9XbmQ2WWxwUGJYTnFTVXRGYVdSUmFFc3ZVbk5UZG1GbU9UVm1WMnRZVmxReFlUSkdaRUZ3V0c0dldrSlpUa3R1VjNBMGJUTnJTbFpNTUdVeENqUlhhMjlTYm5aSFlUQlFkSEp1WTAxRk9IUjZka0ZsYlRka05tUTBXWG95TlhvdlQzRjVhME5uV1VGc1REQlpiRE5DT0RCNVdUVm1aME5RZEVremJXb0tPVkJQTVRFdlpHWXlibm94UzJGMVpWcHRaRVZPTld0M0wxaHVTalkyUzNGblVWUk1XSGhRTmxGSVlVZDRka2x0TkhWcGNrcEhaMnhJTkhCalpWTnZVQXBMVUZNd1VscEJheTlhU0VacWFqSlFVWGxQTVdrek9HVjFRVFp3YkcxaVRpdG9NVXBwUTJkRFRpdE1iMll5WmpkbVJGaHNSSEp0U0VkWFkwTm1ORE5UQ2pob1ZtMUNNU3RGVldGTFJEaFFTRWx6YjJKbEwxRkxRbWRGVFhWVFpsSjJOVmN3ZWsxTVp5dDZOSFZXT0cxRlpWRmthM1pXY0VsMGVGbzBZbXRpV21RS1ZrVXpkV1Y1VFdRM1EwSldReXMyZUhsWFpIbzBSbGRwUWtrM1YwSkZRVEJxZEV0bVdESm5lVVp4Tm0xb1kxSnNVR0ZCTm5WSmVHNVZOMDUwSzJ0alRncExhbkZhUW5oVVRuaHdTVTExYzJadVpVUlRRME0yT0VGSlVVdE9la1JCU2pacVZVdFlSM2RUT1VaRU0zazBXV2htS3pacVEyTkVWbTFVWW5oSGRteFRDa2Q0YW5CQmIwZEJTM0JhWWpKeFlWZDVkME55WjIwd2RYTkJkWFpxUlhSdWFVTnZhblZDVnpSTFowMDRhVXh6VlVwRVN5OVJhSFJLWW05dE9WVTJPWGdLT0dNME0yaFVja3BUVVVVeVF5dERSVUZXYm1nMFZESmtlREZMTVRKcFJEa3ZaMHMxTlZsa2NYWkVNRlZsUTAxQmVIWlpSMFp2UVhwd2FUTkdhbTR3VXdwWEt6RkVTVWQzZWtKeU0xSkdhRmxSVWtaWk1DdENjREZUVTI5RU9HNTRMMU4xTUU1eVRXNWhObFVyUVhKWFkxWk9SbEU5Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K"
            },
            {
                "Filename": "manifests/etcd-metric-serving-ca-configmap.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtbWV0cmljLXNlcnZpbmctY2EKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKZGF0YToKICBjYS1idW5kbGUuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURKakNDQWc2Z0F3SUJBZ0lJQVM5NUNudnJQbGN3RFFZSktvWklodmNOQVFFTEJRQXdNVEVTTUJBR0ExVUUKICAgIEN4TUpiM0JsYm5Ob2FXWjBNUnN3R1FZRFZRUURFeEpsZEdOa0xXMWxkSEpwWXkxemFXZHVaWEl3SGhjTk1Ua3gKICAgIE1qQTVNVEExTmpBd1doY05Namt4TWpBMk1UQTFOakF3V2pBeE1SSXdFQVlEVlFRTEV3bHZjR1Z1YzJocFpuUXgKICAgIEd6QVpCZ05WQkFNVEVtVjBZMlF0YldWMGNtbGpMWE5wWjI1bGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKICAgIGdnRVBBRENDQVFvQ2dnRUJBTWRZdkVLQjBqT3JsSE1KejllWFlWVENwU2k5bW5mQUtKMTYydmcwZUQzS0pCTXcKICAgIGlnMjFSTzNFYVdMVUl4L2lJU1NLSWwwYU0zNVRreUtPb3FPT1ZzMUNDRTZ0TGx1Z2oydkdOUis4bnBzWGUrN0MKICAgIHBsQUhvU1ZYN0MwaGlIWWovQmhzREhrYWtFclcwYThpZzNIb1Z0WnlTdVBCSnAyTUpSRHdLVTQ1STNxMmxoVnIKICAgIDBWYThuQ05zNmd2WHNsV1FaVVZpcXVjR0ZMQjJOM2ZQdDJuZTFBWVczUHluRUw2NmdxMWtQeWdPRjBoRlJWQkgKICAgIGMxMnlVOTNGeS9ZRnNVTEM2c2NLNjFFYUlwME1NU1I3NUZYVVBvbWlaMkRZZUxIR1dDVDdvVERnWitwMnRiaUsKICAgIGJMcnkyNmo4M1VUZC9lQnVnc0lYQmFYa1ZlZGpuQ3NjZ3A4cEJEc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KICAgIEJBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkdQSUhrNkRQMVNYcWd6cjdMSHkKICAgIGc4ZENpVVMrTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFBTTB3ZEo0dy9zUGlOWjE3eU5MU2IxeURTWXpwQjMKICAgIFBYTGFZK05hZUVVNkYrZ3VrcWxHa0VnOW5QcFRXZENWZVp1NERQVVVLK2hFT1pvb0Q1cU0yNndqWjdNVWVVdUUKICAgICt0a01zNi82U1lLUC9QZmN0ekZVbklhaC9RRTVIQlNiNmQ2a1VHaW81aUdWdDV4OUZwejZnV0Zrd0lLbmNoMW4KICAgIDdXUGNvVWJzSmU0QU84Y2xSNHVtYzVudlEydm5vOVFYcVRneVNsNTd1MzhPN1p1M25NdzJ4dXY5d2w2VkZXTk4KICAgIG14eDBrR2tLUEZoNXRzaWFnRU5xTnVjaitHT01HT2RNd09QSFBsS2p2Q21wZEoyOHA2R0k1VURRU2lMKzBFKzkKICAgIFUvcDFNbzlsVHhjY2JkdkhMdkh5Zm4xZTVmamgxRCs4OVVmZVJRbnlyTTIxMmV6elNlaTRnN3pJCiAgICAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCiAgICAK"
            },
            {
                "Filename": "manifests/etcd-metric-signer-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2QtbWV0cmljLXNpZ25lcgogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNvbmZpZwp0eXBlOiBTZWNyZXRUeXBlVExTCmRhdGE6CiAgdGxzLmNydDogTFMwdExTMUNSVWRKVGlCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2sxSlNVUktha05EUVdjMlowRjNTVUpCWjBsSlFWTTVOVU51ZG5KUWJHTjNSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRWGROVkVWVFRVSkJSMEV4VlVVS1EzaE5TbUl6UW14aWJrNXZZVmRhTUUxU2MzZEhVVmxFVmxGUlJFVjRTbXhrUjA1clRGY3hiR1JJU25CWmVURjZZVmRrZFZwWVNYZElhR05PVFZScmVBcE5ha0UxVFZSQk1VNXFRWGRYYUdOT1RXcHJlRTFxUVRKTlZFRXhUbXBCZDFkcVFYaE5Va2wzUlVGWlJGWlJVVXhGZDJ4MlkwZFdkV015YUhCYWJsRjRDa2Q2UVZwQ1owNVdRa0ZOVkVWdFZqQlpNbEYwWWxkV01HTnRiR3BNV0U1d1dqSTFiR05xUTBOQlUwbDNSRkZaU2t0dldrbG9kbU5PUVZGRlFrSlJRVVFLWjJkRlVFRkVRME5CVVc5RFoyZEZRa0ZOWkZsMlJVdENNR3BQY214SVRVcDZPV1ZZV1ZaVVEzQlRhVGx0Ym1aQlMwb3hOakoyWnpCbFJETkxTa0pOZHdwcFp6SXhVazh6UldGWFRGVkplQzlwU1ZOVFMwbHNNR0ZOTXpWVWEzbExUMjl4VDA5V2N6RkRRMFUyZEV4c2RXZHFNblpIVGxJck9HNXdjMWhsS3pkRENuQnNRVWh2VTFaWU4wTXdhR2xJV1dvdlFtaHpSRWhyWVd0RmNsY3dZVGhwWnpOSWIxWjBXbmxUZFZCQ1NuQXlUVXBTUkhkTFZUUTFTVE54TW14b1ZuSUtNRlpoT0c1RFRuTTJaM1pZYzJ4WFVWcFZWbWx4ZFdOSFJreENNazR6WmxCME1tNWxNVUZaVnpOUWVXNUZURFkyWjNFeGExQjVaMDlHTUdoR1VsWkNTQXBqTVRKNVZUa3pSbmt2V1VaelZVeERObk5qU3pZeFJXRkpjREJOVFZOU056VkdXRlZRYjIxcFdqSkVXV1ZNU0VkWFExUTNiMVJFWjFvcmNESjBZbWxMQ21KTWNua3lObW80TTFWVVpDOWxRblZuYzBsWVFtRllhMVpsWkdwdVEzTmpaM0E0Y0VKRWMwTkJkMFZCUVdGT1EwMUZRWGRFWjFsRVZsSXdVRUZSU0M4S1FrRlJSRUZuUzJ0TlFUaEhRVEZWWkVWM1JVSXZkMUZHVFVGTlFrRm1PSGRJVVZsRVZsSXdUMEpDV1VWR1IxQkpTR3MyUkZBeFUxaHhaM3B5TjB4SWVRcG5PR1JEYVZWVEswMUJNRWREVTNGSFUwbGlNMFJSUlVKRGQxVkJRVFJKUWtGUlFVMHdkMlJLTkhjdmMxQnBUbG94TjNsT1RGTmlNWGxFVTFsNmNFSXpDbEJZVEdGWkswNWhaVVZWTmtZclozVnJjV3hIYTBWbk9XNVFjRlJYWkVOV1pWcDFORVJRVlZWTEsyaEZUMXB2YjBRMWNVMHlObmRxV2pkTlZXVlZkVVVLSzNSclRYTTJMelpUV1V0UUwxQm1ZM1I2UmxWdVNXRm9MMUZGTlVoQ1UySTJaRFpyVlVkcGJ6VnBSMVowTlhnNVJuQjZObWRYUm10M1NVdHVZMmd4YmdvM1YxQmpiMVZpYzBwbE5FRlBPR05zVWpSMWJXTTFiblpSTW5adWJ6bFJXSEZVWjNsVGJEVTNkVE00VHpkYWRUTnVUWGN5ZUhWMk9YZHNObFpHVjA1T0NtMTRlREJyUjJ0TFVFWm9OWFJ6YVdGblJVNXhUblZqYWl0SFQwMUhUMlJOZDA5UVNGQnNTMnAyUTIxd1pFb3lPSEEyUjBrMVZVUlJVMmxNS3pCRkt6a0tWUzl3TVUxdk9XeFVlR05qWW1SMlNFeDJTSGxtYmpGbE5XWnFhREZFS3pnNVZXWmxVbEZ1ZVhKTk1qRXlaWHA2VTJWcE5HYzNla2tLTFMwdExTMUZUa1FnUTBWU1ZFbEdTVU5CVkVVdExTMHRMUW89CiAgdGxzLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjJkSlFrRkJTME5CVVVWQmVERnBPRkZ2U0ZOTk5uVlZZM2R1VURFMVpHaFdUVXRzUzB3eVlXUTRRVzl1V0hKaEswUlNORkJqYjJ0RmVrTkxDa1JpVmtVM1kxSndXWFJSYWtnclNXaEtTVzlwV0ZKdmVtWnNUMVJKYnpacGJ6UTFWM3BWU1VsVWNUQjFWelpEVUdFNFdURklOM2xsYlhoa056ZHpTMjBLVlVGbGFFcFdabk5NVTBkSlpHbFFPRWRIZDAxbFVuRlJVM1JpVW5KNVMwUmpaV2hYTVc1S1N6UTRSVzF1V1hkc1JWQkJjRlJxYTJwbGNtRlhSbGQyVWdwV2NubGpTVEo2Y1VNNVpYbFdXa0pzVWxkTGNUVjNXVlZ6U0ZrelpEZ3JNMkZrTjFWQ2FHSmpMMHRqVVhaeWNVTnlWMUV2UzBFMFdGTkZWa1pWUldSNkNsaGlTbFF6WTFoTU9XZFhlRkZ6VEhGNGQzSnlWVkp2YVc1UmQzaEtTSFpyVm1SUksybGhTbTVaVG1nMGMyTmFXVXBRZFdoTlQwSnVObTVoTVhWSmNITUtkWFpNWW5GUWVtUlNUak01TkVjMlEzZG9ZMFp3WlZKV05USlBZMHQ0ZVVOdWVXdEZUM2RKUkVGUlFVSkJiMGxDUVVVdmJ6SjZZVkl3WkVKVGNFZFNhd281TkUxR2RFMWxSV0Y1Tld0eGRXNDRRbTkyZVU1d2NYVmtaRVJZUjJoVWVreFVVVWhwVVZWRE5tWm1jVGM1VjFaRlVrbFVjVmRxUnpKM1RqRjJlRXB2Q2s5UWRqRlZRV2hvZDNaREt6ZFZiR1p0U0RWellYUnJOVUpDT1VwcU5qSk1TelUwUkVsUE4xZFRkRGxuYUU1S1R6VkllSEIxTm5CRlNYSnNUbGRoY1hBS00wTlZjVXhNTUhvdldqbEZlWGhVTW0wNWEzQllTRll4TlVOdlNrWjBla2MxTUZncmJUSmFWRWxSZFUxU2IySlBSWEJCZUhwbWVHdDRkWGt2ZHpNeU9BcDFhRFpQVkhKRlNWSk1lbXBUVUVjMU1GSmlibHBUY0ZVMVkzRXZUR0pYY1RCVk5UZERUbWt3WlU1MlFWSm5NRWRUTmpkT2JVUnBWbUZuZW5CTFJFUk5DbTUwYzFjMU4zbG5aM2hMVVVaM1lYRTJSeXMzZUc1WmR6aDVUM0VyTkZneksxcDZZbk5VTm0xbk9WQXJhbGh3V2tkTFdVNUpNSGRoYlM5d00zQTNOR01LY1ZaeVJsaElhME5uV1VWQkwxWlhMMHRMUld0dlVpdFBibXhvZUd0VU9HTkZUblY1ZFVsaFlWQXpjVkZTWkZwdWRXdFFSbTlxZUhoWmNYSkVMMHd2UXdwdE5GQlBiVzVOUTJnNGNWTlhURFF2ZDJ4dFVXVTRhbXBhWWt0WmNYaEtZbTVSTVZWc01rdERjbk5GVUZCS1IwcHpNMmhQT1VndlpXZHpUVkZpVFhCS0NsaFJiRk5CUlU5T1pXRTFLMFZZVjJwSVQzaDBjelpQTkdKV1dUWnBWM0F2Ym5NclZIWktXR2h6YjNWc1RtaHhaemxtWnpOVFkyTkRaMWxGUVhsWVIxZ0tOWGMxYWsxNlVEZFpWRTVUYm5FNVZURlBZaTkzTURkNFJtdExaM0k0SzBrNGEzQnJhMUZKY1ZadVZsSmlLM0ZwVUZoclZHWnVhbU54ZUc1VWN6RkJVUXBXWXpOT2FGWTVRV1l4WjBKVlltUndWVVpwUlZjek16TnVXamhZYlVwb2JFcHhPV1phVDNOVWRUZDVkMnB0Y0RCM1YxUXhiR1pTTkRneVUxUmFURGhvQ2pWdVozQkpTMFlyY2pSdk1VRTVUSGRxUVc4M2RGVkZZWFpHVlM5YU4zVnJZblZPVVd0bE1FTm5XVUl5WVRVeU1qbFdVekZEU2xwWVUwbHhWakZqVm1RS01FRlZSVWx6T1RWMWRWbDZOM2g0TDNkdGVHaEJVbGxVYUVSWGJrMVdRbUk1T0c5a1FXOVFPVk1yUlV4SlMzVllVWFI1TmsxR1lYb3hSRGwyVVVZMldRb3hTVVpzV0c5UmRVRnJjMGxEYUZGMlZUVTJPSGhuVlZOYVVFdEtiVU50YUVaMGJFSkVSa3hYZGxreGNYaGxNbWRsU21oNlREWllibGhxV25kM09YRjVDazUxUVdSbFNXRlFUM0F6V1RRMmRUUk1kbHBTVVhkTFFtZEZkaTlxUWxORGVrSkJhMDh5UjBoalJrMXVlVXhTZERGbE5VVlhVbHBTTW5KbFdtSTBkMmdLV0hWSFMxWkthVGQxUW1GdFEyTkdlR0pXV2xsdFRVRkJhRmR5ZGl0TmJUSldRMUpQVGtaSlYzcExRMk4wY1VjeVZUTkZSa1JEWTNWUU1FOHhjM1YxZFFwWVEyOUNkV3BqYjNvNU9XRTRSMDlMUTBaRmFtODBTVWd6YzJWNWFVVkxaamhNZHpjd1ZWTXJkWEJQVUhkSGNrVTNXbEJNVmxJdllXUlpjRmxOTkdkWENsRkhOV1JCYjBkQlRTdEJRa3BoTm1ad1ltcE1NbVZXVERoM1RuaGpRVzh4ZEdkUFoySmtRa3RMVjNoMmIzSXdUa2RoTmtjNVprczJOMHBGVEVnNVdVMEtaRFpqU0M5TU1HTmhhSEF6ZUhReWF6ZFFSR2x6U0ZOTEsxVXlaM2RCTXpCRGJqWlhTRzV1Y1V0TFVrRlBWQzlTYVhscmQzWm9kVWRtYkdGNVNIcG5hQXBYZWtSM1dWbFVVMUZwYkd4SFNrd3hiMUptUVU1RFJFcFhLMVZzV0cxb09VNXRibnBRWW5JNVJYWjFXQzgzUW5oRlVrazlDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQo="
            },
            {
                "Filename": "manifests/etcd-namespace.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogTmFtZXNwYWNlCm1ldGFkYXRhOgogIG5hbWU6IG9wZW5zaGlmdC1ldGNkCiAgYW5ub3RhdGlvbnM6CiAgICBvcGVuc2hpZnQuaW8vbm9kZS1zZWxlY3RvcjogIiIKICBsYWJlbHM6CiAgICBvcGVuc2hpZnQuaW8vcnVuLWxldmVsOiAiMSIK"
            },
            {
                "Filename": "manifests/etcd-service.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VydmljZQptZXRhZGF0YToKICBuYW1lOiBldGNkCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtZXRjZAogIGxhYmVsczoKICAgICMgdGhpcyBsYWJlbCBpcyB1c2VkIHRvIGluZGljYXRlIHRoYXQgaXQgc2hvdWxkIGJlIHNjcmFwZWQgYnkgcHJvbWV0aGV1cwogICAgazhzLWFwcDogZXRjZApzcGVjOgogIHNlbGVjdG9yOgogICAgazhzLWFwcDogZXRjZAogIHBvcnRzOgogIC0gbmFtZTogZXRjZAogICAgcG9ydDogMjM3OQogICAgcHJvdG9jb2w6IFRDUAogIC0gbmFtZTogZXRjZC1tZXRyaWNzCiAgICBwb3J0OiA5OTc5CiAgICBwcm90b2NvbDogVENQCg=="
            },
            {
                "Filename": "manifests/etcd-serving-ca-configmap.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IGV0Y2Qtc2VydmluZy1jYQogIG5hbWVzcGFjZTogb3BlbnNoaWZ0LWNvbmZpZwpkYXRhOgogIGNhLWJ1bmRsZS5jcnQ6IHwKICAgIC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQogICAgTUlJREdEQ0NBZ0NnQXdJQkFnSUlJMllCbWt6R3ZrSXdEUVlKS29aSWh2Y05BUUVMQlFBd0tqRVNNQkFHQTFVRQogICAgQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMQogICAgTlRsYUZ3MHlPVEV5TURZeE1EVTFOVGxhTUNveEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVVNQklHQTFVRQogICAgQXhNTFpYUmpaQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDaQogICAgQWJuZHRGL2h5M1IzZ3JLcWxjU1BHMjYzSzgvaElxR3VlRFlQYUlwNW0zQXVtZjBpKzIwNm5GdlVWRHZ0NCtvVQogICAgd0M4TVVmeUY1bWdxaG52Q0xnRTlvUmFiZHNNdmh4UDgwSGhwVVlHYU9iMG9neUdmN1J6eDd3cmNYVjZqajJKMAogICAgTWZRQUgvaWdzM1NmNGdjdm9XWHpMenEydzFKZkhCbUR6NnAzaUhacDFIdkFlS1FZTkxxSThYaXdVUUo3YWV6dAogICAgV1BQcG1nYVZRWTkvL0hNNUFOVVY2T1dHbzlXZW5FYmtNY1lOSmVEa2tYKzVYbldQTzBWdFhEd1dmb2dTWTcxbgogICAgdzBpeUMrRlp2RjRvTVNXb3JKOGIrZklVWEtzUlVpQmI5RzZrcFQxZXNLckZOYUZ3bG94dU9DenFEa0Q1cXlsSAogICAgWXVCQndnRmNna3lBRHI0d2JsT3pBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgogICAgQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSd1Q2bWFwTVZCQVkvTVdLMFpEMXQ4SGRXUlNUQU5CZ2txaGtpRwogICAgOXcwQkFRc0ZBQU9DQVFFQVdoN0RiNldBMmswd2Q5ZTVHZldWdUl4Q041MXpHNlF3VkowVkVyMm1NRVdsdmJtcAogICAgdWxPUmx4N2VVYkQrMmtPbnYwQ0FLZUVuVWNaQk1aY1l5eUNOOFhnZ0UvSnkxZ1NldmZNeE1GSEh1cjE2QUVmYwogICAgSVdET2J2clQvb1c3NXdET2dQcXpwVUlIYnA5WlRyKzQ5YTZ2eTBidDlWNC9VMjBwZTNkb3hVdUQyWmZ1QmlrOAogICAgcVBTUkFTWnNyS1dSUEJIVmdNa3QzK1Blbjd1UmdmV0huUlluUDhESUpxa0JIc21xSk02WDZiV2d2OUpIalFHQQogICAgeVN4V1J4YlVLMllsR0JJR1B4MXVqenVoY1Q2SWM3TENWYUtUSVI1RWI1WlpveWphYWg1SS93NHBlWDFYQ2lCTgogICAgRXdvdmtucmxUZlpMVGROSHRQVURWaVZzY2hrc3VNaEZDQ0ZBL3c9PQogICAgLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQogICAgCg=="
            },
            {
                "Filename": "manifests/etcd-signer-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGV0Y2Qtc2lnbmVyCiAgbmFtZXNwYWNlOiBvcGVuc2hpZnQtY29uZmlnCnR5cGU6IFNlY3JldFR5cGVUTFMKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSSFJFTkRRV2REWjBGM1NVSkJaMGxKU1RKWlFtMXJla2QyYTBsM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZExha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTVVhkRloxbEVWbEZSUkVWM2RHeGtSMDVyVEZoT2NGb3lOV3hqYWtGbFJuY3dlRTlVUlhsTlJHdDRUVVJWTVFwT1ZHeGhSbmN3ZVU5VVJYbE5SRmw0VFVSVk1VNVViR0ZOUTI5NFJXcEJVVUpuVGxaQ1FYTlVRMWM1ZDFwWE5YcGhSMnh0WkVSRlZVMUNTVWRCTVZWRkNrRjRUVXhhV0ZKcVdrTXhlbUZYWkhWYVdFbDNaMmRGYVUxQk1FZERVM0ZIVTBsaU0wUlJSVUpCVVZWQlFUUkpRa1IzUVhkblowVkxRVzlKUWtGUlEya0tRV0p1WkhSR0wyaDVNMUl6WjNKTGNXeGpVMUJITWpZelN6Z3ZhRWx4UjNWbFJGbFFZVWx3TlcwelFYVnRaakJwS3pJd05tNUdkbFZXUkhaME5DdHZWUXAzUXpoTlZXWjVSalZ0WjNGb2JuWkRUR2RGT1c5U1lXSmtjMDEyYUhoUU9EQklhSEJWV1VkaFQySXdiMmQ1UjJZM1VucDROM2R5WTFoV05tcHFNa293Q2sxbVVVRklMMmxuY3pOVFpqUm5ZM1p2VjFoNlRIcHhNbmN4U21aSVFtMUVlalp3TTJsSVduQXhTSFpCWlV0UldVNU1jVWs0V0dsM1ZWRktOMkZsZW5RS1YxQlFjRzFuWVZaUldUa3ZMMGhOTlVGT1ZWWTJUMWRIYnpsWFpXNUZZbXROWTFsT1NtVkVhMnRZS3pWWWJsZFFUekJXZEZoRWQxZG1iMmRUV1RjeGJncDNNR2w1UXl0R1duWkdORzlOVTFkdmNrbzRZaXRtU1ZWWVMzTlNWV2xDWWpsSE5tdHdWREZsYzB0eVJrNWhSbmRzYjNoMVQwTjZjVVJyUkRWeGVXeElDbGwxUWtKM1owWmpaMnQ1UVVSeU5IZGliRTk2UVdkTlFrRkJSMnBSYWtKQlRVRTBSMEV4VldSRWQwVkNMM2RSUlVGM1NVTndSRUZRUW1kT1ZraFNUVUlLUVdZNFJVSlVRVVJCVVVndlRVSXdSMEV4VldSRVoxRlhRa0pTZDFRMmJXRndUVlpDUVZrdlRWZExNRnBFTVhRNFNHUlhVbE5VUVU1Q1oydHhhR3RwUndvNWR6QkNRVkZ6UmtGQlQwTkJVVVZCVjJnM1JHSTJWMEV5YXpCM1pEbGxOVWRtVjFaMVNYaERUalV4ZWtjMlVYZFdTakJXUlhJeWJVMUZWMngyWW0xd0NuVnNUMUpzZURkbFZXSkVLekpyVDI1Mk1FTkJTMlZGYmxWaldrSk5XbU5aZVhsRFRqaFlaMmRGTDBwNU1XZFRaWFptVFhoTlJraElkWEl4TmtGRlptTUtTVmRFVDJKMmNsUXZiMWMzTlhkRVQyZFFjWHB3VlVsSVluQTVXbFJ5S3pRNVlUWjJlVEJpZERsV05DOVZNakJ3WlROa2IzaFZkVVF5V21aMVFtbHJPQXB4VUZOU1FWTmFjM0pMVjFKUVFraFdaMDFyZERNclVHVnVOM1ZTWjJaWFNHNVNXVzVRT0VSSlNuRnJRa2h6YlhGS1RUWllObUpYWjNZNVNraHFVVWRCQ25sVGVGZFNlR0pWU3pKWmJFZENTVWRRZURGMWFucDFhR05VTmtsak4weERWbUZMVkVsU05VVmlOVnBhYjNscVlXRm9OVWt2ZHpSd1pWZ3hXRU5wUWs0S1JYZHZkbXR1Y214VVpscE1WR1JPU0hSUVZVUldhVlp6WTJocmMzVk5hRVpEUTBaQkwzYzlQUW90TFMwdExVVk9SQ0JEUlZKVVNVWkpRMEZVUlMwdExTMHRDZz09CiAgdGxzLmtleTogTFMwdExTMUNSVWRKVGlCU1UwRWdVRkpKVmtGVVJTQkxSVmt0TFMwdExRcE5TVWxGYjNkSlFrRkJTME5CVVVWQmIyZEhOVE5pVW1ZMFkzUXdaRFJMZVhGd1dFVnFlSFIxZEhsMlVEUlRTMmh5Ym1jeVJESnBTMlZhZEhkTWNHNDVDa2wyZEhSUGNIaGlNVVpSTnpkbFVIRkdUVUYyUkVaSU9HaGxXbTlMYjFvM2QyazBRbEJoUlZkdE0ySkVURFJqVkM5T1FqUmhWa2RDYldwdE9VdEpUV2dLYmlzd1l6aGxPRXN6UmpGbGJ6UTVhV1JFU0RCQlFpODBiMHhPTUc0clNVaE1Oa1pzT0hrNE5uUnpUbE5ZZUhkYVp6Z3JjV1EwYURKaFpGSTNkMGhwYXdwSFJGTTJhVkJHTkhOR1JVTmxNbTV6TjFacWVqWmFiMGRzVlVkUVppOTRlazlSUkZaR1pXcHNhSEZRVm01d2VFYzFSRWhIUkZOWVp6VktSaTkxVmpVeENtcDZkRVppVm5jNFJtNDJTVVZ0VHpsYU9FNUpjMmQyYUZkaWVHVkxSRVZzY1V0NVprY3ZibmxHUm5seVJWWkpaMWN2VW5Wd1MxVTVXSEpEY1hoVVYyZ0tZMHBoVFdKcVozTTJaelZCSzJGemNGSXlUR2RSWTBsQ1dFbEtUV2RCTml0TlJ6VlVjM2RKUkVGUlFVSkJiMGxDUVVWR1NWbHpZVlpVWlVodFNUUjFXZ3BNYW1kU1dFRkRlVGxFTVRWMVV6UnRlak5LU0ROTWFpdDZibHBOYW1KemNITkdhblJoYTIxd1FXeFJaMnRZYlN0VmRrTkVkRlJJU1hjdlMwNU5NRXRZQ25GTU1Vb3pjRkZuUjNOVlVUWlllRFJsVkZKNVMxZE9MMUppVDBwUGRFWmtZbWx3VFRKV1NXZHRiMkpOVmxSMWFIQjJTR1IzTURWa2F6aHViVXB6VUdFS2VVUjVTVlpHV0ZodVZtaFRaM2h1ZVdJNVIzVXlRMjFOTkhaTGJqSmxOblExVFc1c2JXRkhRMU50YUVnclIzWlVVVlV6VjFwMU1tTkxlVkIzTTA1dWJncFRibEpZYldRd2RGWmFVamMxVVZBdlRqUlhiRVZRTW5wbE9XSklOMlZsYzFwVVVtbzFOSFl4WWxOaGRtbFlWVWRyTkdsTlVUZ3ZVVWcxTm1ReVkyWjJDazlzTVRZeGJsTmtaVFpMUzBGd05XMUlNemhuT1ZsU0sydzFVMkZUY1daT1pWWkVNM0pSWms1RGJFbHBSWG8yZGtGQlZsQnljVlJIYVZGaWFHVTJNMmNLVTB4TVoyazBSVU5uV1VWQmVFazVRa0ZXU25WdGMzVklVbkZ5T1VKNFJ5dERUR2xKYVZjclVVMTBaV3B0YlU1VlVUTjJVM051WVM5cWIyOU1SV1V2TlFwMFptbzJTMVF5ZG1aS1JtMUhhRFpOTWsxYU9YUnFTblIzVlc5S1RuZG5kRUpSZFdoNlVqbDFaRTVsVkhNeE16RlNSRmh2YTNORlZUaExlRkl6U0c1WENreHljakZyZUU5MlpucERNVXhUYURCaVNEbFNMME5SYkVFMU16aE9kV0ZtYlVWV1dXNDNSbEZ3VFVwdlpIVmxiM1pYTjI5YWJrMURaMWxGUVRCMkswMEtaR1ZqVWxsWFpHRTRSR3gzUVcxVWNWQlhWMVk1ZVZGM2RYVTNPRzlNYVdRNGF6TmFSV3RNVHpKbk5UTnVaVEJ2UzNwc1UzUmliWGxGWnk5WE4yVnNSd3AzZGxjMlUzaG9RamhQYnpKRVpXWnFXR3g2V201eU1sZGhOM2hJUTNoSVRsZGlMMmRtTDB0WVdVVTJhbVZLVG5ONllXMHpTbUp3YW5aSVdrTmtTbk5wQ21Sc1NuRTVaRTV6WkRoYUwxazVTVmxaYlU1aWFtRjRSRVJDZVVkT1JVRmxXRWhrVm5walJVTm5XVUpzVjFobmNrNXNXRkpsZVVKR1ZDdFZibll2TkRnS1owOXViRGcyUW0xc2MyNUZNRmhMYUZkVVpFdDZaUzh6YW5wWmJVTmFZVFJRWVdrdmJYYzNhRXhDWkRWWlJXTXZabmhzVXpKTE1pc3ZSek5FT0c1T1JRcEtjblJJUTA4emNsVlVlbGhRTlhNemEwcFNZa1o2VHpBMVUxWlJhVmxJYld4dlFVcFdhREJ1WkM5WWVsVjFhVEZEVUVVNVJWZFpSV1F6UjFVelZsWjBDa3hzVTBWQmRXMVRRM0YyVTI4MlFtVkVUa2hKUVZGTFFtZEVTRTlZVDNWbU5XSjRiVll4VFVwWEsxWlZlVTgxUWxGdmMyRkpaRFpsWkRCbVFrUktaV0lLZUV4bVNYbFhZM3B5ZDNrMldrcGlMMkYzVXpKc2RFRnZjVkZXZWpSV05ETXZkMlZ0TjBSdVowd3lOVTAxUzBSeWNtWnpTWEZoT0RSMlJsSnBiVmRUY3dwS1IxSlFZMWRuYzFvck5GbGljME5HV2xaUmEydFdTakZZS3paRGFVUnZRamR1Yld0MFNpODFXRk42UlRsVWFWVldOVWw2Y2xsbU5GYzNNazUyVW5vMkNteHRhVUpCYjBkQ1FVbzVWVlYyU0dwTFVUUlJUelIzTWl0ck5uZEZiVGxRY201d2NtaG9RbGRLVlV0UmNsTXdhbUpDY1dsRU9FdGpibTF0T0ZsSk5WSUtPRGxMTkdscU1HZFJMM2hrZDNCTU1YQTVUMll3TjJWd2MybDFPVXRVVFhoc1FYTlRZMWh4UVhSR1FUaFBTSFV6V2xGc2IwNTFVMEpxWkRGamVYTXpVZ3BWWlVsUE5VSkZPVGRZWVZOdFkwWkhlV1Y0VjJoWU56UlRPVzVJYldOTk1WaDBTRmhsVUhaalF5OTFOR1V3WVV0dlJIbGFDaTB0TFMwdFJVNUVJRkpUUVNCUVVrbFdRVlJGSUV0RldTMHRMUzB0Q2c9PQo="
            },
            {
                "Filename": "manifests/kube-cloud-config.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IGt1YmUtY2xvdWQtY2ZnCiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp0eXBlOiBPcGFxdWUKZGF0YToKICBjb25maWc6ICIiCg=="
            },
            {
                "Filename": "manifests/kube-system-configmap-root-ca.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogQ29uZmlnTWFwCm1ldGFkYXRhOgogIG5hbWU6IHJvb3QtY2EKICBuYW1lc3BhY2U6IGt1YmUtc3lzdGVtCmRhdGE6CiAgY2EuY3J0OiB8CiAgICAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KICAgIE1JSURFRENDQWZpZ0F3SUJBZ0lJU3VKUFBLNC96Lzh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKICAgIEN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5YjI5MExXTmhNQjRYRFRFNU1USXdPVEV3TlRVMU9Gb1gKICAgIERUSTVNVEl3TmpFd05UVTFPRm93SmpFU01CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHkKICAgIGIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0Q1dWQysrQ3VHb0gKICAgIERhTnFRMlFYZWdNRlJpQmY5WHN1ek95ckxTSThGcis1RTFudXBFekp2WTQ4NnRKWE02bkFpK2o1bVo1MDBDZGYKICAgIEMya2ZBTVVzaHo0Vlk1dlhQbG9xaHhWRG1aSHJTenNWTkw0VU9XbkZ1Q3BkZkxvdmg4MXRzVDlXS3FBMWEyVjUKICAgIG1jV0FiNFltcGlJSmZSaFk3TVBhVDcyS3pnakFtR0JSV3FYQktlaTdBTXFHRnRJTjQ4eTZhU3ExbFBhTU53cnoKICAgIEdxMzlhQnRTNmltZjRpZ3dIcTFxNUJqcEluOUIvNXNLR2hTV3lMa0F0ZXZZelI4c0FBZHBnZzI0bFp5bFJucTkKICAgIGpYMkJ2d2h2V2wzNEErd2xadmovYmtqT3hKYVpJRmMrNDJaTWUrVVMyYUpxTmhQY0J2SXJBTitKN09yYW15VzEKICAgIDcvTVFmZjhVZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKICAgIC96QWRCZ05WSFE0RUZnUVVRU0xEZ1NDQ0NsbE5VbmZaQnh0MnRQM01LZGd3RFFZSktvWklodmNOQVFFTEJRQUQKICAgIGdnRUJBR2krZ3Q0ZFdSUkFlUk13eGVXN0JZQnZoSERvc2xnMEZyZXkram5sQ0c3UkNPL05ZczRNK290VjNlbFUKICAgIDBjL3FLeDVjWUZHTDFtVGFhUDFmemlHdGdNamlnZVljL3NiN01ISCtDa3Z5OHNmMi9OdmJna040RUtodDhUTWIKICAgIDdrUVlSbkxRT0JmME5majVqcmRHWFVLYU5Oc3h1MzNRbDJsNzdxdnpZMzJLMExtdUhDK3llL1F3Sm9kdUk3aFMKICAgIGNmdjI4azVyVkprY0owK0s3SCtpRzVscmZZV1NSY3JPZzlFcDBuL0JTWHV6NkxvZG5zNlljZnFqeGdzc2trTXYKICAgIE5hT1BIRUVYRzc2RUc3UGt1dEx1WDRJeTV3N2wvUzBvSng5ekgxNkFIbzVSY3JvQStzVzdINnBzbS9rMkg3b2MKICAgIGQxRUJGeklXQllIT2V2ZUVBUnl1YTVzSWJidz0KICAgIC0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KICAgIAo="
            },
            {
                "Filename": "manifests/machine-config-server-tls-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0Cm1ldGFkYXRhOgogIG5hbWU6IG1hY2hpbmUtY29uZmlnLXNlcnZlci10bHMKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1tYWNoaW5lLWNvbmZpZy1vcGVyYXRvcgp0eXBlOiBPcGFxdWUKZGF0YToKICB0bHMuY3J0OiBMUzB0TFMxQ1JVZEpUaUJEUlZKVVNVWkpRMEZVUlMwdExTMHRDazFKU1VSbWVrTkRRVzFsWjBGM1NVSkJaMGxKUVZsNVkyVnJjVE5TYlRCM1JGRlpTa3R2V2tsb2RtTk9RVkZGVEVKUlFYZEtha1ZUVFVKQlIwRXhWVVVLUTNoTlNtSXpRbXhpYms1dllWZGFNRTFTUVhkRVoxbEVWbEZSUkVWM1pIbGlNamt3VEZkT2FFMUNORmhFVkVVMVRWUkpkMDlVUlhkT1ZGVXhUMFp2V0FwRVZFazFUVlJKZDA1cVJYZE9WRmwzVFZadmQwNTZSVEZOUkUxSFFURlZSVUY0VFhOWldFSndURmRzZFdSRE5XcGlTRlo2WkVkV2VVeFVUVEJOTWxsMUNtTXlSblZhUjBwMlpVUkZNazVxVFhWaU0wSnNZbTVTYzFsNU5XcGlNakIzWjJkRmFVMUJNRWREVTNGSFUwbGlNMFJSUlVKQlVWVkJRVFJKUWtSM1FYY0taMmRGUzBGdlNVSkJVVVJLZUZSRlZVeG1jbGMzUm1odVRFcGpOMGhaVTFwUk9UazFRalJ0U0ZsVU16UjJibnBUTjI5MGNsSTRiV1U1ZDBSRlZGUXpXUXB6TXl0SmRFbDZVR2x4VVd0cVUzWktRM1V3WkhGa05DOWpMMjFQWlhaWGFVNXljMmhvUVRCNVJubDRTa1JMWlVSTU0zSkpPV2hLVHpOSmVWbHNkbUZrQ21sRk1XTnNSMVIxUldwR1RIcHNZbFZoTldsR2JtRlViM2wzTWxkV1RGUnFlRVp4ZGtOek5rWnFaVFp6ZGpGbVVsUjJObFoyYzFVdk5VaHplVmxEZUdVS2NEZzFMelp4UkZacVlYUlJVbkZYUTBObWMzWkNPRGs1ZG14d1dsWlBha2wzZURaamJERjRTWFp0WjBaWVNWSk1Welo1VEU1WFpHVTFZWFUyVWtwbVFnb3ZXa2x1ZG5sWWQyMDNkRUZZWjNnMGQzcFJkVzVuVlVoaVFrVnVkRXhpUm5oMFJXazViVmhVWTNaMWR6bEZTVTlZTDBKV1ltSlNNSGRFVUd3d1MwWlpDbE5DVGtadU9UaE9NemhFVUdoS1RsQXhZMHBEU0hoR2VTOXhaM292T0haYVFXZE5Ra0ZCUjJwbldqaDNaMXAzZDBWM1dVUldVakJzUWtGM2QwTm5XVWtLUzNkWlFrSlJWVWhCZDBWM1JFRlpSRlpTTUZSQlVVZ3ZRa0ZKZDBGRVFXUkNaMDVXU0ZFMFJVWm5VVlZSVTB4RVoxTkRRME5zYkU1VmJtWmFRbmgwTWdwMFVETk5TMlJuZDBoM1dVUldVakJxUWtKbmQwWnZRVlZSVTB4RVoxTkRRME5zYkU1VmJtWmFRbmgwTW5SUU0wMUxaR2QzVG5kWlJGWlNNRkpDUkVGM0NreHZTWE5aV0VKd1RGZHNkV1JETldwaVNGWjZaRWRXZVV4VVRUQk5NbGwxWXpKR2RWcEhTblpsUkVVeVRtcE5kV0l6UW14aWJsSnpXWGsxYW1JeU1IY0tSRkZaU2t0dldrbG9kbU5PUVZGRlRFSlJRVVJuWjBWQ1FVTlFNQzlYVUVkcVVtbE9jbVY1VGtSU2VEQlFiMWs1V2pCck1tNDFPRTlxUlRRNFJFOUdVd29ySzNrNFZWUk9WMUJMV0hrMVdVNWthVFJ3Tm1RdlQwTndLMUZ4TTFVeE9XTllWMjlyTWtrclpWbGpUWFVyZDB4RVdVdE1XSGc0VUZneVN6UlhSRTlIQ210b2JuUm5jeTkxVEdJclZVeDBjbWt3WW1kMlpUWlRRbEJOTjBabVdUUTJUMnB0VmtGa1pEaGlSMFkxWnpRMFJGcEhURnBoVEdFemFVVkVkMWhuUm1rS1ZFMXBRVWg2WjBGU2RIRTRlbGhzWTJwNGVHSkROa1JKU201dmEzWTFVazFRTUUxU1ZVZHJObmRRV2s5b2JHTlpUbEZrVlhaT2VYWkJNMVJtYVc1VWJRcHNlRFYyWmpNMGIxY3ZiR1pCVHpCS1VtaE1ZelJSUTNZeWFHdE5kamd6WldaMWVXSXZUMHcyTUdnMk9XNUpNbmh2YXpZNWRuZEZOWE5pTmpSbWJFMU1Da0pLUW5sWlJETjZRVVJQYmk4clNrMTBRVFpSVVhvdk1HdDBWREVyVFVGdGMwZG9UbGRvYzNKTFdrMUhRMVpKUFFvdExTMHRMVVZPUkNCRFJWSlVTVVpKUTBGVVJTMHRMUzB0Q2c9PQogIHRscy5rZXk6IExTMHRMUzFDUlVkSlRpQlNVMEVnVUZKSlZrRlVSU0JMUlZrdExTMHRMUXBOU1VsRmIzZEpRa0ZCUzBOQlVVVkJlV05WZUVaRE16WXhkWGhaV25sNVdFOTRNa1Z0VlZCbVpWRmxTbWd5UlRrclREVTRNSFUyVEdFd1prcHVkbU5CQ25oRk1Ea3lURTR2YVV4VFRYbzBjV3RLU1RCeWVWRnlkRWhoYm1WUU0xQTFhbTV5TVc5cVlUZEpXVkZPVFdoamMxTlJlVzVuZVRrMmVWQlpVMVIwZVUwS2JVcGlNbTVaYUU1WVNsSnJOMmhKZUZNNE5WY3hSM1ZaYUZveWF6Wk5jMDVzYkZNd05EaFNZWEozY2s5b1dUTjFja3c1V0RCVk55dHNZamRHVUN0U053cE5iVUZ6V0hGbVQyWXJjV2N4V1RKeVZVVmhiR2RuYmpkTWQyWlFabUkxWVZkV1ZHOTVUVTFsYmtwa1kxTk1OVzlDVm5sRlV6RjFjMmw2Vm01WWRWZHlDblZyVTFoM1pqSlRTamM0YkRoS2RUZFJSalJOWlUxTk1FeHdORVpDTW5kU1NqZFRNbmhqWWxKSmRscHNNRE5NTjNOUVVrTkViQzkzVmxjeU1HUk5RWG9LTldSRGFGZEZaMVJTV2k5bVJHUXZRWG8wVTFSVU9WaERVV2c0VW1OMk5tOU5MeTlNTWxGSlJFRlJRVUpCYjBsQ1FVWXdXVXhMVEdjM1EwZEtMM1ZtY2dwMlVVMDNhRlpwY0RWcmQxUllSRTF2WmsweGRVcHRNakJRYjA5TVNtTXpRWEpaZG14RU5tOVRaRGM1T1dad1MzSndlbmgxU0d0MWRWUlBWVzgwVkVKd0NuUkVWVE5MYlhCcU1HdGxUMmhCUVdWcVVVcFFXVzFMTWpNelNXeG9lVVF6ZUdFNFNubEdUelk1WldKSVYxTkpNMHB4VDFKWGNVczNNbWt5WTBwUFFqY0tMelZNYWtadGMxbDROMkZJZUNzek4wcExjSHA0Ymt3clpscDRaRVJIUjBSNVZTdENTV3RDVkVWWGNrdHVaRE4xYUc1S1FUaG9aVEpTUkRoNlpqUlZWQW8xZUdaRlEyWmhNR0UxWlRkSFMwbFhUR05aV1hGWlFqaG1iR012V21ad2IyYzNlRVF5YlZCTk5VMWlZbEZEV0dwNmVGZFNXams1ZWxObE0zTjVaMjlJQ2t4V1JETTVkR1ZoVGs5U2VFdDVjVlUxUTA5elYzUmtkV0ZUTXpSNVoxTnNUMGxqVDJaeE9WTm5ValJQYUhCUmVFSjBjVXhLTUhScldGbHJjRlI1U21zS1kyOU5XVVJ0UlVObldVVkJNRVJWY0U5WVJsbFJZbkZXVFVoU1NGUkdVa051ZGpBMVRtMW9aVTlpV1U5eFdVOVZVbVkwTW14aWExTjRibmxaUjBGaVNncG5ZMmRqYkV4RVUxa3pRa1o1VlRCVFJraDJVakpGTW5CNU5UaElUMk16T1hwMk9YQkxNWFJIYVdJMVQwVnplR1JQYzBGUmQwOTVXak5OWjBsMFlqQnlDaXRoY1ZBeFNpODFlV3BZYWtoaVVXMWhjbFYyY2t4VVRYaGpXRVZ1ZDNsVVRqQndhRzk2Y0U5eVltNVdNbWhHU1VsS1p6aDFLekJEWjFsRlFTdENXRUVLZUZKSUwxbHVORnBoVFNzeU1VdERaRmR0UVRkSllWWjBZVlZpU25SMmMxcDJVVmRTUlRoTlRYZHBaSE56YmpVM2JsUXpZa05wUWpnM01WVkpaSEpvTUFwR01XcDJSVFZRUTJaaU5UWmtNbXN4VTJsd2RYTm5RMDlvU1dseUwxbzJSMkkyYUM5V2JHeDVUa0l6Y25SalpFWlNiRTVEZVRaVlJFY3dVWFUxYmpOVUNtUjFWamw0WW5wU2RsSlJjbVZHVlRSRWNVUTFTV2d4VW5oUVVsTTVORkF3U2l0Q09GTm9NRU5uV1VWQmVsRnNPVXB0WkRkaVdXTnpRV3RMVVUxQ1prOEtXRGR0Y0ZSUE5ITXhTa28wUkM5R1Z6VkVTemRYUjJsbmJEZDZPVWh5VVZsWWRXeE9Wa0pTY0hFMmJGWTBRelEwZG5Sc1RYaHpSamhyT1hoNFFtcHFXUXBYU3k5dWVIUXliRTF0UzNCcGFFOWtVVUV3UTNOeGNVNTJkMFo1Y1d3Mk16TnhPV0kwZURCRWNGZEhOVE51WlZwWFdEVkRhVGhoYXpOaFMzSjRZVVpvQ201S1NuZFpiMnMyUlVKVmVFSjNXRGQ2VEZZdlNXVlZRMmRaUW05b1QyMXdXRmhNUjAxVVFrNVhlVE5DUjFWWlUwaElZblJNZDBGUmJWcFdSV1JVWjJJS2VtVjFXV04wVnl0UGRGQjBkelpKWVRGclQyaFhXbmx3VkVvM04xQmhNRlJhVWtkamIzVlZVRU41UVZocVVXazFhbGhWUkc4ek5XNHdhR280UTJwNlJBcGpRemQwTVRGT2NFbzJNekU0VGxZM01HNXdVM2c1ZFhWTmFWTTRWVkZwTVdvcmVGVlZZaTltZEVVMk5FeE9ZMjlQY1U5aWRuUlRSR05TWnk5V1lWZFpDalF4WjFvNVVVdENaME52V0dwbmVUaHhURkpGZVVSTVJsQnBOemRzVmxBeFYwRlBSMU5RV0hjMGFEZE1kbFJuUTBSTWJtOUNUWEZpWlVSTEwzaFBjMFlLUTFWQ1VUZHpTbTlHTDNsclZrWXpUa0ZNVlVWdmVEQklaV3MyY3pOWUx6Y3hjV0V5T0ZCTlZ6VTRlVEJhVUhSR1JYaG9XRmxyVVhGcEwzazJiM1JTZVFwbFNEaGxWM2dyYVRkNlZsUnJjSEpSYjNWTFNVNDJOV2xVU1ZkNE1EbHJTamcyUXpsRU4zaDBORGcxUWxoTVpIUjBka3B3Q2kwdExTMHRSVTVFSUZKVFFTQlFVa2xXUVZSRklFdEZXUzB0TFMwdENnPT0K"
            },
            {
                "Filename": "manifests/openshift-config-secret-pull-secret.yaml",
                "Data": "YXBpVmVyc2lvbjogdjEKa2luZDogU2VjcmV0CnR5cGU6IGt1YmVybmV0ZXMuaW8vZG9ja2VyY29uZmlnanNvbgptZXRhZGF0YToKICBuYW1lc3BhY2U6IG9wZW5zaGlmdC1jb25maWcKICBuYW1lOiBwdWxsLXNlY3JldApkYXRhOgogIC5kb2NrZXJjb25maWdqc29uOiBleUpoZFhSb2N5STZleUpqYkc5MVpDNXZjR1Z1YzJocFpuUXVZMjl0SWpwN0ltRjFkR2dpT2lKaU0wSnNZbTVPYjJGWFdqQk1XRXBzWWtkV2FHTXlWWFJhUjFZeVN6SmFiR0pIYkRSWk1sWjFaRWRXZFZwWVNtaGlWMVo1WVZjMWRrMVhjRFJsUkdzd1QxZFNkR016V2pOWldFSXdZVzB4Ym1WSE9YcGhia0p6VDFoYWIwOXJOVVZUTUhoSlUyeEdXRk13WkU5UlZVbDRUVVJXVmxKR1pGcFNNWEJYVTFSYVZWVXdSVFZPTUhoRlRWUkNURTFyWjNkTk1ERklVekJzVkZORmRFNVJWRnBTVkd0NFlVOVdZek5SYkdONlVURndVbFZHYnowaUxDSmxiV0ZwYkNJNkltWmxiR2w0TG1ObGJuUXViV1Z5YVc1dlFHaHZkRzFoYVd3dVpYTWlmU3dpY1hWaGVTNXBieUk2ZXlKaGRYUm9Jam9pWWpOQ2JHSnVUbTloVjFvd1RGaEtiR0pIVm1oak1sVjBXa2RXTWtzeVdteGlSMncwV1RKV2RXUkhWblZhV0Vwb1lsZFdlV0ZYTlhaTlYzQTBaVVJyTUU5WFVuUmpNMW96V1ZoQ01HRnRNVzVsUnpsNllXNUNjMDlZV205UGF6VkZVekI0U1ZOc1JsaFRNR1JQVVZWSmVFMUVWbFpTUm1SYVVqRndWMU5VV2xWVk1FVTFUakI0UlUxVVFreE5hMmQzVFRBeFNGTXdiRlJUUlhST1VWUmFVbFJyZUdGUFZtTXpVV3hqZWxFeGNGSlZSbTg5SWl3aVpXMWhhV3dpT2lKbVpXeHBlQzVqWlc1MExtMWxjbWx1YjBCb2IzUnRZV2xzTG1WekluMHNJbkpsWjJsemRISjVMbU52Ym01bFkzUXVjbVZrYUdGMExtTnZiU0k2ZXlKaGRYUm9Jam9pVGxSRk5FNXFWVFZOVkdnNFpGZG9ha3hVUmt0bFJtYzFUa1JzUlZSV1RsZFdNa1ozVmtkd2RGb3hhRkJqTUhCM1lrUnNWMU5FY0d4bFZYQnZXV3RrYW1GVk9YQlRiRTVXWld4V05GUlhiRXRQVXpWc1pWVndObHBHWkVwaFZUbHdVMWhvV2xZd2NIRlhiWEJxVGtVeFNGWnRjRkJTTVVWM1ZGWmtSazFXYkhGaFIzQk9ZV3hHTTFkclVrNWxiR3Q1VmxSQ1dsWkdWWGRYV0d4TFQxTTFUbVZ1WkdsbFJ6UXpaRmRTY0ZWR1RuWmlhelF6V25wV2RGSnFaekJqUlZWNVRtNXNhVlZyZEVsWFJrcDFVVmQwZGxneFVrWlJWMUoyVFRGQ1VsZFlUa05VYWxKTFRVVXhNV0o2UWpOVWJXaEhaRVZPZUZrelRtMVpNVWsxVDFWYWMyVlVUalpOUm1SeFZWYzVjVkZZY0ZsV1ZHUjJVbXRSTlU5V1duSk1WMDVLVkVkc00xSklhRzFTYlZKbVkzcHNiMlZWUm5aT00wVXpZVlZLZUZWclpFdGFTRXBZWkVSU2FXUlhXbEppYVRGSFZtczRNV05ITUhwaVJ6VkhWRlZzUlU1R1RYcGhNa3BDWVROVmQyRkZkREJqVjBaTFRqTmtWR05JVGtkaVZtYzBUMWRzUW1OdWNIVldha1p2VWxSQ2FWSXhjR1pWVjJ4Q1RtNUNhRk5WVWpCV01XeG9UMVpDYVZkWVozcGFWMUpyV1ZkS1QxcFdaekpoVlZVeFRUSjRTMWw2WkRaWmF6bDZVbFpDVVUweGNHNVphM2hQV2taa2MxRnNaRmRhYW1oUFRqQndlRTlGZURSaU1EbHpZV3QzTTFwdFpFaFlNMHBhVmpOS1NtSXhXa1ZhYkZZMFZGTXhSbFpXYkhGVk1scG1WVlZSTldJeU9WZGlNakIzV1dreFdFMXRValZhUkVsM1dsUkdkbFJzYkVOUFIzUjBZWHBPZDJOck9EVmlTRlpSV2tWMFZreFdWbGRpYWtKcVZrVk9RMUZxVms1WGJrWlpaR3BrYkU1WGJHdGpWM0JFWlZkT1YxSlZhSE5STW1oV1RWWktjbFpYUmtwTlNHaHVWRk14U2sxc2IzcGxSbEpoV0ROd1ZtTnJSa2RPVjJSaFdtMUtkRTR3U2tKVWJURnVZek5KTkU1R2JGUlBSV040VmtSa2NGSnNPREpaTWxwTFZtMWtNR1JVV2tsVk1FWkZZbFJLY1U1V2FITlVWbXgxWkVkV1JsbDVNSGRVUlRGaFpGTXhkVlZZVmxGUFIxcDBaVVZ3TVZsdFRUTlVWMDVtVVc1T1JGTlVhSEJhTUhoQ1RWWktWVk5xVW5obFJHeHZXVlZvV21NeVVqVldibWhtV2pCU1RWcHBNVWxPVmxZeFpFUkZlbFF6Um1sUFNFbzFWRWRHZUZZd1JYaGpTR3gyVGtSa2JsSllUVFJoV0c4eFVWZDNNRnBIV2pKUmJHaE9ZVEp3ZDJWR1VqVlVhbVJRWkZkd1ZGcEZiRmRaV0Vaell6SnNjRmg2V210U1JFSm9WREZPTTJWWGFITmllVEZOVjBWR2FXVnJUalJOVld0MFdrVlNOVmxwTVVwalNFNXRXV3hhZW1Nd1ZuQk5ibkJyVG01c1IyRkhUbGhqTWpWVlpHMWtUR1ZzU25waU1XUktUakJXVGxaRlpGWlVTR1I1Wldwc2VVMXRTbWhoU0VwWFZUQk9iRlpyY0hSbGJEZzBZbFJPTVZGVlNqWldiWGhxV2tkT01WUnRSa1JXVjJ4c1ZVZHdVVTV1Y0ZKaWJWSjBVMjVGTkZWdVNqSmlWVFZRVmxjMWFtRXdiR2hXVkVFeVRXdG9jVlF6Um5oYU1IQklZM2M5UFNJc0ltVnRZV2xzSWpvaVptVnNhWGd1WTJWdWRDNXRaWEpwYm05QWFHOTBiV0ZwYkM1bGN5SjlMQ0p5WldkcGMzUnllUzV5WldSb1lYUXVhVzhpT25zaVlYVjBhQ0k2SWs1VVJUUk9hbFUxVFZSb09HUlhhR3BNVkVaTFpVWm5OVTVFYkVWVVZrNVhWakpHZDFaSGNIUmFNV2hRWXpCd2QySkViRmRUUkhCc1pWVndiMWxyWkdwaFZUbHdVMnhPVm1Wc1ZqUlVWMnhMVDFNMWJHVlZjRFphUm1SS1lWVTVjRk5ZYUZwV01IQnhWMjF3YWs1Rk1VaFdiWEJRVWpGRmQxUldaRVpOVm14eFlVZHdUbUZzUmpOWGExSk9aV3hyZVZaVVFscFdSbFYzVjFoc1MwOVROVTVsYm1ScFpVYzBNMlJYVW5CVlJrNTJZbXMwTTFwNlZuUlNhbWN3WTBWVmVVNXViR2xWYTNSSlYwWktkVkZYZEhaWU1WSkdVVmRTZGsweFFsSlhXRTVEVkdwU1MwMUZNVEZpZWtJelZHMW9SMlJGVG5oWk0wNXRXVEZKTlU5VlduTmxWRTQyVFVaa2NWVlhPWEZSV0hCWlZsUmtkbEpyVVRWUFZscHlURmRPU2xSSGJETlNTR2h0VW0xU1ptTjZiRzlsVlVaMlRqTkZNMkZWU25oVmEyUkxXa2hLV0dSRVVtbGtWMXBTWW1reFIxWnJPREZqUnpCNllrYzFSMVJWYkVWT1JrMTZZVEpLUW1FelZYZGhSWFF3WTFkR1MwNHpaRlJqU0U1SFlsWm5ORTlYYkVKamJuQjFWbXBHYjFKVVFtbFNNWEJtVlZkc1FrNXVRbWhUVlZJd1ZqRnNhRTlXUW1sWFdHZDZXbGRTYTFsWFNrOWFWbWN5WVZWVk1VMHllRXRaZW1RMldXczVlbEpXUWxGTk1YQnVXV3Q0VDFwR1pITlJiR1JYV21wb1QwNHdjSGhQUlhnMFlqQTVjMkZyZHpOYWJXUklXRE5LV2xZelNrcGlNVnBGV214V05GUlRNVVpXVm14eFZUSmFabFZWVVRWaU1qbFhZakl3ZDFscE1WaE5iVkkxV2tSSmQxcFVSblpVYkd4RFQwZDBkR0Y2VG5kamF6ZzFZa2hXVVZwRmRGWk1WbFpYWW1wQ2FsWkZUa05SYWxaT1YyNUdXV1JxWkd4T1YyeHJZMWR3UkdWWFRsZFNWV2h6VVRKb1ZrMVdTbkpXVjBaS1RVaG9ibFJUTVVwTmJHOTZaVVpTWVZnemNGWmphMFpIVGxka1lWcHRTblJPTUVwQ1ZHMHhibU16U1RST1JteFVUMFZqZUZaRVpIQlNiRGd5V1RKYVMxWnRaREJrVkZwSlZUQkdSV0pVU25GT1ZtaHpWRlpzZFdSSFZrWlplVEIzVkVVeFlXUlRNWFZWV0ZaUlQwZGFkR1ZGY0RGWmJVMHpWRmRPWmxGdVRrUlRWR2h3V2pCNFFrMVdTbFZUYWxKNFpVUnNiMWxWYUZwak1sSTFWbTVvWmxvd1VrMWFhVEZKVGxaV01XUkVSWHBVTTBacFQwaEtOVlJIUm5oV01FVjRZMGhzZGs1RVpHNVNXRTAwWVZodk1WRlhkekJhUjFveVVXeG9UbUV5Y0hkbFJsSTFWR3BrVUdSWGNGUmFSV3hYV1ZoR2MyTXliSEJZZWxwclVrUkNhRlF4VGpObFYyaHpZbmt4VFZkRlJtbGxhMDQwVFZWcmRGcEZValZaYVRGS1kwaE9iVmxzV25wak1GWndUVzV3YTA1dWJFZGhSMDVZWXpJMVZXUnRaRXhsYkVwNllqRmtTazR3Vms1V1JXUldWRWhrZVdWcWJIbE5iVXBvWVVoS1YxVXdUbXhXYTNCMFpXdzROR0pVVGpGUlZVbzJWbTE0YWxwSFRqRlViVVpFVmxkc2JGVkhjRkZPYm5CU1ltMVNkRk51UlRSVmJrb3lZbFUxVUZaWE5XcGhNR3hvVmxSQk1rMXJhSEZVTTBaNFdqQndTR04zUFQwaUxDSmxiV0ZwYkNJNkltWmxiR2w0TG1ObGJuUXViV1Z5YVc1dlFHaHZkRzFoYVd3dVpYTWlmWDE5Cg=="
            }
        ]
    },
    "*manifests.Networking": {
        "Config": {
            "kind": "Network",
            "apiVersion": "config.openshift.io/v1",
            "metadata": {
                "name": "cluster",
                "creationTimestamp": null
            },
            "spec": {
                "clusterNetwork": [
                    {
                        "cidr": "10.128.0.0/14",
                        "hostPrefix": 23
                    }
                ],
                "serviceNetwork": [
                    "172.30.0.0/16"
                ],
                "networkType": "OpenShiftSDN"
            },
            "status": {}
        },
        "FileList": [
            {
                "Filename": "manifests/cluster-network-01-crd.yml",
                "Data": "Ci0tLQojIFRoaXMgaXMgdGhlIGFkdmFuY2VkIG5ldHdvcmsgY29uZmlndXJhdGlvbiBDUkQKIyBPbmx5IG5lY2Vzc2FyeSBpZiB5b3UgbmVlZCB0byB0d2VhayBjZXJ0YWluIHNldHRpbmdzLgojIFNlZSBodHRwczovL2dpdGh1Yi5jb20vb3BlbnNoaWZ0L2NsdXN0ZXItbmV0d29yay1vcGVyYXRvciNjb25maWd1cmluZwphcGlWZXJzaW9uOiBhcGlleHRlbnNpb25zLms4cy5pby92MWJldGExCmtpbmQ6IEN1c3RvbVJlc291cmNlRGVmaW5pdGlvbgptZXRhZGF0YToKICBuYW1lOiBuZXR3b3Jrcy5vcGVyYXRvci5vcGVuc2hpZnQuaW8Kc3BlYzoKICBncm91cDogb3BlcmF0b3Iub3BlbnNoaWZ0LmlvCiAgbmFtZXM6CiAgICBraW5kOiBOZXR3b3JrCiAgICBsaXN0S2luZDogTmV0d29ya0xpc3QKICAgIHBsdXJhbDogbmV0d29ya3MKICAgIHNpbmd1bGFyOiBuZXR3b3JrCiAgc2NvcGU6IENsdXN0ZXIKICB2ZXJzaW9uczoKICAtIG5hbWU6IHYxCiAgICBzZXJ2ZWQ6IHRydWUKICAgIHN0b3JhZ2U6IHRydWUK"
            },
            {
                "Filename": "manifests/cluster-network-02-config.yml",
                "Data": "YXBpVmVyc2lvbjogY29uZmlnLm9wZW5zaGlmdC5pby92MQpraW5kOiBOZXR3b3JrCm1ldGFkYXRhOgogIGNyZWF0aW9uVGltZXN0YW1wOiBudWxsCiAgbmFtZTogY2x1c3RlcgpzcGVjOgogIGNsdXN0ZXJOZXR3b3JrOgogIC0gY2lkcjogMTAuMTI4LjAuMC8xNAogICAgaG9zdFByZWZpeDogMjMKICBuZXR3b3JrVHlwZTogT3BlblNoaWZ0U0ROCiAgc2VydmljZU5ldHdvcms6CiAgLSAxNzIuMzAuMC4wLzE2CnN0YXR1czoge30K"
            }
        ]
    },
    "*manifests.Openshift": {
        "FileList": [
            {
                "Filename": "openshift/99_binding-discovery.yaml",
                "Data": "a2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjFiZXRhMQptZXRhZGF0YToKICBuYW1lOiBkaXNjb3ZlcnkKcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IENsdXN0ZXJSb2xlCiAgbmFtZTogc3lzdGVtOmRpc2NvdmVyeQpzdWJqZWN0czoKLSBraW5kOiBHcm91cAogIG5hbWU6ICdzeXN0ZW06dW5hdXRoZW50aWNhdGVkJwotIGtpbmQ6IEdyb3VwCiAgbmFtZTogJ3N5c3RlbTphdXRoZW50aWNhdGVkJwo="
            },
            {
                "Filename": "openshift/99_cloud-creds-secret.yaml",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBhd3MtY3JlZHMKZGF0YToKICBhd3NfYWNjZXNzX2tleV9pZDogUVV0SlFWcE9WekpOUjBjelNGcElTVE5hUjB3PQogIGF3c19zZWNyZXRfYWNjZXNzX2tleTogUTFodFVrVlJXWEIxUkRWSldFdHhaVzFFVUdkMWNrTkpRVzR2Y1U1Nk1VWnNUa2hDVWxoSGRnPT0K"
            },
            {
                "Filename": "openshift/99_kubeadmin-password-secret.yaml",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IEpESmhKREV3SkRBNGFFOUpZV2h6T0hsMVJFVTFaelExY0hseGN5NUxlVFJJVEVOTWVGQnJaSEpvY1dVd1lYbGpURzVuWnpSWFdXRnVXSE5QCg=="
            },
            {
                "Filename": "openshift/99_role-cloud-creds-secret-reader.yaml",
                "Data": "a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQogIG5hbWU6IGF3cy1jcmVkcy1zZWNyZXQtcmVhZGVyCnJ1bGVzOgotIGFwaUdyb3VwczogWyIiXQogIHJlc291cmNlczogWyJzZWNyZXRzIl0KICByZXNvdXJjZU5hbWVzOiBbImF3cy1jcmVkcyJdCiAgdmVyYnM6IFsiZ2V0Il0K"
            }
        ]
    },
    "*openshift.BindingDiscovery": {
        "FileList": [
            {
                "Filename": "templates/binding-discovery.yaml",
                "Data": "a2luZDogQ2x1c3RlclJvbGVCaW5kaW5nCmFwaVZlcnNpb246IHJiYWMuYXV0aG9yaXphdGlvbi5rOHMuaW8vdjFiZXRhMQptZXRhZGF0YToKICBuYW1lOiBkaXNjb3ZlcnkKcm9sZVJlZjoKICBhcGlHcm91cDogcmJhYy5hdXRob3JpemF0aW9uLms4cy5pbwogIGtpbmQ6IENsdXN0ZXJSb2xlCiAgbmFtZTogc3lzdGVtOmRpc2NvdmVyeQpzdWJqZWN0czoKLSBraW5kOiBHcm91cAogIG5hbWU6ICdzeXN0ZW06dW5hdXRoZW50aWNhdGVkJwotIGtpbmQ6IEdyb3VwCiAgbmFtZTogJ3N5c3RlbTphdXRoZW50aWNhdGVkJwo="
            }
        ]
    },
    "*openshift.CloudCredsSecret": {
        "FileList": [
            {
                "Filename": "templates/cloud-creds-secret.yaml.template",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0Ke3stIGlmIC5DbG91ZENyZWRzLkFXU319CiAgbmFtZTogYXdzLWNyZWRzCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLkF6dXJlfX0KICBuYW1lOiBhenVyZS1jcmVkZW50aWFscwp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PcGVuU3RhY2t9fQogIG5hbWU6IG9wZW5zdGFjay1jcmVkZW50aWFscwp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5WU3BoZXJlfX0KICBuYW1lOiB2c3BoZXJlLWNyZWRzCnt7LSBlbmR9fQpkYXRhOgp7ey0gaWYgLkNsb3VkQ3JlZHMuQVdTfX0KICBhd3NfYWNjZXNzX2tleV9pZDoge3suQ2xvdWRDcmVkcy5BV1MuQmFzZTY0ZW5jb2RlQWNjZXNzS2V5SUR9fQogIGF3c19zZWNyZXRfYWNjZXNzX2tleToge3suQ2xvdWRDcmVkcy5BV1MuQmFzZTY0ZW5jb2RlU2VjcmV0QWNjZXNzS2V5fX0Ke3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuQXp1cmV9fQogIGF6dXJlX3N1YnNjcmlwdGlvbl9pZDoge3suQ2xvdWRDcmVkcy5BenVyZS5CYXNlNjRlbmNvZGVTdWJzY3JpcHRpb25JRH19CiAgYXp1cmVfY2xpZW50X2lkOiB7ey5DbG91ZENyZWRzLkF6dXJlLkJhc2U2NGVuY29kZUNsaWVudElEfX0KICBhenVyZV9jbGllbnRfc2VjcmV0OiB7ey5DbG91ZENyZWRzLkF6dXJlLkJhc2U2NGVuY29kZUNsaWVudFNlY3JldH19CiAgYXp1cmVfdGVuYW50X2lkOiB7ey5DbG91ZENyZWRzLkF6dXJlLkJhc2U2NGVuY29kZVRlbmFudElEfX0KICBhenVyZV9yZXNvdXJjZV9wcmVmaXg6IHt7LkNsb3VkQ3JlZHMuQXp1cmUuQmFzZTY0ZW5jb2RlUmVzb3VyY2VQcmVmaXh9fQogIGF6dXJlX3Jlc291cmNlZ3JvdXA6IHt7LkNsb3VkQ3JlZHMuQXp1cmUuQmFzZTY0ZW5jb2RlUmVzb3VyY2VHcm91cH19CiAgYXp1cmVfcmVnaW9uOiB7ey5DbG91ZENyZWRzLkF6dXJlLkJhc2U2NGVuY29kZVJlZ2lvbn19Cnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLk9wZW5TdGFja319CiAgY2xvdWRzLnlhbWw6IHt7LkNsb3VkQ3JlZHMuT3BlblN0YWNrLkJhc2U2NGVuY29kZUNsb3VkQ3JlZHN9fQp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5WU3BoZXJlfX0KICB7ey5DbG91ZENyZWRzLlZTcGhlcmUuVkNlbnRlcn19LnVzZXJuYW1lOiB7ey5DbG91ZENyZWRzLlZTcGhlcmUuQmFzZTY0ZW5jb2RlVXNlcm5hbWV9fQogIHt7LkNsb3VkQ3JlZHMuVlNwaGVyZS5WQ2VudGVyfX0ucGFzc3dvcmQ6IHt7LkNsb3VkQ3JlZHMuVlNwaGVyZS5CYXNlNjRlbmNvZGVQYXNzd29yZH19Cnt7LSBlbmR9fQo="
            }
        ]
    },
    "*openshift.KubeadminPasswordSecret": {
        "FileList": [
            {
                "Filename": "templates/kubeadmin-password-secret.yaml.template",
                "Data": "a2luZDogU2VjcmV0CmFwaVZlcnNpb246IHYxCm1ldGFkYXRhOgogIG5hbWVzcGFjZToga3ViZS1zeXN0ZW0KICBuYW1lOiBrdWJlYWRtaW4KZGF0YToKICBrdWJlYWRtaW46IHt7LkJhc2U2NEVuY29kZWRLdWJlYWRtaW5Qd0hhc2h9fQo="
            }
        ]
    },
    "*openshift.NetworkCRDs": {
        "FileList": [
            {
                "Filename": "templates/cluster-networkconfig-crd.yaml",
                "Data": "IyBUaGlzIGlzIHRoZSBhZHZhbmNlZCBuZXR3b3JrIGNvbmZpZ3VyYXRpb24gQ1JECiMgT25seSBuZWNlc3NhcnkgaWYgeW91IG5lZWQgdG8gdHdlYWsgY2VydGFpbiBzZXR0aW5ncy4KIyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL29wZW5zaGlmdC9jbHVzdGVyLW5ldHdvcmstb3BlcmF0b3IjY29uZmlndXJpbmcKYXBpVmVyc2lvbjogYXBpZXh0ZW5zaW9ucy5rOHMuaW8vdjFiZXRhMQpraW5kOiBDdXN0b21SZXNvdXJjZURlZmluaXRpb24KbWV0YWRhdGE6CiAgbmFtZTogbmV0d29ya3Mub3BlcmF0b3Iub3BlbnNoaWZ0LmlvCnNwZWM6CiAgZ3JvdXA6IG9wZXJhdG9yLm9wZW5zaGlmdC5pbwogIG5hbWVzOgogICAga2luZDogTmV0d29yawogICAgbGlzdEtpbmQ6IE5ldHdvcmtMaXN0CiAgICBwbHVyYWw6IG5ldHdvcmtzCiAgICBzaW5ndWxhcjogbmV0d29yawogIHNjb3BlOiBDbHVzdGVyCiAgdmVyc2lvbnM6CiAgLSBuYW1lOiB2MQogICAgc2VydmVkOiB0cnVlCiAgICBzdG9yYWdlOiB0cnVlCg=="
            }
        ]
    },
    "*openshift.RoleCloudCredsSecretReader": {
        "FileList": [
            {
                "Filename": "templates/role-cloud-creds-secret-reader.yaml.template",
                "Data": "a2luZDogUm9sZQphcGlWZXJzaW9uOiByYmFjLmF1dGhvcml6YXRpb24uazhzLmlvL3YxYmV0YTEKbWV0YWRhdGE6CiAgbmFtZXNwYWNlOiBrdWJlLXN5c3RlbQp7ey0gaWYgLkNsb3VkQ3JlZHMuQVdTfX0KICBuYW1lOiBhd3MtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5BenVyZX19CiAgbmFtZTogYXp1cmUtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZWxzZSBpZiAuQ2xvdWRDcmVkcy5PcGVuU3RhY2t9fQogIG5hbWU6IG9wZW5zdGFjay1jcmVkcy1zZWNyZXQtcmVhZGVyCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLlZTcGhlcmV9fQogIG5hbWU6IHZzcGhlcmUtY3JlZHMtc2VjcmV0LXJlYWRlcgp7ey0gZW5kfX0KcnVsZXM6Ci0gYXBpR3JvdXBzOiBbIiJdCiAgcmVzb3VyY2VzOiBbInNlY3JldHMiXQp7ey0gaWYgLkNsb3VkQ3JlZHMuQVdTfX0KICByZXNvdXJjZU5hbWVzOiBbImF3cy1jcmVkcyJdCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLkF6dXJlfX0KICByZXNvdXJjZU5hbWVzOiBbImF6dXJlLWNyZWRlbnRpYWxzIl0Ke3stIGVsc2UgaWYgLkNsb3VkQ3JlZHMuT3BlblN0YWNrfX0KICByZXNvdXJjZU5hbWVzOiBbIm9wZW5zdGFjay1jcmVkZW50aWFscyJdCnt7LSBlbHNlIGlmIC5DbG91ZENyZWRzLlZTcGhlcmV9fQogIHJlc291cmNlTmFtZXM6IFsidnNwaGVyZS1jcmVkcyJdCnt7LSBlbmR9fQogIHZlcmJzOiBbImdldCJdCg=="
            }
        ]
    },
    "*password.KubeadminPassword": {
        "Password": "bWE4R-A3Ycd-y2rTz-kXwKK",
        "PasswordHash": "JDJhJDEwJDA4aE9JYWhzOHl1REU1ZzQ1cHlxcy5LeTRITENMeFBrZHJocWUwYXljTG5nZzRXWWFuWHNP",
        "File": {
            "Filename": "auth/kubeadmin-password",
            "Data": "YldFNFItQTNZY2QteTJyVHota1h3S0s="
        }
    },
    "*rhcos.Image": "ami-02fdd627029c0055b",
    "*tls.APIServerProxyCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJQ0dTaHJ5YmV5L0F3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRreE1qQTVNVEExTmpBeApXaGNOTVRreE1qRXdNVEExTmpBeVdqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUE3dmJpZHY0SXo1MUlyZzF2c2lGeVgzeW9rMWhXL3FYWFFnS0hURFZSQmdJTAp0MlBBdGtVQzdFVU5Gemw0a2pnY05tZnl0SmNXNkpQS0hjSlROa0lHYWdWK2krYkJiVkovM3hHVXQ4cGFRRXRUCmhwOXdBMW9RN1pwZjhQYTdoNGlWUlR5YWRkK0VuYmJnYnZOVjlOWkJuNTQ3NGJaOFNaZy9UczJFL3NPd2wvd1UKeVNSWTJ4VEdkVnd2RmhtdGYxYUtEVURjZC9EdDI3MnlrY05uYXVFcVducDhLbXRHWEN3RHRjNkF1L21td1RiWQpPZkNHY2MySGhLb3pDc2lNb1loMWZtT2pEMkJQY0EybFMvZGR6cGxBMmtzeXN4T2EwelFCMTA5SGx4R2JJZVlGCmV1ZjJ5VXdJb0Y0WWFIbzhOQlpUalpXZGpmTENSYmlKamZ6RDVHTi9Td0lEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVVQ4RG1TSFlpRnRJekpqNDVvcmZQNkkwQnhNWXdId1lEVlIwakJCZ3dGb0FVVDhEbVNIWWlGdEl6CkpqNDVvcmZQNkkwQnhNWXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS2hyTFQ3L1pnay9wY1Y1K0twU0pZdWcKSWs0TWNsRUNSRVh2OGV2RHliN0ZYYnh6dW40MXNVZHE3UGQwUENLaDlKS0NJNSswTEl6bU9odm90dHFYL3BaVgo2ZkZkcHRMTzViNFEwRE9HTWxkbHZKSWhkemg0ZkFKdVZvSTFmVzh5UWtxUVNmTVR4cWFnTFl5Uml3ckdaQ3NqCnVNMHlLM0tqMHNiSEVqM1RLQ0FEcVp2bUFwM3ZBRHA5c3pTV0hMQVZ2VmVSV2lqZ0ZEeW5kNk9LVmlMTXcwZ00KUmdRanJqUUZobjlZalJYVUV6RDIvaEtPMjFYN3hYL0RDaHozeWQ5UXdpeWdDcWJyN3p1dVFndVhVaWFPVGhNMQpLdVEySFlZVDJSb1lyZWJwL29aaUtOTU5EeGczNEttMzJxdDRSSG4yNlZyRW5DUm1ub0VjQ3hhZHJpYk1sWFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBN3ZiaWR2NEl6NTFJcmcxdnNpRnlYM3lvazFoVy9xWFhRZ0tIVERWUkJnSUx0MlBBCnRrVUM3RVVORnpsNGtqZ2NObWZ5dEpjVzZKUEtIY0pUTmtJR2FnVitpK2JCYlZKLzN4R1V0OHBhUUV0VGhwOXcKQTFvUTdacGY4UGE3aDRpVlJUeWFkZCtFbmJiZ2J2TlY5TlpCbjU0NzRiWjhTWmcvVHMyRS9zT3dsL3dVeVNSWQoyeFRHZFZ3dkZobXRmMWFLRFVEY2QvRHQyNzJ5a2NObmF1RXFXbnA4S210R1hDd0R0YzZBdS9tbXdUYllPZkNHCmNjMkhoS296Q3NpTW9ZaDFmbU9qRDJCUGNBMmxTL2RkenBsQTJrc3lzeE9hMHpRQjEwOUhseEdiSWVZRmV1ZjIKeVV3SW9GNFlhSG84TkJaVGpaV2RqZkxDUmJpSmpmekQ1R04vU3dJREFRQUJBb0lCQVFEaHg1Qm5mMVFSM1hqTApRdFN6Q0ZrSkVUNHhvWGpvdHdhd1RyVkk4dU12K3dUWTdENHJ1UDZ1Ly9zRFk0Q2hIclRCVHV1SloydjBxWmFCCkVaY1BuOGh4cWVsTUErWGtCZHZkaHIzdC9SblN2NWtXakZRSVJyUFIyMWNrMCtxUmZ5SVNQZFZ1NDVab2NWNlMKVmdWMEJIQVNnUzN3OER0MFNZNGZSWjJRSEpNZ3RPL1NROXV3d1lScEs3RWlESktycmJJQ0xUSjJ4QUdrb2prQwpSSzlsR21iQVd4aDM0SU04V3UrZVd4c3RaMmV1ZGtDbEhNM050eGxWelV4SGI0SWVlaElHL1hRckcyS2wvQW5uCmoraCtJcFNuSU1oSlhSOUFYVS8rdGRJRnNvYTVRYjgrcGNYOS9sdWdXdXczU2NLMHczV2dPTWo1UWQzQlB4dnQKQnNoR3FxRnBBb0dCQVA3ZlYrZmhCbi9pMHpXRGlKcHYram93aFA1dXNhd0pOeXIxdHdhZ2ZHNVcydVJNTGo1bgo2YjM5SnExMithOTk0anpiZ0tyT3hLRHRab1lVeVdpWXJUOE4xM2Jzb250YUNPVmQ2cjUvSTBRMTdNQUhES3RJClJnK29OWHBKRkU0VGgxT3dvY0oxZjV0OXNpTEtjaW1YSVZsWWk3MTJLMCtkaXZWdStmSnVsR3o5QW9HQkFQQUYKaGtoTkRod1BpUUxHeStrc28yQ3pwNVBpS3ZHUWp5V25UN3M2c3M2aHhQQm9qUzZxQkw3czVkRWdOLzVaaVQyQQprbTcyOGViRDBqdjJuUkNKakVwNVphZ1hsS3dwNXRXYWdROTloVlNFajkwUEw4U0U1MG5QZFdvL3NlWGNXdmFaCmpCdlAyTVhjNHZmVUNzanF3NGVQYXJRNVFWTzJFLys4aFZIOVZmUG5Bb0dCQUo0dU96NThXQzVTdGtiR0phZkQKeTRjRnllU25Dcm44MWpKaFlZQkpaakNNMHpsUlZub0F2LzdiK0g4OEVlYXF1QmlSR3AvbngvMGdtYnFwZC83awprdEZKWStvNUh2WnpnSVhwN2VEZ3d5QjRYMEVtbnVSRzdNU1czdW5RSlR2M3ZzdGdHbVMzeThUVEZCV25rNGJnCmR5QWVaa3ZsNVNkNlhWM0p6SEo3MHI1NUFvR0JBTnpSMkZiUVBYam5lZi9KOFhQV2s0QzJDQ2h2M1Y1Y3hyVzMKbGcwRTFkaHcwQVQxeTEzeElXaWQvbGxGc1A0YVZiNzFlTU1LQWtkeVJRclJ1bktxZVIxVFRvazFHSnpEK0JEdwprbWd6N09SekNRQXhwcHJBUXlHTzhkRU1SSmphLy96OEN3RFRXZlcvWURqdEpmYnV0WEVVS3ZFZjg5QVdKWlFVClZ2dTFmTXhsQW9HQVduTG00ZGFqRURJa1pUOFJYSFE1Q3Zva3U3OE84MDQwT2Z0dFMyN2lZQU0ydGxpdFRXS1IKK3AyZ3o2WDRlT0hERFNleEF0WGtEbmFGVW94RlNGeCtrci9tQWxYOU9Vdng0aDc4bHk2bWpZWlkvZE1mTmNBQQpZVWlYVFl6bXNlbExpV1JJUEtuZFlGNGMxZ051N3NNRUg0NEdDTjFzSDRiTTU3THFDYS9iUDhnPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/apiserver-proxy.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBN3ZiaWR2NEl6NTFJcmcxdnNpRnlYM3lvazFoVy9xWFhRZ0tIVERWUkJnSUx0MlBBCnRrVUM3RVVORnpsNGtqZ2NObWZ5dEpjVzZKUEtIY0pUTmtJR2FnVitpK2JCYlZKLzN4R1V0OHBhUUV0VGhwOXcKQTFvUTdacGY4UGE3aDRpVlJUeWFkZCtFbmJiZ2J2TlY5TlpCbjU0NzRiWjhTWmcvVHMyRS9zT3dsL3dVeVNSWQoyeFRHZFZ3dkZobXRmMWFLRFVEY2QvRHQyNzJ5a2NObmF1RXFXbnA4S210R1hDd0R0YzZBdS9tbXdUYllPZkNHCmNjMkhoS296Q3NpTW9ZaDFmbU9qRDJCUGNBMmxTL2RkenBsQTJrc3lzeE9hMHpRQjEwOUhseEdiSWVZRmV1ZjIKeVV3SW9GNFlhSG84TkJaVGpaV2RqZkxDUmJpSmpmekQ1R04vU3dJREFRQUJBb0lCQVFEaHg1Qm5mMVFSM1hqTApRdFN6Q0ZrSkVUNHhvWGpvdHdhd1RyVkk4dU12K3dUWTdENHJ1UDZ1Ly9zRFk0Q2hIclRCVHV1SloydjBxWmFCCkVaY1BuOGh4cWVsTUErWGtCZHZkaHIzdC9SblN2NWtXakZRSVJyUFIyMWNrMCtxUmZ5SVNQZFZ1NDVab2NWNlMKVmdWMEJIQVNnUzN3OER0MFNZNGZSWjJRSEpNZ3RPL1NROXV3d1lScEs3RWlESktycmJJQ0xUSjJ4QUdrb2prQwpSSzlsR21iQVd4aDM0SU04V3UrZVd4c3RaMmV1ZGtDbEhNM050eGxWelV4SGI0SWVlaElHL1hRckcyS2wvQW5uCmoraCtJcFNuSU1oSlhSOUFYVS8rdGRJRnNvYTVRYjgrcGNYOS9sdWdXdXczU2NLMHczV2dPTWo1UWQzQlB4dnQKQnNoR3FxRnBBb0dCQVA3ZlYrZmhCbi9pMHpXRGlKcHYram93aFA1dXNhd0pOeXIxdHdhZ2ZHNVcydVJNTGo1bgo2YjM5SnExMithOTk0anpiZ0tyT3hLRHRab1lVeVdpWXJUOE4xM2Jzb250YUNPVmQ2cjUvSTBRMTdNQUhES3RJClJnK29OWHBKRkU0VGgxT3dvY0oxZjV0OXNpTEtjaW1YSVZsWWk3MTJLMCtkaXZWdStmSnVsR3o5QW9HQkFQQUYKaGtoTkRod1BpUUxHeStrc28yQ3pwNVBpS3ZHUWp5V25UN3M2c3M2aHhQQm9qUzZxQkw3czVkRWdOLzVaaVQyQQprbTcyOGViRDBqdjJuUkNKakVwNVphZ1hsS3dwNXRXYWdROTloVlNFajkwUEw4U0U1MG5QZFdvL3NlWGNXdmFaCmpCdlAyTVhjNHZmVUNzanF3NGVQYXJRNVFWTzJFLys4aFZIOVZmUG5Bb0dCQUo0dU96NThXQzVTdGtiR0phZkQKeTRjRnllU25Dcm44MWpKaFlZQkpaakNNMHpsUlZub0F2LzdiK0g4OEVlYXF1QmlSR3AvbngvMGdtYnFwZC83awprdEZKWStvNUh2WnpnSVhwN2VEZ3d5QjRYMEVtbnVSRzdNU1czdW5RSlR2M3ZzdGdHbVMzeThUVEZCV25rNGJnCmR5QWVaa3ZsNVNkNlhWM0p6SEo3MHI1NUFvR0JBTnpSMkZiUVBYam5lZi9KOFhQV2s0QzJDQ2h2M1Y1Y3hyVzMKbGcwRTFkaHcwQVQxeTEzeElXaWQvbGxGc1A0YVZiNzFlTU1LQWtkeVJRclJ1bktxZVIxVFRvazFHSnpEK0JEdwprbWd6N09SekNRQXhwcHJBUXlHTzhkRU1SSmphLy96OEN3RFRXZlcvWURqdEpmYnV0WEVVS3ZFZjg5QVdKWlFVClZ2dTFmTXhsQW9HQVduTG00ZGFqRURJa1pUOFJYSFE1Q3Zva3U3OE84MDQwT2Z0dFMyN2lZQU0ydGxpdFRXS1IKK3AyZ3o2WDRlT0hERFNleEF0WGtEbmFGVW94RlNGeCtrci9tQWxYOU9Vdng0aDc4bHk2bWpZWlkvZE1mTmNBQQpZVWlYVFl6bXNlbExpV1JJUEtuZFlGNGMxZ051N3NNRUg0NEdDTjFzSDRiTTU3THFDYS9iUDhnPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/apiserver-proxy.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lJQ0dTaHJ5YmV5L0F3RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRreE1qQTVNVEExTmpBeApXaGNOTVRreE1qRXdNVEExTmpBeVdqQThNUlF3RWdZRFZRUUtFd3RyZFdKbExXMWhjM1JsY2pFa01DSUdBMVVFCkF4TWJjM2x6ZEdWdE9tdDFZbVV0WVhCcGMyVnlkbVZ5TFhCeWIzaDVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUYKQUFPQ0FROEFNSUlCQ2dLQ0FRRUE3dmJpZHY0SXo1MUlyZzF2c2lGeVgzeW9rMWhXL3FYWFFnS0hURFZSQmdJTAp0MlBBdGtVQzdFVU5Gemw0a2pnY05tZnl0SmNXNkpQS0hjSlROa0lHYWdWK2krYkJiVkovM3hHVXQ4cGFRRXRUCmhwOXdBMW9RN1pwZjhQYTdoNGlWUlR5YWRkK0VuYmJnYnZOVjlOWkJuNTQ3NGJaOFNaZy9UczJFL3NPd2wvd1UKeVNSWTJ4VEdkVnd2RmhtdGYxYUtEVURjZC9EdDI3MnlrY05uYXVFcVducDhLbXRHWEN3RHRjNkF1L21td1RiWQpPZkNHY2MySGhLb3pDc2lNb1loMWZtT2pEMkJQY0EybFMvZGR6cGxBMmtzeXN4T2EwelFCMTA5SGx4R2JJZVlGCmV1ZjJ5VXdJb0Y0WWFIbzhOQlpUalpXZGpmTENSYmlKamZ6RDVHTi9Td0lEQVFBQm8zVXdjekFPQmdOVkhROEIKQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFkQmdOVgpIUTRFRmdRVVQ4RG1TSFlpRnRJekpqNDVvcmZQNkkwQnhNWXdId1lEVlIwakJCZ3dGb0FVVDhEbVNIWWlGdEl6CkpqNDVvcmZQNkkwQnhNWXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBS2hyTFQ3L1pnay9wY1Y1K0twU0pZdWcKSWs0TWNsRUNSRVh2OGV2RHliN0ZYYnh6dW40MXNVZHE3UGQwUENLaDlKS0NJNSswTEl6bU9odm90dHFYL3BaVgo2ZkZkcHRMTzViNFEwRE9HTWxkbHZKSWhkemg0ZkFKdVZvSTFmVzh5UWtxUVNmTVR4cWFnTFl5Uml3ckdaQ3NqCnVNMHlLM0tqMHNiSEVqM1RLQ0FEcVp2bUFwM3ZBRHA5c3pTV0hMQVZ2VmVSV2lqZ0ZEeW5kNk9LVmlMTXcwZ00KUmdRanJqUUZobjlZalJYVUV6RDIvaEtPMjFYN3hYL0RDaHozeWQ5UXdpeWdDcWJyN3p1dVFndVhVaWFPVGhNMQpLdVEySFlZVDJSb1lyZWJwL29aaUtOTU5EeGczNEttMzJxdDRSSG4yNlZyRW5DUm1ub0VjQ3hhZHJpYk1sWFU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.AdminKubeConfigCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWDdyRFFPT0dCQmt3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB4T1RFeU1Ea3hNRFUxTlRaYUZ3MHlPVEV5TURZeE1EVTFOVFphTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzRBRko5YUZTZ3lCbDFIeTcrSUwxTUhLZ0pJa1QrUmlFKwp3ZjBUd3BVTFhHUWdsY044MThKd29HMTNQMm45b1lWZmd6VTJRVGNQNmpkeW1lcTlOQmgyMWFKa2VyWkZuQzIxCmV3N0RtdTFtaGJyc0pzVWhyRE1MUk1KVzJLTWRRSWRmSmZpZTlZZ3BKRXRWTllvUjNGT2pFUE1hUWhsUjdYL0kKOGRVeURYd0xReGxXMEFCTndoekExMmhwRElTOWh0WmZ4MnBmeUdVUy9FNUdGaENwODMzMzdnTUtneGFucFB0TApKVWtXaEVHRDlxaUpxajZSWEQvNGpQdUpjYm1oY0plT1o3WmtSM3RFRm5RVW44aVlmYkNRWU9mS3M3dStFMVBHCkg5UXhwcnRSclZmak1UQ0ViaDFVZkNlZGhBcS9VRmxOWkpLZk9JUU1XKzlzbzZHa1lwVXJBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlN3UjBMMApnRUhIbXQrK3cxVUFtdDU0dlY2bW5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFzUVlqcGgrSnM5TGkvaXpYCkI1STFtUFpHenRBNmV0Zi91RzRWemhCM2ZZcHFTMmZ1blRwUU9HaGR0TmhGblYxUXNVbFd6aHlsbklxNFpHekEKSThpcHFTUlBNS0lMYXp5bTN2ZmI1MWtONHhXQy9Ncm9CbnVUN0N2azJHT1dGNjlDMDRkbHh4d2pyN1dKd21PMQpPaEM1RXJGVFB5aVpoUXJkSTQ3UzUvVi9OcnRBV3p0REZab25DdERCU3pEOWJER2NVWHd2SzF2U1RoTVpnVjNUCi9KVTlLQUtqY1J2WkpQRk0xc2tiTjlZMUJhdTRGYXpGWUYycnhwSWI1cFZVWmpsZDRjZkpTdGxWWjlhUUU5VUkKN2Z6L2FUR1JNanNiamtQUGQ5d2pncE5zL0JPaitGditXNVl1dWhqRUhPS283cWtwQ3NMNU1obUJ2NStmZGhaSgppdkhCcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/admin-kubeconfig-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWDdyRFFPT0dCQmt3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB4T1RFeU1Ea3hNRFUxTlRaYUZ3MHlPVEV5TURZeE1EVTFOVFphTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzRBRko5YUZTZ3lCbDFIeTcrSUwxTUhLZ0pJa1QrUmlFKwp3ZjBUd3BVTFhHUWdsY044MThKd29HMTNQMm45b1lWZmd6VTJRVGNQNmpkeW1lcTlOQmgyMWFKa2VyWkZuQzIxCmV3N0RtdTFtaGJyc0pzVWhyRE1MUk1KVzJLTWRRSWRmSmZpZTlZZ3BKRXRWTllvUjNGT2pFUE1hUWhsUjdYL0kKOGRVeURYd0xReGxXMEFCTndoekExMmhwRElTOWh0WmZ4MnBmeUdVUy9FNUdGaENwODMzMzdnTUtneGFucFB0TApKVWtXaEVHRDlxaUpxajZSWEQvNGpQdUpjYm1oY0plT1o3WmtSM3RFRm5RVW44aVlmYkNRWU9mS3M3dStFMVBHCkg5UXhwcnRSclZmak1UQ0ViaDFVZkNlZGhBcS9VRmxOWkpLZk9JUU1XKzlzbzZHa1lwVXJBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlN3UjBMMApnRUhIbXQrK3cxVUFtdDU0dlY2bW5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFzUVlqcGgrSnM5TGkvaXpYCkI1STFtUFpHenRBNmV0Zi91RzRWemhCM2ZZcHFTMmZ1blRwUU9HaGR0TmhGblYxUXNVbFd6aHlsbklxNFpHekEKSThpcHFTUlBNS0lMYXp5bTN2ZmI1MWtONHhXQy9Ncm9CbnVUN0N2azJHT1dGNjlDMDRkbHh4d2pyN1dKd21PMQpPaEM1RXJGVFB5aVpoUXJkSTQ3UzUvVi9OcnRBV3p0REZab25DdERCU3pEOWJER2NVWHd2SzF2U1RoTVpnVjNUCi9KVTlLQUtqY1J2WkpQRk0xc2tiTjlZMUJhdTRGYXpGWUYycnhwSWI1cFZVWmpsZDRjZkpTdGxWWjlhUUU5VUkKN2Z6L2FUR1JNanNiamtQUGQ5d2pncE5zL0JPaitGditXNVl1dWhqRUhPS283cWtwQ3NMNU1obUJ2NStmZGhaSgppdkhCcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AdminKubeConfigClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJVm9ib0luOElXV2d3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB4T1RFeU1Ea3hNRFUxTlRaYUZ3MHlPVEV5TURZeE1EVTFOVGRhTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURkc2xiZmw2UHpKL0xRb0tZV2lJeUFSVlBBNUErSjBqS2M2a0orQXl4cwpzbmg0MzR3RG1OTFF3SHdZM1oxeERwWFQ2QmpVdEdzYW1GdzJwY3Rla1dRZ1ZuYWtXSDlBVWVPUFRNSHdZTjVCCm5mclNvNW5ZV1p0Y0hqVEF6Yys3WktUcnl2MXFEcnNzbXNuRHVwdHVMTDlIa2d4QUF4b1FHRDkxTEdZYUY2R00KRjlHNURLaXlwZmo4djlFOGd1WWxXWW9vaUxkL1ltVmRNeHo2M2syM1Y0Sno3UnJ0Rm1pRnlEV3FiNUtCVW5hcgpiaVJ0aGdBS3VUUkdMYWIvdE9oTXNRMXlIYUpLZVlNTHExZDhsT1VLSm5PbGdoUVFobUpVNTQ2cFFBK2hxUHJYCjZCZkR4dDVMcVRzS1k2aW4wcG5KQWJpTGw0RnpHZFZkcjdvQzMvQjlKc2ZMQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVzRWRDOUlCQng1cmZ2c05WQUpyZWVMMWVwcDR3SHdZRFZSMGpCQmd3CkZvQVVzRWRDOUlCQng1cmZ2c05WQUpyZWVMMWVwcDR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUdlR2srYjcKZFRWeXovTFc3WWxlM0xpVjF6S0ZVT2J5dWMvWUlTNExnMHVKSjhLaDhZMHU1NDRDZ3U4amduaUZTY0RNQi9Bawp6WUxJcHQ1YVdBWFd4NzduRmFZZnFxQWJNT3hJYWNxSTJKN0w3b1E5VG1qQllQMmp2dHNYV1dJbzNScG02a0RWCjBnUlRzOWF0L3JlcjdxQlhPY2MzVitac3VZU0wvT25XeE5ZTTdoTWlSTG54aFBBa2hqN3RBWmxhRzdxZ0YyelkKRDdxdVphZmpiMWt3NnMzeXc2UlBIUjJGSk9RWVBtU1VOS0tXUEt5RkdpQUM3WGRDcHlDczU2RVlyUEw2WmQrcwpIWjcwN0FNbS9mZGx2L1RTTWpBRHFoRGI2eHVlV3Y3QldIR0tiS3pwVjZTT0pSejYweGFSTFAvOXEyWTUzZUNHCmYrUUZXTmpFOU9RcVliMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM2JKVzM1ZWo4eWZ5MEtDbUZvaU1nRVZUd09RUGlkSXluT3BDZmdNc2JMSjRlTitNCkE1alMwTUI4R04yZGNRNlYwK2dZMUxSckdwaGNOcVhMWHBGa0lGWjJwRmgvUUZIamowekI4R0RlUVozNjBxT1oKMkZtYlhCNDB3TTNQdTJTazY4cjlhZzY3TEpySnc3cWJiaXkvUjVJTVFBTWFFQmcvZFN4bUdoZWhqQmZSdVF5bwpzcVg0L0wvUlBJTG1KVm1LS0lpM2YySmxYVE1jK3Q1TnQxZUNjKzBhN1Jab2hjZzFxbStTZ1ZKMnEyNGtiWVlBCkNyazBSaTJtLzdUb1RMRU5jaDJpU25tREM2dFhmSlRsQ2laenBZSVVFSVppVk9lT3FVQVBvYWo2MStnWHc4YmUKUzZrN0NtT29wOUtaeVFHNGk1ZUJjeG5WWGErNkF0L3dmU2JIeXdJREFRQUJBb0lCQUc4WnI1V1B2ZGJlWHo0VQpOQWU0MkloenRieEZ6aytvS2pzZTNzR2R2NGFkamVndFIxS0tKS1Ard25JSHBaNEJ6QzRNODF5dEtidURQVHNaCnJTZ3dQbmhDUEdTeUFOdHY3bFZqQnhINnlZY2lyNDhkODd4TGM2TWZkQnBuU2NKRWRxMi81VzFnQW9jZzd4b0sKaTFnVVRxdUVVbVZGNktyR0xBOEJlQTE5YURUMno1R3hvTXBaUUM0M2V0U1Vmb0p2a1l1REpFTENFSHI1YXpLOQp3WVR0UC8yem9ycHg4TDRBV0x4Y1psSTFEaERXcTBydWhZV3lxTnEzUit1ODZLckZPVkg2cFFTaDF0V1hMQmN4Cm5KL01teTNEaVJuQVJmQ2xRSUdXenhROEUrQm9GMWlHY2V4aHg3dmFZZ0dUMTRNbFQ1NHZzdGEwanM1amZndzcKdDZkcW1CRUNnWUVBL3FKN1Jydi8yYVk5RDJQbXhMNEk5dEI2MFNxU1JTVk11TFR0MktrZFZkV0ZUQW5BODN5agpXVENsdUgxb0NHMDZBUUR5RzJkSFhWeThhdTRCeGY2bXc3enI5TDZXR0k3ZUU1UHNsZnVLcGYyaGJWS3VhRzZ0ClVmUWhQdEx2dzdHY3pQdEZuZnErZDIrNVRlNXVkc0h4b01ZN2Y3Ny84UUdnUEtkTDBXSGFnSU1DZ1lFQTN1S2wKYVVKcnBJdUdYNklKZFNwZ0lFVlJnU3hKT01sdFV0M1JqcVBlOUR1S2U3WG92RjEzUnJZZ09ncHYyNFJqaTJKMgpNU0l2TnRoNjV5RnVRZG95WWdpSTZtK29Qam5nZDB2UXpiR1YyVEJoUGFyV1hYWU5sSkgweWhpUm9oNmwxam1SCmEvR3pKZlhFdll1UlNtUUYraXUxWjBYSHZYano5cDBVTmtkejZSa0NnWUJocHBRYUswelIvaE9hakZoYWlQcE4KRk9TVXhIdTFzcms2ZUlCaVAzQzFreDM4YkIwb0ExdHRmOTk5NGZIOGtVN1dSYk9UV01jZ2djanNSUHcvSHdwNwpORDlVNjZZS0l2ZjlrQlFCN0taZVErY2RVc0Q1NGIvc0Z2Q005RDNvMFh0dGpNdEU2MzBSdHJIY3RoeDh4S0hTClkxTThDVmFENlhpMjZmMkVmYjlhMndLQmdRQ3Jld2owZ1F1OFh6U1ZJMS9QYXpqbDJ5OG9DT0NVOWpSTVN5bE4KYXpyQUFZYzhRdXE2OGRZdzZ6TEVOUDkyanRiZmlIT1N2ZEJCakRDUzN4K3JQcXNBemJ3NVVvckl4Vkt6dGZzQwpKcDA1cW9WR0lzZ214QXNTd1hEcWhCaVgrS2h5dDN2dzV0YUVZQ0JzREpOTi9zS3loU3BlT0V2Q3RPcE9WUEFXCkNzZGRFUUtCZ0ROeHlveFAvRmtobFo3c1YyZ203Z3RUNzdhU0xub0phcFNKbEV5eG01dk0yWVZiaUVaS1BiZ08KS0tuRGpFaUFkRWszbDlRc1psdHpjNi9rV3poS2hTRkx3eGRrMU81bjlkaUNhWm9IcE11Z1pJZEZyUGxUM0IrZwpRL0dCWjU2cHRXNWVsV215ZEp0M284Zlp6TTYzSkhDSUFxeDZsK1NVTWl0SnZUUDJDSyt2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/admin-kubeconfig-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBM2JKVzM1ZWo4eWZ5MEtDbUZvaU1nRVZUd09RUGlkSXluT3BDZmdNc2JMSjRlTitNCkE1alMwTUI4R04yZGNRNlYwK2dZMUxSckdwaGNOcVhMWHBGa0lGWjJwRmgvUUZIamowekI4R0RlUVozNjBxT1oKMkZtYlhCNDB3TTNQdTJTazY4cjlhZzY3TEpySnc3cWJiaXkvUjVJTVFBTWFFQmcvZFN4bUdoZWhqQmZSdVF5bwpzcVg0L0wvUlBJTG1KVm1LS0lpM2YySmxYVE1jK3Q1TnQxZUNjKzBhN1Jab2hjZzFxbStTZ1ZKMnEyNGtiWVlBCkNyazBSaTJtLzdUb1RMRU5jaDJpU25tREM2dFhmSlRsQ2laenBZSVVFSVppVk9lT3FVQVBvYWo2MStnWHc4YmUKUzZrN0NtT29wOUtaeVFHNGk1ZUJjeG5WWGErNkF0L3dmU2JIeXdJREFRQUJBb0lCQUc4WnI1V1B2ZGJlWHo0VQpOQWU0MkloenRieEZ6aytvS2pzZTNzR2R2NGFkamVndFIxS0tKS1Ard25JSHBaNEJ6QzRNODF5dEtidURQVHNaCnJTZ3dQbmhDUEdTeUFOdHY3bFZqQnhINnlZY2lyNDhkODd4TGM2TWZkQnBuU2NKRWRxMi81VzFnQW9jZzd4b0sKaTFnVVRxdUVVbVZGNktyR0xBOEJlQTE5YURUMno1R3hvTXBaUUM0M2V0U1Vmb0p2a1l1REpFTENFSHI1YXpLOQp3WVR0UC8yem9ycHg4TDRBV0x4Y1psSTFEaERXcTBydWhZV3lxTnEzUit1ODZLckZPVkg2cFFTaDF0V1hMQmN4Cm5KL01teTNEaVJuQVJmQ2xRSUdXenhROEUrQm9GMWlHY2V4aHg3dmFZZ0dUMTRNbFQ1NHZzdGEwanM1amZndzcKdDZkcW1CRUNnWUVBL3FKN1Jydi8yYVk5RDJQbXhMNEk5dEI2MFNxU1JTVk11TFR0MktrZFZkV0ZUQW5BODN5agpXVENsdUgxb0NHMDZBUUR5RzJkSFhWeThhdTRCeGY2bXc3enI5TDZXR0k3ZUU1UHNsZnVLcGYyaGJWS3VhRzZ0ClVmUWhQdEx2dzdHY3pQdEZuZnErZDIrNVRlNXVkc0h4b01ZN2Y3Ny84UUdnUEtkTDBXSGFnSU1DZ1lFQTN1S2wKYVVKcnBJdUdYNklKZFNwZ0lFVlJnU3hKT01sdFV0M1JqcVBlOUR1S2U3WG92RjEzUnJZZ09ncHYyNFJqaTJKMgpNU0l2TnRoNjV5RnVRZG95WWdpSTZtK29Qam5nZDB2UXpiR1YyVEJoUGFyV1hYWU5sSkgweWhpUm9oNmwxam1SCmEvR3pKZlhFdll1UlNtUUYraXUxWjBYSHZYano5cDBVTmtkejZSa0NnWUJocHBRYUswelIvaE9hakZoYWlQcE4KRk9TVXhIdTFzcms2ZUlCaVAzQzFreDM4YkIwb0ExdHRmOTk5NGZIOGtVN1dSYk9UV01jZ2djanNSUHcvSHdwNwpORDlVNjZZS0l2ZjlrQlFCN0taZVErY2RVc0Q1NGIvc0Z2Q005RDNvMFh0dGpNdEU2MzBSdHJIY3RoeDh4S0hTClkxTThDVmFENlhpMjZmMkVmYjlhMndLQmdRQ3Jld2owZ1F1OFh6U1ZJMS9QYXpqbDJ5OG9DT0NVOWpSTVN5bE4KYXpyQUFZYzhRdXE2OGRZdzZ6TEVOUDkyanRiZmlIT1N2ZEJCakRDUzN4K3JQcXNBemJ3NVVvckl4Vkt6dGZzQwpKcDA1cW9WR0lzZ214QXNTd1hEcWhCaVgrS2h5dDN2dzV0YUVZQ0JzREpOTi9zS3loU3BlT0V2Q3RPcE9WUEFXCkNzZGRFUUtCZ0ROeHlveFAvRmtobFo3c1YyZ203Z3RUNzdhU0xub0phcFNKbEV5eG01dk0yWVZiaUVaS1BiZ08KS0tuRGpFaUFkRWszbDlRc1psdHpjNi9rV3poS2hTRkx3eGRrMU81bjlkaUNhWm9IcE11Z1pJZEZyUGxUM0IrZwpRL0dCWjU2cHRXNWVsV215ZEp0M284Zlp6TTYzSkhDSUFxeDZsK1NVTWl0SnZUUDJDSyt2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/admin-kubeconfig-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURaekNDQWsrZ0F3SUJBZ0lJVm9ib0luOElXV2d3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB4T1RFeU1Ea3hNRFUxTlRaYUZ3MHlPVEV5TURZeE1EVTFOVGRhTURBeEZ6QVZCZ05WQkFvVERuTjVjM1JsCmJUcHRZWE4wWlhKek1SVXdFd1lEVlFRREV3eHplWE4wWlcwNllXUnRhVzR3Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURkc2xiZmw2UHpKL0xRb0tZV2lJeUFSVlBBNUErSjBqS2M2a0orQXl4cwpzbmg0MzR3RG1OTFF3SHdZM1oxeERwWFQ2QmpVdEdzYW1GdzJwY3Rla1dRZ1ZuYWtXSDlBVWVPUFRNSHdZTjVCCm5mclNvNW5ZV1p0Y0hqVEF6Yys3WktUcnl2MXFEcnNzbXNuRHVwdHVMTDlIa2d4QUF4b1FHRDkxTEdZYUY2R00KRjlHNURLaXlwZmo4djlFOGd1WWxXWW9vaUxkL1ltVmRNeHo2M2syM1Y0Sno3UnJ0Rm1pRnlEV3FiNUtCVW5hcgpiaVJ0aGdBS3VUUkdMYWIvdE9oTXNRMXlIYUpLZVlNTHExZDhsT1VLSm5PbGdoUVFobUpVNTQ2cFFBK2hxUHJYCjZCZkR4dDVMcVRzS1k2aW4wcG5KQWJpTGw0RnpHZFZkcjdvQzMvQjlKc2ZMQWdNQkFBR2pmekI5TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVzRWRDOUlCQng1cmZ2c05WQUpyZWVMMWVwcDR3SHdZRFZSMGpCQmd3CkZvQVVzRWRDOUlCQng1cmZ2c05WQUpyZWVMMWVwcDR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUdlR2srYjcKZFRWeXovTFc3WWxlM0xpVjF6S0ZVT2J5dWMvWUlTNExnMHVKSjhLaDhZMHU1NDRDZ3U4amduaUZTY0RNQi9Bawp6WUxJcHQ1YVdBWFd4NzduRmFZZnFxQWJNT3hJYWNxSTJKN0w3b1E5VG1qQllQMmp2dHNYV1dJbzNScG02a0RWCjBnUlRzOWF0L3JlcjdxQlhPY2MzVitac3VZU0wvT25XeE5ZTTdoTWlSTG54aFBBa2hqN3RBWmxhRzdxZ0YyelkKRDdxdVphZmpiMWt3NnMzeXc2UlBIUjJGSk9RWVBtU1VOS0tXUEt5RkdpQUM3WGRDcHlDczU2RVlyUEw2WmQrcwpIWjcwN0FNbS9mZGx2L1RTTWpBRHFoRGI2eHVlV3Y3QldIR0tiS3pwVjZTT0pSejYweGFSTFAvOXEyWTUzZUNHCmYrUUZXTmpFOU9RcVliMD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.AdminKubeConfigSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWDdyRFFPT0dCQmt3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB4T1RFeU1Ea3hNRFUxTlRaYUZ3MHlPVEV5TURZeE1EVTFOVFphTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzRBRko5YUZTZ3lCbDFIeTcrSUwxTUhLZ0pJa1QrUmlFKwp3ZjBUd3BVTFhHUWdsY044MThKd29HMTNQMm45b1lWZmd6VTJRVGNQNmpkeW1lcTlOQmgyMWFKa2VyWkZuQzIxCmV3N0RtdTFtaGJyc0pzVWhyRE1MUk1KVzJLTWRRSWRmSmZpZTlZZ3BKRXRWTllvUjNGT2pFUE1hUWhsUjdYL0kKOGRVeURYd0xReGxXMEFCTndoekExMmhwRElTOWh0WmZ4MnBmeUdVUy9FNUdGaENwODMzMzdnTUtneGFucFB0TApKVWtXaEVHRDlxaUpxajZSWEQvNGpQdUpjYm1oY0plT1o3WmtSM3RFRm5RVW44aVlmYkNRWU9mS3M3dStFMVBHCkg5UXhwcnRSclZmak1UQ0ViaDFVZkNlZGhBcS9VRmxOWkpLZk9JUU1XKzlzbzZHa1lwVXJBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlN3UjBMMApnRUhIbXQrK3cxVUFtdDU0dlY2bW5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFzUVlqcGgrSnM5TGkvaXpYCkI1STFtUFpHenRBNmV0Zi91RzRWemhCM2ZZcHFTMmZ1blRwUU9HaGR0TmhGblYxUXNVbFd6aHlsbklxNFpHekEKSThpcHFTUlBNS0lMYXp5bTN2ZmI1MWtONHhXQy9Ncm9CbnVUN0N2azJHT1dGNjlDMDRkbHh4d2pyN1dKd21PMQpPaEM1RXJGVFB5aVpoUXJkSTQ3UzUvVi9OcnRBV3p0REZab25DdERCU3pEOWJER2NVWHd2SzF2U1RoTVpnVjNUCi9KVTlLQUtqY1J2WkpQRk0xc2tiTjlZMUJhdTRGYXpGWUYycnhwSWI1cFZVWmpsZDRjZkpTdGxWWjlhUUU5VUkKN2Z6L2FUR1JNanNiamtQUGQ5d2pncE5zL0JPaitGditXNVl1dWhqRUhPS283cWtwQ3NMNU1obUJ2NStmZGhaSgppdkhCcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUFCU2ZXaFVvTWdaZFI4dS9pQzlUQnlvQ1NKRS9rWWhQc0g5RThLVkMxeGtJSlhECmZOZkNjS0J0ZHo5cC9hR0ZYNE0xTmtFM0QrbzNjcG5xdlRRWWR0V2laSHEyUlp3dHRYc093NXJ0Wm9XNjdDYkYKSWF3ekMwVENWdGlqSFVDSFh5WDRudldJS1NSTFZUV0tFZHhUb3hEekdrSVpVZTEveVBIVk1nMThDME1aVnRBQQpUY0ljd05kb2FReUV2WWJXWDhkcVg4aGxFdnhPUmhZUXFmTjk5KzREQ29NV3A2VDdTeVZKRm9SQmcvYW9pYW8rCmtWdy8rSXo3aVhHNW9YQ1hqbWUyWkVkN1JCWjBGSi9JbUgyd2tHRG55ck83dmhOVHhoL1VNYWE3VWExWDR6RXcKaEc0ZFZId25uWVFLdjFCWlRXU1NuemlFREZ2dmJLT2hwR0tWS3dJREFRQUJBb0lCQVFDb2xiTCtyKzZKK1l4SgpvUzZmTEVRRVRtVXZLVFRwZkR2TmtsTmNIWFlObUxNc244c2l3VlNuZUhXVFFvak1GNGRwd1grcG5BcmxEQVdOCmZMUjBjaHpRRkdEYml3c2hzRHk1QUd6QWoxeGdDTHNBejJ6aXN6RjVhNkJiamRXMVlZQW1qMVhCM3RqSVNUYTAKZFg5eGFkcy9scklHSnZXbitPQ1JyZkZXRU1ETVZ6bzhLYmxhK1VXSkdJQmlUWHp5Wk9PcCtNQnU4T2Q4OWhNSgpmYkx1dmhxcUROdVdjWk9qS0NSMWFma2RzYi9zSFhwRnZFNTE0eThvTThpVm1lMlRBMUFKTVRHTUgra1FISzlQCnVqa2t5dVJmV0g4VkVSdnFBU2V5SCtoOWd6SVNka3Jhc1VMS05uekl4OXgrTGE3dGw0NUxlSmNwNUEvQlNJeXYKakZ3Q1ZRQ1JBb0dCQU5ST0RCaGpQTW5IZVhMU0dWU1NNSkVqNUJlNGpzejV4Y1JHUUNpTVJsUVhjSUlabldVOQpoMUFzVGhlTmIzU1JabU4vcFQ0UGtnTzlaSWZWY2R3cGNsTmcrc3hIK09peDhZbmZuN0hYZFBLalUwSlM4VWtlCitxSGsrVFJPQVdvU3hFRi9uOUk1QnZadU9ocEdJOGZYK0lsZmVuNGpjcWl2Z3AycTRGYWxyYlhQQW9HQkFOM2YKQW54ekxWVjg2T1dzMnhnNS9za0hhWXpLVEd0aWNXcWw3elpocWlmNWkwUjQwV1B2MmVIT0FUWVhGMkxGdmFGdQpLZzhBY0tQSWVpVFRDT3BoLzdQdm5qUnFmYzVSYXhuMGtMbW5kazVuSzUzQXY0VFVlRHIzeGk4UzNDZXJxT0l6ClpCV3c3UkhPcVYvWXJ5TlZBUXRGZjNNZy9jdFBQU1NIeElYUFVaM2xBb0dBVlhRd3hDUTFsSlpZMlJHZUpuOU4KVXk1YUlmNGtaSGJvMW83Y1JqWG9IUEx1VXorU0xlenRLU1VjTGJpOU12TlBmaDhqMk80VmZMSGY1QmpTNHFaQQpJVFY0M1g3ZXZuTFpZUUNFMitWNGFpMjVWb25pR3VlQVJHZlFzdS91Kzg0Zjlxa3pJRC9hQUpqdmhDSFZSeHcwCktyOG1vOTBLeXNFU1Z2b3ZvRkRCc2RzQ2dZRUF0K0U2b3orbG84TXBGaWlqVURuSWduMWxLZTBEVnNBNHRTV2UKMHBnd3VINmx3SExOUHlFcWwyenZMaEFITHJJcGpsL0o5YkxzcDZEZ01pTEFzZGZVWHlGSkliSGNZQ0MwUGNlbQpKbWUyc2hYcFhRM0E3R3BXMXJCQkRRUjVkMXRhVlZZNExZMzdmSldsWkMwbVFZY1NuVy9VeCtyZ3pCMzQwNHkrCkFCUXBWVTBDZ1lBT1I2a1IrZWZqV3hDbFAzTHlaaE9GU3FLRDJHUlI3NHJTSTBxUktaTy9jNC93dGtDNFBRQ1MKNmpic052ZnFST1RUK3pqVnpqZmdjSUV3czRIeHRBVDJybVBoM1JkbnVvbEJqVTYwNE1VVi9IRVhiRjVXOFgrWQpSQ3NNNldQbTlyQURTTnBFZ2hsNjZJSTNsNk01M3V0NFRjQzhSZ2xTMjVBTlR2OEtFck5ldGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/admin-kubeconfig-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUFCU2ZXaFVvTWdaZFI4dS9pQzlUQnlvQ1NKRS9rWWhQc0g5RThLVkMxeGtJSlhECmZOZkNjS0J0ZHo5cC9hR0ZYNE0xTmtFM0QrbzNjcG5xdlRRWWR0V2laSHEyUlp3dHRYc093NXJ0Wm9XNjdDYkYKSWF3ekMwVENWdGlqSFVDSFh5WDRudldJS1NSTFZUV0tFZHhUb3hEekdrSVpVZTEveVBIVk1nMThDME1aVnRBQQpUY0ljd05kb2FReUV2WWJXWDhkcVg4aGxFdnhPUmhZUXFmTjk5KzREQ29NV3A2VDdTeVZKRm9SQmcvYW9pYW8rCmtWdy8rSXo3aVhHNW9YQ1hqbWUyWkVkN1JCWjBGSi9JbUgyd2tHRG55ck83dmhOVHhoL1VNYWE3VWExWDR6RXcKaEc0ZFZId25uWVFLdjFCWlRXU1NuemlFREZ2dmJLT2hwR0tWS3dJREFRQUJBb0lCQVFDb2xiTCtyKzZKK1l4SgpvUzZmTEVRRVRtVXZLVFRwZkR2TmtsTmNIWFlObUxNc244c2l3VlNuZUhXVFFvak1GNGRwd1grcG5BcmxEQVdOCmZMUjBjaHpRRkdEYml3c2hzRHk1QUd6QWoxeGdDTHNBejJ6aXN6RjVhNkJiamRXMVlZQW1qMVhCM3RqSVNUYTAKZFg5eGFkcy9scklHSnZXbitPQ1JyZkZXRU1ETVZ6bzhLYmxhK1VXSkdJQmlUWHp5Wk9PcCtNQnU4T2Q4OWhNSgpmYkx1dmhxcUROdVdjWk9qS0NSMWFma2RzYi9zSFhwRnZFNTE0eThvTThpVm1lMlRBMUFKTVRHTUgra1FISzlQCnVqa2t5dVJmV0g4VkVSdnFBU2V5SCtoOWd6SVNka3Jhc1VMS05uekl4OXgrTGE3dGw0NUxlSmNwNUEvQlNJeXYKakZ3Q1ZRQ1JBb0dCQU5ST0RCaGpQTW5IZVhMU0dWU1NNSkVqNUJlNGpzejV4Y1JHUUNpTVJsUVhjSUlabldVOQpoMUFzVGhlTmIzU1JabU4vcFQ0UGtnTzlaSWZWY2R3cGNsTmcrc3hIK09peDhZbmZuN0hYZFBLalUwSlM4VWtlCitxSGsrVFJPQVdvU3hFRi9uOUk1QnZadU9ocEdJOGZYK0lsZmVuNGpjcWl2Z3AycTRGYWxyYlhQQW9HQkFOM2YKQW54ekxWVjg2T1dzMnhnNS9za0hhWXpLVEd0aWNXcWw3elpocWlmNWkwUjQwV1B2MmVIT0FUWVhGMkxGdmFGdQpLZzhBY0tQSWVpVFRDT3BoLzdQdm5qUnFmYzVSYXhuMGtMbW5kazVuSzUzQXY0VFVlRHIzeGk4UzNDZXJxT0l6ClpCV3c3UkhPcVYvWXJ5TlZBUXRGZjNNZy9jdFBQU1NIeElYUFVaM2xBb0dBVlhRd3hDUTFsSlpZMlJHZUpuOU4KVXk1YUlmNGtaSGJvMW83Y1JqWG9IUEx1VXorU0xlenRLU1VjTGJpOU12TlBmaDhqMk80VmZMSGY1QmpTNHFaQQpJVFY0M1g3ZXZuTFpZUUNFMitWNGFpMjVWb25pR3VlQVJHZlFzdS91Kzg0Zjlxa3pJRC9hQUpqdmhDSFZSeHcwCktyOG1vOTBLeXNFU1Z2b3ZvRkRCc2RzQ2dZRUF0K0U2b3orbG84TXBGaWlqVURuSWduMWxLZTBEVnNBNHRTV2UKMHBnd3VINmx3SExOUHlFcWwyenZMaEFITHJJcGpsL0o5YkxzcDZEZ01pTEFzZGZVWHlGSkliSGNZQ0MwUGNlbQpKbWUyc2hYcFhRM0E3R3BXMXJCQkRRUjVkMXRhVlZZNExZMzdmSldsWkMwbVFZY1NuVy9VeCtyZ3pCMzQwNHkrCkFCUXBWVTBDZ1lBT1I2a1IrZWZqV3hDbFAzTHlaaE9GU3FLRDJHUlI3NHJTSTBxUktaTy9jNC93dGtDNFBRQ1MKNmpic052ZnFST1RUK3pqVnpqZmdjSUV3czRIeHRBVDJybVBoM1JkbnVvbEJqVTYwNE1VVi9IRVhiRjVXOFgrWQpSQ3NNNldQbTlyQURTTnBFZ2hsNjZJSTNsNk01M3V0NFRjQzhSZ2xTMjVBTlR2OEtFck5ldGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/admin-kubeconfig-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWDdyRFFPT0dCQmt3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB4T1RFeU1Ea3hNRFUxTlRaYUZ3MHlPVEV5TURZeE1EVTFOVFphTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzRBRko5YUZTZ3lCbDFIeTcrSUwxTUhLZ0pJa1QrUmlFKwp3ZjBUd3BVTFhHUWdsY044MThKd29HMTNQMm45b1lWZmd6VTJRVGNQNmpkeW1lcTlOQmgyMWFKa2VyWkZuQzIxCmV3N0RtdTFtaGJyc0pzVWhyRE1MUk1KVzJLTWRRSWRmSmZpZTlZZ3BKRXRWTllvUjNGT2pFUE1hUWhsUjdYL0kKOGRVeURYd0xReGxXMEFCTndoekExMmhwRElTOWh0WmZ4MnBmeUdVUy9FNUdGaENwODMzMzdnTUtneGFucFB0TApKVWtXaEVHRDlxaUpxajZSWEQvNGpQdUpjYm1oY0plT1o3WmtSM3RFRm5RVW44aVlmYkNRWU9mS3M3dStFMVBHCkg5UXhwcnRSclZmak1UQ0ViaDFVZkNlZGhBcS9VRmxOWkpLZk9JUU1XKzlzbzZHa1lwVXJBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlN3UjBMMApnRUhIbXQrK3cxVUFtdDU0dlY2bW5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFzUVlqcGgrSnM5TGkvaXpYCkI1STFtUFpHenRBNmV0Zi91RzRWemhCM2ZZcHFTMmZ1blRwUU9HaGR0TmhGblYxUXNVbFd6aHlsbklxNFpHekEKSThpcHFTUlBNS0lMYXp5bTN2ZmI1MWtONHhXQy9Ncm9CbnVUN0N2azJHT1dGNjlDMDRkbHh4d2pyN1dKd21PMQpPaEM1RXJGVFB5aVpoUXJkSTQ3UzUvVi9OcnRBV3p0REZab25DdERCU3pEOWJER2NVWHd2SzF2U1RoTVpnVjNUCi9KVTlLQUtqY1J2WkpQRk0xc2tiTjlZMUJhdTRGYXpGWUYycnhwSWI1cFZVWmpsZDRjZkpTdGxWWjlhUUU5VUkKN2Z6L2FUR1JNanNiamtQUGQ5d2pncE5zL0JPaitGditXNVl1dWhqRUhPS283cWtwQ3NMNU1obUJ2NStmZGhaSgppdkhCcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AggregatorCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lJWVJYZDhDRjBUa293RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRreE1qQTVNVEExTmpBeApXaGNOTVRreE1qRXdNVEExTmpBeFdqQW9NUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEVUTUJFR0ExVUVBeE1LCllXZG5jbVZuWVhSdmNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5kVmR3TGMKUWdadXFFcUZYYU5TV2VlUHdPeFpaK2o2amVpUFJ1aHpaMGU2WFFTMTNSWVZJZHJibDZSS05BMUNzUXY3V0hMNwpTSHVuSVlJR3NpTjY2REJHUHo5cCtmQ09sUHNhdi9Wb2lQQWNWaTl6ZERFbXNHZDkxRnFaWEdqbzNoRmh6L0U2CnRjYzZFTG5vZy8xbTVnUFQyQVVOREVicUJYcUt5aTJZanJCcElFTWtLT2dkZnhGeVhHM2sxbEdPcUg4VmRJQ0cKQklGYVhrd2w4Q2kzQTZUck91cEJZbklhQmhTN3MyZHZxdjV4TEVHdzRQUWU0d0VzZ1VpV0pPYVlXa25vdlJGVgpsMlJBeDNnVW0vbG1oMFhwQXFxWEQrN0ZkajZvQ2xUSlR1a1pjVjhuTS9rQTY2WWt6dzNvaDBmMkV3WDdhSlk0Ck5vcDVrUnZYVG10cEpLc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRS9BNWtoMkloYlNNeVkrT2FLM3oraU5BY1RHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRFYvdmZPRlNXNllBYUpTZW9LSW9taDk5RllUS0VIREd1enZ5VEh3TmlQOVFKUzR5djFKaGxYCjFFRXhQaWk3cHoyemJicFNaaUNhSnZNTmtRM05SNHNHQUwxREtsbGEwZEdOSy9wbkNTZ1FvUTRLbmM4MUh6YWUKMHhoVnJvcVZhSGdvb3JpUEsvQ2lVSkhLbnliN0lkTEdBVFlINnhsWS93UnhDME85U2dIYjBsUmFiRWN5QTRxawpoZ082TEFvMHpqZ1lENThKeEZndVZpb0VUYTF2QUtESkJ0eWc2d0NTR2NWMzIrRjJvRG10eWVnSTJCSWhZU2EwCmoyV09TYWJ2UnM4aExYNDZHRnprVDRSSk02YXBhYlNwNFNqYk9PN295NHZ4bVVLRnRHSDh4QXVQbDlhVFBnTVYKK0ptSlhVMkdqd3dROG1SZEU4UkRzbHhCRVBaQjZ3dTgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMTFWM0F0eENCbTZvU29WZG8xSlo1NC9BN0ZsbjZQcU42STlHNkhOblI3cGRCTFhkCkZoVWgydHVYcEVvMERVS3hDL3RZY3Z0SWU2Y2hnZ2F5STNyb01FWS9QMm41OEk2VSt4cS85V2lJOEJ4V0wzTjAKTVNhd1ozM1VXcGxjYU9qZUVXSFA4VHExeHpvUXVlaUQvV2JtQTlQWUJRME1SdW9GZW9yS0xaaU9zR2tnUXlRbwo2QjEvRVhKY2JlVFdVWTZvZnhWMGdJWUVnVnBlVENYd0tMY0RwT3M2NmtGaWNob0dGTHV6WjIrcS9uRXNRYkRnCjlCN2pBU3lCU0pZazVwaGFTZWk5RVZXWFpFREhlQlNiK1dhSFJla0NxcGNQN3NWMlBxZ0tWTWxPNlJseFh5Y3oKK1FEcnBpVFBEZWlIUi9ZVEJmdG9samcyaW5tUkc5ZE9hMmtrcXdJREFRQUJBb0lCQUZIYzRQREtjYU5tWUQ1cwpjMHZLMi9rSGtxMkgwOVFqcE4xNzB0WStRVTVva0VKaExWcmV6ODhYV3BBUDBiZ1UyYUFYZnVtL2xDL0dPeHZtCmxjU2RUalpFRG5sNlBaWHhicndEMEdSb3lGNllOeiswNGNCcDEvaVFRckhxeWRIc2JiZ24rbGpZSEJGUWh0bFcKaHc5SUZqdndScGlzL0RUZGRSWEFPOXFYdSs5ZVpWaFdQZkpFS0NUZmRvNHFxVCtnMlE4cWRvTDU5ZWx0RHBvUwpJTzZlcGJPNFVneC9ERWZUK3lPa0FXZTBjMklmQlptUVQ3dXMvYkxMcWdBR2Z3dTg4T1F1aWJvcm0yeEdvMG8yCjNZR3phaU1yZDRqWUJVVDRFNzUwdE1udDJPQUk1NTBpRG40aVlXbTdDMk9rQ0hTWDZrNnR1TG55YlJFc21pT3UKaGNDRHRlRUNnWUVBNUJ4RDBzYzREb05OTnhOTEVaMG1XWVE4eEhhVVBoSmZtcWNPbmtsVDRiMzI4VEhubkpnRQphbVZCQmdybEx1WXMvY0JUUDRMVERjY3o4WjhDbWtraG9ncDBHN016RDlaU0Z1VHdOVXltQ2VUOHpYWTdOSXNhClNlKzZERWdCWktDMGg5cUVkWU5YbXQ2eWk4MTBmNS9mRmJ4NUxKWUd3dXdaNSs0Z0wzSDBrSHNDZ1lFQThhbE0KNE1DdzQ3SWthWGhpcmlDeHFodXVCT2ZCUDIxYlB0N3hGalZwenM0VUVocVJXaTZmdHNEbmJUZlIzOFFjUnRTUwp0VGpSVjNGaFE4NUY5d2ltNmJodG9sRGx0MktzbmJqSEZrU0RkVlBMbm1nSk9ZeUhTOFBDNVpRcXpadE9EZGJ3Cit5NjVlNUFSN0hadTgvNkV6SFJkZks5VDd5WGtxQWovQlVHQ1BaRUNnWUErN3ZGaldLVkZrOEljM016TU9rQVgKV0YxdmtvdUpxSVlKNCtjcmttMTdEVzd3MG1UbEZpZTV0dCsrckFqWTdKWWpHQW1mcnhkTmFOVVM1MXpQZGplNgpQZ29VamxjYkduVWhiZDQ3eGo3VTRnRkJLa3BoVDdOY0RMQ1dyTkw5a1R6ZGNsTXpISjV4MHRrTnF3eG1IWlJ0CnFjY0FudytVZlpFVUpPVnFVWlU0dXdLQmdRRFdNSzl5R1hmdktNcTdMTGVTREdwTUVxS0h1SDRBNE1WYUVUSHYKOUVHbXllTGlOT2dWM1hNMEFRQmVQblpuZGFOMmFCenNRTUxUVlN2WGRIRnd4aHRpMWxOZDVZUGxxYkREVHE0dQpuMlZBelplUS9EY0k2ZlJWQTlxdnIwYk0yOVV2MFEzZ0pBYkViT3BtQW9iTy9nem9SazlDSHdndTFCQTVtMWVsCmFlMnM4UUtCZ1FDQXkyTzRwRThFU2hUWVBnUHdwQU05MDNjR0JxOGpWcnlUZ1J5Y0pJQ3lCczZndVV5clI0NTUKQ3FtYVVES0NnaXl2MlVJL3ROZTJ6eUZUWEVxWHBHb0c4Tlgyb0tjV1RSQ2ZwcE5pTTFPL1RPaTM3Y2c4MWQ4NwpqM2diY05WM1JmemlFL0ZRTjJ3OVdpQ1Fmd3hHL2FvaXVxRm1zbUh4YXRMeDBES0ViQ2lqaFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/aggregator-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBMTFWM0F0eENCbTZvU29WZG8xSlo1NC9BN0ZsbjZQcU42STlHNkhOblI3cGRCTFhkCkZoVWgydHVYcEVvMERVS3hDL3RZY3Z0SWU2Y2hnZ2F5STNyb01FWS9QMm41OEk2VSt4cS85V2lJOEJ4V0wzTjAKTVNhd1ozM1VXcGxjYU9qZUVXSFA4VHExeHpvUXVlaUQvV2JtQTlQWUJRME1SdW9GZW9yS0xaaU9zR2tnUXlRbwo2QjEvRVhKY2JlVFdVWTZvZnhWMGdJWUVnVnBlVENYd0tMY0RwT3M2NmtGaWNob0dGTHV6WjIrcS9uRXNRYkRnCjlCN2pBU3lCU0pZazVwaGFTZWk5RVZXWFpFREhlQlNiK1dhSFJla0NxcGNQN3NWMlBxZ0tWTWxPNlJseFh5Y3oKK1FEcnBpVFBEZWlIUi9ZVEJmdG9samcyaW5tUkc5ZE9hMmtrcXdJREFRQUJBb0lCQUZIYzRQREtjYU5tWUQ1cwpjMHZLMi9rSGtxMkgwOVFqcE4xNzB0WStRVTVva0VKaExWcmV6ODhYV3BBUDBiZ1UyYUFYZnVtL2xDL0dPeHZtCmxjU2RUalpFRG5sNlBaWHhicndEMEdSb3lGNllOeiswNGNCcDEvaVFRckhxeWRIc2JiZ24rbGpZSEJGUWh0bFcKaHc5SUZqdndScGlzL0RUZGRSWEFPOXFYdSs5ZVpWaFdQZkpFS0NUZmRvNHFxVCtnMlE4cWRvTDU5ZWx0RHBvUwpJTzZlcGJPNFVneC9ERWZUK3lPa0FXZTBjMklmQlptUVQ3dXMvYkxMcWdBR2Z3dTg4T1F1aWJvcm0yeEdvMG8yCjNZR3phaU1yZDRqWUJVVDRFNzUwdE1udDJPQUk1NTBpRG40aVlXbTdDMk9rQ0hTWDZrNnR1TG55YlJFc21pT3UKaGNDRHRlRUNnWUVBNUJ4RDBzYzREb05OTnhOTEVaMG1XWVE4eEhhVVBoSmZtcWNPbmtsVDRiMzI4VEhubkpnRQphbVZCQmdybEx1WXMvY0JUUDRMVERjY3o4WjhDbWtraG9ncDBHN016RDlaU0Z1VHdOVXltQ2VUOHpYWTdOSXNhClNlKzZERWdCWktDMGg5cUVkWU5YbXQ2eWk4MTBmNS9mRmJ4NUxKWUd3dXdaNSs0Z0wzSDBrSHNDZ1lFQThhbE0KNE1DdzQ3SWthWGhpcmlDeHFodXVCT2ZCUDIxYlB0N3hGalZwenM0VUVocVJXaTZmdHNEbmJUZlIzOFFjUnRTUwp0VGpSVjNGaFE4NUY5d2ltNmJodG9sRGx0MktzbmJqSEZrU0RkVlBMbm1nSk9ZeUhTOFBDNVpRcXpadE9EZGJ3Cit5NjVlNUFSN0hadTgvNkV6SFJkZks5VDd5WGtxQWovQlVHQ1BaRUNnWUErN3ZGaldLVkZrOEljM016TU9rQVgKV0YxdmtvdUpxSVlKNCtjcmttMTdEVzd3MG1UbEZpZTV0dCsrckFqWTdKWWpHQW1mcnhkTmFOVVM1MXpQZGplNgpQZ29VamxjYkduVWhiZDQ3eGo3VTRnRkJLa3BoVDdOY0RMQ1dyTkw5a1R6ZGNsTXpISjV4MHRrTnF3eG1IWlJ0CnFjY0FudytVZlpFVUpPVnFVWlU0dXdLQmdRRFdNSzl5R1hmdktNcTdMTGVTREdwTUVxS0h1SDRBNE1WYUVUSHYKOUVHbXllTGlOT2dWM1hNMEFRQmVQblpuZGFOMmFCenNRTUxUVlN2WGRIRnd4aHRpMWxOZDVZUGxxYkREVHE0dQpuMlZBelplUS9EY0k2ZlJWQTlxdnIwYk0yOVV2MFEzZ0pBYkViT3BtQW9iTy9nem9SazlDSHdndTFCQTVtMWVsCmFlMnM4UUtCZ1FDQXkyTzRwRThFU2hUWVBnUHdwQU05MDNjR0JxOGpWcnlUZ1J5Y0pJQ3lCczZndVV5clI0NTUKQ3FtYVVES0NnaXl2MlVJL3ROZTJ6eUZUWEVxWHBHb0c4Tlgyb0tjV1RSQ2ZwcE5pTTFPL1RPaTM3Y2c4MWQ4NwpqM2diY05WM1JmemlFL0ZRTjJ3OVdpQ1Fmd3hHL2FvaXVxRm1zbUh4YXRMeDBES0ViQ2lqaFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/aggregator-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lJWVJYZDhDRjBUa293RFFZSktvWklodmNOQVFFTEJRQXdLREVSTUE4R0ExVUUKQ3hNSVltOXZkR3QxWW1VeEV6QVJCZ05WQkFNVENtRm5aM0psWjJGMGIzSXdIaGNOTVRreE1qQTVNVEExTmpBeApXaGNOTVRreE1qRXdNVEExTmpBeFdqQW9NUkV3RHdZRFZRUUxFd2hpYjI5MGEzVmlaVEVUTUJFR0ExVUVBeE1LCllXZG5jbVZuWVhSdmNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU5kVmR3TGMKUWdadXFFcUZYYU5TV2VlUHdPeFpaK2o2amVpUFJ1aHpaMGU2WFFTMTNSWVZJZHJibDZSS05BMUNzUXY3V0hMNwpTSHVuSVlJR3NpTjY2REJHUHo5cCtmQ09sUHNhdi9Wb2lQQWNWaTl6ZERFbXNHZDkxRnFaWEdqbzNoRmh6L0U2CnRjYzZFTG5vZy8xbTVnUFQyQVVOREVicUJYcUt5aTJZanJCcElFTWtLT2dkZnhGeVhHM2sxbEdPcUg4VmRJQ0cKQklGYVhrd2w4Q2kzQTZUck91cEJZbklhQmhTN3MyZHZxdjV4TEVHdzRQUWU0d0VzZ1VpV0pPYVlXa25vdlJGVgpsMlJBeDNnVW0vbG1oMFhwQXFxWEQrN0ZkajZvQ2xUSlR1a1pjVjhuTS9rQTY2WWt6dzNvaDBmMkV3WDdhSlk0Ck5vcDVrUnZYVG10cEpLc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRS9BNWtoMkloYlNNeVkrT2FLM3oraU5BY1RHTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRRFYvdmZPRlNXNllBYUpTZW9LSW9taDk5RllUS0VIREd1enZ5VEh3TmlQOVFKUzR5djFKaGxYCjFFRXhQaWk3cHoyemJicFNaaUNhSnZNTmtRM05SNHNHQUwxREtsbGEwZEdOSy9wbkNTZ1FvUTRLbmM4MUh6YWUKMHhoVnJvcVZhSGdvb3JpUEsvQ2lVSkhLbnliN0lkTEdBVFlINnhsWS93UnhDME85U2dIYjBsUmFiRWN5QTRxawpoZ082TEFvMHpqZ1lENThKeEZndVZpb0VUYTF2QUtESkJ0eWc2d0NTR2NWMzIrRjJvRG10eWVnSTJCSWhZU2EwCmoyV09TYWJ2UnM4aExYNDZHRnprVDRSSk02YXBhYlNwNFNqYk9PN295NHZ4bVVLRnRHSDh4QXVQbDlhVFBnTVYKK0ptSlhVMkdqd3dROG1SZEU4UkRzbHhCRVBaQjZ3dTgKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.AggregatorCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJRE5tTUxIdkFIZHd3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB4T1RFeQpNRGt4TURVMk1ERmFGdzB4T1RFeU1UQXhNRFUyTURGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDNTBXV0ZpQ09EQUxZQmJxZk85RDlEWUxwU0lUWHJWcVRjVXFHL1NldStlQ09IT2Q1VAo3TC9vV01mb0FMY2JWUXptcFA3eElBOUo2VXNWQjZPVUtxMHkxdFEyTlB3ckNuSjUyZ3d4VXV3bE9HcjNNT01TCjJsMHA1TDFSQ1ZKZVRyUVM3bDE4NVZIUGk3bWF6bmpXcFhpK05MUzY3Mk15TTdVT2Y2UFBMMWlnOCsvcVVmekQKakFUbko2T3Q2Z295cDVVVnltcjR2TXJrTWN5VTM5Rkd4NHg5aUZXY3FrMU5yNUprYmJMb01HV2hrZG52LzcybAoxdHpqc1gyNnVhRVg1TjMyZUlRdEFaZHhRV0RDbnB5bzJMMDNZWDk4ZVBNeUQvQTc1NUZqSWJ2MSs0RjZzQW9HCmY0d2V0UklEUGw0VE9lMUl1K0l2dGIrZGo0K1lxZmtSUFpMVkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGRVazI1VzdPV0pVS1VMdERacTd1WApScFZZT3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWVEQ3RYVjFCK05iMVhyS24vR3pJcjcwVWpOQTVBYlI0Cko0WEhxV0UxTXRaOHZRSlVzQ3QxM3VldHFpcmN3NDBMbGdjUlZxb3JRNmE3bUFhMzQvai8ydTRoT0JSZUIwaTkKQkFqWmR1ZEpBQzE1TTVrWlBvSjljMjZRN3luSGtTL3k5K3ZiWG0waDdTd0xHQzNzSmdUQTk4cGdlcW95VXRwTwowK2dHT01vWVJNNEFmdjBsQUZMRVpENnE3VEVRNEI5N2Rhc1o5RmZReEV3NVozYUV3dVAraHROWjlxUXdJVVpiCmEwSUtrOXdpdVJjcGhJQjRwOUcrN0ROMGUwbGpnUVVJcEZUY2RoNnR6NDcwbXlkNGRVRU1xd3hzVUtlTERJalEKaFRUaGswQ280OHBwOWVFbE1HaFkwVW8vSDVtK2thL2VvNDZOei9SZnVVQkRsN0w2amIzdHZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/aggregator-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJRE5tTUxIdkFIZHd3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB4T1RFeQpNRGt4TURVMk1ERmFGdzB4T1RFeU1UQXhNRFUyTURGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDNTBXV0ZpQ09EQUxZQmJxZk85RDlEWUxwU0lUWHJWcVRjVXFHL1NldStlQ09IT2Q1VAo3TC9vV01mb0FMY2JWUXptcFA3eElBOUo2VXNWQjZPVUtxMHkxdFEyTlB3ckNuSjUyZ3d4VXV3bE9HcjNNT01TCjJsMHA1TDFSQ1ZKZVRyUVM3bDE4NVZIUGk3bWF6bmpXcFhpK05MUzY3Mk15TTdVT2Y2UFBMMWlnOCsvcVVmekQKakFUbko2T3Q2Z295cDVVVnltcjR2TXJrTWN5VTM5Rkd4NHg5aUZXY3FrMU5yNUprYmJMb01HV2hrZG52LzcybAoxdHpqc1gyNnVhRVg1TjMyZUlRdEFaZHhRV0RDbnB5bzJMMDNZWDk4ZVBNeUQvQTc1NUZqSWJ2MSs0RjZzQW9HCmY0d2V0UklEUGw0VE9lMUl1K0l2dGIrZGo0K1lxZmtSUFpMVkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGRVazI1VzdPV0pVS1VMdERacTd1WApScFZZT3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWVEQ3RYVjFCK05iMVhyS24vR3pJcjcwVWpOQTVBYlI0Cko0WEhxV0UxTXRaOHZRSlVzQ3QxM3VldHFpcmN3NDBMbGdjUlZxb3JRNmE3bUFhMzQvai8ydTRoT0JSZUIwaTkKQkFqWmR1ZEpBQzE1TTVrWlBvSjljMjZRN3luSGtTL3k5K3ZiWG0waDdTd0xHQzNzSmdUQTk4cGdlcW95VXRwTwowK2dHT01vWVJNNEFmdjBsQUZMRVpENnE3VEVRNEI5N2Rhc1o5RmZReEV3NVozYUV3dVAraHROWjlxUXdJVVpiCmEwSUtrOXdpdVJjcGhJQjRwOUcrN0ROMGUwbGpnUVVJcEZUY2RoNnR6NDcwbXlkNGRVRU1xd3hzVUtlTERJalEKaFRUaGswQ280OHBwOWVFbE1HaFkwVW8vSDVtK2thL2VvNDZOei9SZnVVQkRsN0w2amIzdHZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.AggregatorClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lJV2txSGdub2hBOUl3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB4T1RFeQpNRGt4TURVMk1ERmFGdzB4T1RFeU1UQXhNRFUyTURGYU1Ed3hGREFTQmdOVkJBb1RDMnQxWW1VdGJXRnpkR1Z5Ck1TUXdJZ1lEVlFRREV4dHplWE4wWlcwNmEzVmlaUzFoY0dselpYSjJaWEl0Y0hKdmVIa3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRGMvZEFEd1dTdHc4aEljVUE4M3FLTW85b0gyNkRhbm95RApLTUg4cUNRcXRHQ1FWZmdQR3NwQUJKdjRRT3EvbW9tOHRJNXE4NGwzODF5aVhhMHNsNjJuOGV5NkcwU3pPUVlkCml0aStydkRaOENmQWk5Qmk4cVZOT1htSFo2VlIxWElsOHlYa1lZcC9GeWQ3WE0zVGh4RzJPVlp1RnZ0WkRsZG8KYjBZLzM2alI4alh5RXp3cXpuVDVqSjFqYjU1a0NIZnZQZWJRd3hXNGN2NXR2b2I5SThheSt0YUFJdTlxcWp0YwpUNXJCVlA5S292Z1l5M3pLbFlOYkRDOE5UMk1QZzE0Rm5zcHFidW0wbnp2bytVNkcvZyt5MllCSzNSdk1UbXFtClFvb09Ea2JGaS9ISUxTM0p5MTU5VW9oTUpPS210Z3FJdFpaZ1AzSU4yeURQOUcxMW9Hd0ZBZ01CQUFHamRUQnoKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUIwR0ExVWREZ1FXQkJUZFVrMjVXN09XSlVLVUx0RFpxN3VYUnBWWU96QWZCZ05WSFNNRUdEQVdnQlRkClVrMjVXN09XSlVLVUx0RFpxN3VYUnBWWU96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFFbjJxdFJVa3BES0QKN0xSVWFYNlVDQXp5Nmszd29MSXdpV2kvckQrZE5jZUJJTExlQ1g4TTY5WXJieTlqTlRMdldwS09Obzljbk1pSQo4LzlzRXAwZ0RlZ0NhQVhQNU5zY3VSZ1pySE9OcDZqcWRkMjBiUjg0RHpBcVJpck1kTEEzemJYMVl4NWRCZDkvCm8zZlBSTWFOd2hXZzdPR3hxemNuekc0YVN4VGtxTEdRd0wvdVU0czRRK0thTU50bEJLZkNOYXgyWWlvK29aaVcKQjhhUGQ2U2l5QTFiU29xSkRnN1NDNGVyZHBTK2hpVVIwVENsVFJudytyOCtoc2xlWi9mcnFMbkZhR25rZDF2QgpuTGR5U0g5Um1zcjBGY0J6UllxdGUvNVhpQzVSaHZMYm81U2tHUXRXeG92VXlVWHhkVzJNcFd1ZkFVRlpuUzJrCkJGbGwxNHo5dVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBM1AzUUE4RmtyY1BJU0hGQVBONmlqS1BhQjl1ZzJwNk1neWpCL0tna0tyUmdrRlg0CkR4cktRQVNiK0VEcXY1cUp2TFNPYXZPSmQvTmNvbDJ0TEpldHAvSHN1aHRFc3prR0hZcll2cTd3MmZBbndJdlEKWXZLbFRUbDVoMmVsVWRWeUpmTWw1R0dLZnhjbmUxek4wNGNSdGpsV2JoYjdXUTVYYUc5R1A5K28wZkkxOGhNOApLczUwK1l5ZFkyK2VaQWgzN3ozbTBNTVZ1SEwrYmI2Ry9TUEdzdnJXZ0NMdmFxbzdYRSthd1ZUL1NxTDRHTXQ4CnlwV0RXd3d2RFU5akQ0TmVCWjdLYW03cHRKODc2UGxPaHY0UHN0bUFTdDBiekU1cXBrS0tEZzVHeFl2eHlDMHQKeWN0ZWZWS0lUQ1RpcHJZS2lMV1dZRDl5RGRzZ3ovUnRkYUJzQlFJREFRQUJBb0lCQUF2QVgzaGpwMVBxTGxOVAoybU9pUHlpVmFmbXkveW5BOXAzZTQvbm9nd3ZXVGJBL01oS3pqUCs4ZndMRGlQZ3BZcHVyU2t0N3FkcThFVGY5CkhVRmF5M3c3ekNmVlhXRGVibW5Sd1ZiYWZLcEtNQUw0TEZ1bXBZMm11Y1N1aVVjQnY3RXU3ZHZvSi9JOEsvaE8KWmcrU2hpbVhnUFlYdU1QeWxFbFVhWHJxRE5NbEljZ2xvNXZrMEJ4NXg2QXpyQTF2MUpmT2lpcllzcFdzK21UaQp1RjVzSjNRMW9QNm9WVkltZERyWlh3TFZkQ0xzTGRBWjhHVkVEbUVScHVpS01kSGs1a1psMjhnbjJnNldGajVXClh3dzJIUkRpaGRhNnhUZHJpdit0UUxVdUVaMnZLNmlFWE5BZlpkRFFiditHU01HMGh4bERLSlFNRENZbEhyR1cKMEE0ZnhQMENnWUVBL3JaTERveVgyRGYwaGFkYTQ0UDdpNEY0SDA0S2Z0Q0VaRGtjSWdKbTVwT2xMNEdWNjBKMwpuVGdtRGQ5U2R1cVY5WjhpR09BR3dTM3laaWxaSUtqcDdPSVVwN01KLytLVHZyOGpIVnFlSVZxcjVJaWNpbGNMClVma0tyOEdLMGdIYWpxbStqT2VMcy9DNmdpR01iZ2xMQVJnbGJyclZMazgvY005TThHdzFTTGNDZ1lFQTNodmUKMGpLUkhKLzFZR0s4REVJZ0JUWHZXN2hJR0JjeWk2dkdPUjFmRkVBcUFPS3ZzSm1pQm0zTDFCOHFmdkhxSXY4VQpQQlpPSkU1eXZsODNZOUZIMFd1RXI4RUxSNFV5bExaUTZWekZnS3dZMXhnVVdjTmRncWp3YkhLbmlmQTVWUW0zCkxpNURETDhkU2tQRlVVaFZUc3lXTUtxVnFlajVOZ0svVUpsN1hTTUNnWUFpdzl6UXVvM0xIREFLd2dIY3hkbmkKZTZSYW1YdERQZENrSVV0ZXRQYzRoM1JuWEllSzJjS2J1ZHN2ejRoZzVMbmRFWUJFNXVibEhSRlZzbFVRNlIwcwprTnNDM0tRRHdmZ3FjOG9tS29Va3hreHAzOStGM2tXVVJhcVl2SkRuQXd2Q3B4WjBBdktGZDlqdEJBazN4NXJ1CkprNk5vNENQVm8reEpRbzZVbnFmVndLQmdFVkdtaHdqcTRFckh5U2VCeHNuc01jUFNJWHFGNHAwQ2M3b2w5NE8KbkM0N3lSNFhsa2JWMUdSKzhIbEw4encvQmhFK1VEaGhtS1BZV0ErcXNTTVFEbjl5TXFPQzZacTRIOHVraGQ0VAprb0tNcXY3RHd1MHdjMFVpbmtLbERENkl6OGtIUzd3NnI2MFZHdlNqNkxKdWhqVWF1S21iT3kwUXZsSXJUeks3CmZHL1RBb0dBTFhXQzVBSWNjVTRrUlVmY1FETVBURmhtVks2UGxVeFZxekdGMjVqUjdHcEdUeXVtSWtVK24wTWIKR1JiWXZleERuZXVLT283Ry9QM2hqZXp2dzFtSzUwM3ZGdmNQcG85VDRndlhXMVIyWnRUQ1VIcEVSSE5ESm1hUApjRkZmRExJa1NXQkh0RkV1cjY3MVVYZ25JbFg5VUREaGRMOHlyMlkva3RUR25ycDZRTTQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/aggregator-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBM1AzUUE4RmtyY1BJU0hGQVBONmlqS1BhQjl1ZzJwNk1neWpCL0tna0tyUmdrRlg0CkR4cktRQVNiK0VEcXY1cUp2TFNPYXZPSmQvTmNvbDJ0TEpldHAvSHN1aHRFc3prR0hZcll2cTd3MmZBbndJdlEKWXZLbFRUbDVoMmVsVWRWeUpmTWw1R0dLZnhjbmUxek4wNGNSdGpsV2JoYjdXUTVYYUc5R1A5K28wZkkxOGhNOApLczUwK1l5ZFkyK2VaQWgzN3ozbTBNTVZ1SEwrYmI2Ry9TUEdzdnJXZ0NMdmFxbzdYRSthd1ZUL1NxTDRHTXQ4CnlwV0RXd3d2RFU5akQ0TmVCWjdLYW03cHRKODc2UGxPaHY0UHN0bUFTdDBiekU1cXBrS0tEZzVHeFl2eHlDMHQKeWN0ZWZWS0lUQ1RpcHJZS2lMV1dZRDl5RGRzZ3ovUnRkYUJzQlFJREFRQUJBb0lCQUF2QVgzaGpwMVBxTGxOVAoybU9pUHlpVmFmbXkveW5BOXAzZTQvbm9nd3ZXVGJBL01oS3pqUCs4ZndMRGlQZ3BZcHVyU2t0N3FkcThFVGY5CkhVRmF5M3c3ekNmVlhXRGVibW5Sd1ZiYWZLcEtNQUw0TEZ1bXBZMm11Y1N1aVVjQnY3RXU3ZHZvSi9JOEsvaE8KWmcrU2hpbVhnUFlYdU1QeWxFbFVhWHJxRE5NbEljZ2xvNXZrMEJ4NXg2QXpyQTF2MUpmT2lpcllzcFdzK21UaQp1RjVzSjNRMW9QNm9WVkltZERyWlh3TFZkQ0xzTGRBWjhHVkVEbUVScHVpS01kSGs1a1psMjhnbjJnNldGajVXClh3dzJIUkRpaGRhNnhUZHJpdit0UUxVdUVaMnZLNmlFWE5BZlpkRFFiditHU01HMGh4bERLSlFNRENZbEhyR1cKMEE0ZnhQMENnWUVBL3JaTERveVgyRGYwaGFkYTQ0UDdpNEY0SDA0S2Z0Q0VaRGtjSWdKbTVwT2xMNEdWNjBKMwpuVGdtRGQ5U2R1cVY5WjhpR09BR3dTM3laaWxaSUtqcDdPSVVwN01KLytLVHZyOGpIVnFlSVZxcjVJaWNpbGNMClVma0tyOEdLMGdIYWpxbStqT2VMcy9DNmdpR01iZ2xMQVJnbGJyclZMazgvY005TThHdzFTTGNDZ1lFQTNodmUKMGpLUkhKLzFZR0s4REVJZ0JUWHZXN2hJR0JjeWk2dkdPUjFmRkVBcUFPS3ZzSm1pQm0zTDFCOHFmdkhxSXY4VQpQQlpPSkU1eXZsODNZOUZIMFd1RXI4RUxSNFV5bExaUTZWekZnS3dZMXhnVVdjTmRncWp3YkhLbmlmQTVWUW0zCkxpNURETDhkU2tQRlVVaFZUc3lXTUtxVnFlajVOZ0svVUpsN1hTTUNnWUFpdzl6UXVvM0xIREFLd2dIY3hkbmkKZTZSYW1YdERQZENrSVV0ZXRQYzRoM1JuWEllSzJjS2J1ZHN2ejRoZzVMbmRFWUJFNXVibEhSRlZzbFVRNlIwcwprTnNDM0tRRHdmZ3FjOG9tS29Va3hreHAzOStGM2tXVVJhcVl2SkRuQXd2Q3B4WjBBdktGZDlqdEJBazN4NXJ1CkprNk5vNENQVm8reEpRbzZVbnFmVndLQmdFVkdtaHdqcTRFckh5U2VCeHNuc01jUFNJWHFGNHAwQ2M3b2w5NE8KbkM0N3lSNFhsa2JWMUdSKzhIbEw4encvQmhFK1VEaGhtS1BZV0ErcXNTTVFEbjl5TXFPQzZacTRIOHVraGQ0VAprb0tNcXY3RHd1MHdjMFVpbmtLbERENkl6OGtIUzd3NnI2MFZHdlNqNkxKdWhqVWF1S21iT3kwUXZsSXJUeks3CmZHL1RBb0dBTFhXQzVBSWNjVTRrUlVmY1FETVBURmhtVks2UGxVeFZxekdGMjVqUjdHcEdUeXVtSWtVK24wTWIKR1JiWXZleERuZXVLT283Ry9QM2hqZXp2dzFtSzUwM3ZGdmNQcG85VDRndlhXMVIyWnRUQ1VIcEVSSE5ESm1hUApjRkZmRExJa1NXQkh0RkV1cjY3MVVYZ25JbFg5VUREaGRMOHlyMlkva3RUR25ycDZRTTQ9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/aggregator-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZekNDQWt1Z0F3SUJBZ0lJV2txSGdub2hBOUl3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB4T1RFeQpNRGt4TURVMk1ERmFGdzB4T1RFeU1UQXhNRFUyTURGYU1Ed3hGREFTQmdOVkJBb1RDMnQxWW1VdGJXRnpkR1Z5Ck1TUXdJZ1lEVlFRREV4dHplWE4wWlcwNmEzVmlaUzFoY0dselpYSjJaWEl0Y0hKdmVIa3dnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRGMvZEFEd1dTdHc4aEljVUE4M3FLTW85b0gyNkRhbm95RApLTUg4cUNRcXRHQ1FWZmdQR3NwQUJKdjRRT3EvbW9tOHRJNXE4NGwzODF5aVhhMHNsNjJuOGV5NkcwU3pPUVlkCml0aStydkRaOENmQWk5Qmk4cVZOT1htSFo2VlIxWElsOHlYa1lZcC9GeWQ3WE0zVGh4RzJPVlp1RnZ0WkRsZG8KYjBZLzM2alI4alh5RXp3cXpuVDVqSjFqYjU1a0NIZnZQZWJRd3hXNGN2NXR2b2I5SThheSt0YUFJdTlxcWp0YwpUNXJCVlA5S292Z1l5M3pLbFlOYkRDOE5UMk1QZzE0Rm5zcHFidW0wbnp2bytVNkcvZyt5MllCSzNSdk1UbXFtClFvb09Ea2JGaS9ISUxTM0p5MTU5VW9oTUpPS210Z3FJdFpaZ1AzSU4yeURQOUcxMW9Hd0ZBZ01CQUFHamRUQnoKTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUIwR0ExVWREZ1FXQkJUZFVrMjVXN09XSlVLVUx0RFpxN3VYUnBWWU96QWZCZ05WSFNNRUdEQVdnQlRkClVrMjVXN09XSlVLVUx0RFpxN3VYUnBWWU96QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFFbjJxdFJVa3BES0QKN0xSVWFYNlVDQXp5Nmszd29MSXdpV2kvckQrZE5jZUJJTExlQ1g4TTY5WXJieTlqTlRMdldwS09Obzljbk1pSQo4LzlzRXAwZ0RlZ0NhQVhQNU5zY3VSZ1pySE9OcDZqcWRkMjBiUjg0RHpBcVJpck1kTEEzemJYMVl4NWRCZDkvCm8zZlBSTWFOd2hXZzdPR3hxemNuekc0YVN4VGtxTEdRd0wvdVU0czRRK0thTU50bEJLZkNOYXgyWWlvK29aaVcKQjhhUGQ2U2l5QTFiU29xSkRnN1NDNGVyZHBTK2hpVVIwVENsVFJudytyOCtoc2xlWi9mcnFMbkZhR25rZDF2QgpuTGR5U0g5Um1zcjBGY0J6UllxdGUvNVhpQzVSaHZMYm81U2tHUXRXeG92VXlVWHhkVzJNcFd1ZkFVRlpuUzJrCkJGbGwxNHo5dVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.AggregatorSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJRE5tTUxIdkFIZHd3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB4T1RFeQpNRGt4TURVMk1ERmFGdzB4T1RFeU1UQXhNRFUyTURGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDNTBXV0ZpQ09EQUxZQmJxZk85RDlEWUxwU0lUWHJWcVRjVXFHL1NldStlQ09IT2Q1VAo3TC9vV01mb0FMY2JWUXptcFA3eElBOUo2VXNWQjZPVUtxMHkxdFEyTlB3ckNuSjUyZ3d4VXV3bE9HcjNNT01TCjJsMHA1TDFSQ1ZKZVRyUVM3bDE4NVZIUGk3bWF6bmpXcFhpK05MUzY3Mk15TTdVT2Y2UFBMMWlnOCsvcVVmekQKakFUbko2T3Q2Z295cDVVVnltcjR2TXJrTWN5VTM5Rkd4NHg5aUZXY3FrMU5yNUprYmJMb01HV2hrZG52LzcybAoxdHpqc1gyNnVhRVg1TjMyZUlRdEFaZHhRV0RDbnB5bzJMMDNZWDk4ZVBNeUQvQTc1NUZqSWJ2MSs0RjZzQW9HCmY0d2V0UklEUGw0VE9lMUl1K0l2dGIrZGo0K1lxZmtSUFpMVkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGRVazI1VzdPV0pVS1VMdERacTd1WApScFZZT3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWVEQ3RYVjFCK05iMVhyS24vR3pJcjcwVWpOQTVBYlI0Cko0WEhxV0UxTXRaOHZRSlVzQ3QxM3VldHFpcmN3NDBMbGdjUlZxb3JRNmE3bUFhMzQvai8ydTRoT0JSZUIwaTkKQkFqWmR1ZEpBQzE1TTVrWlBvSjljMjZRN3luSGtTL3k5K3ZiWG0waDdTd0xHQzNzSmdUQTk4cGdlcW95VXRwTwowK2dHT01vWVJNNEFmdjBsQUZMRVpENnE3VEVRNEI5N2Rhc1o5RmZReEV3NVozYUV3dVAraHROWjlxUXdJVVpiCmEwSUtrOXdpdVJjcGhJQjRwOUcrN0ROMGUwbGpnUVVJcEZUY2RoNnR6NDcwbXlkNGRVRU1xd3hzVUtlTERJalEKaFRUaGswQ280OHBwOWVFbE1HaFkwVW8vSDVtK2thL2VvNDZOei9SZnVVQkRsN0w2amIzdHZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWRGbGhZZ2pnd0MyQVc2bnp2US9RMkM2VWlFMTYxYWszRktodjBucnZuZ2poem5lClUreS82RmpINkFDM0cxVU01cVQrOFNBUFNlbExGUWVqbENxdE10YlVOalQ4S3dweWVkb01NVkxzSlRocTl6RGoKRXRwZEtlUzlVUWxTWGs2MEV1NWRmT1ZSejR1NW1zNTQxcVY0dmpTMHV1OWpNak8xRG4ranp5OVlvUFB2NmxIOAp3NHdFNXllanJlb0tNcWVWRmNwcStMeks1REhNbE4vUlJzZU1mWWhWbktwTlRhK1NaRzJ5NkRCbG9aSFo3Lys5CnBkYmM0N0Y5dXJtaEYrVGQ5bmlFTFFHWGNVRmd3cDZjcU5pOU4yRi9mSGp6TWcvd08rZVJZeUc3OWZ1QmVyQUsKQm4rTUhyVVNBejVlRXpudFNMdmlMN1cvblkrUG1LbjVFVDJTMVFJREFRQUJBb0lCQVFDWmUrbmtpMWZ4M0lONQoyV0lJNHR6aWxhSXhOcmRuNVpDVllEZTBYcVc0RlZvYlYyUmFaQ0w4RTJGRU5Gc0syNHlsY3NJV2Y0bkJYazhqClZzVDZIT29sSlNmeWduK01PYnZuQklHdnVEUFFacktMN2JpU21RWDlGYkIrb0RtR0puSTlkT0NKeW8xeDVwTHYKMlA0ZEpsNytsV0IzVEViZWI3RnRBV2RZT2w1MXlzQUhpeG5vRU8rc3pqbzZ6cTE4UGNkaVZiVllCaTNoZmloZwpDK0xtdmFFbHhKa3QvTmVLK2pnNEk1OC8rSGhoVTNMOHZoejgreHJwRmZUWDVpV2ZZY0ZUb2xjYjNhRzl2TURjCnhQWENvZ2MzWW9nWWpUUytzVWJvS0JWcTcrWS90Yk43UnhER1h4U3N1dENaaDVuV216UTZjWExic2c2R1lUemUKc1poVHh5OGhBb0dCQU45REVvRDU3T1RWbU05M3BDWkRlTjJZdnRIMzNVcWZINkp4RmNpaUwwSk1hY0FrRnlGaApvUGNhc3lMS2Q3THExQ0QwaXFPaDgwSGhlZ01jYnpuY1F4QWVpS2ZsMEdXRVhIRHpPUzZwZU84cHdOTkZGSnlNClRlR1RyeFltRmdwcDZveEFkT0xjRmdpcS9ZZ2JSQ3B5UUcxc2hOaUdCUEZ0bWdya1ZVRk9rVE1aQW9HQkFOVVEKdXROY01pS1V1WG5LcE40N1BUOE5Wc1haeFRzOGJrT3Fubjk3YW9sUEo3ZExvU1gwY0NtQkczRDZHVG9JZHlKNQpKWlFXT21LSE4rWnpxR3l6dGgzdHlYVHJCZnVBVDkwSzZhWGNDaG1xTFEyM044akdjZ2RaUHF4OTZ2b1BaeUZyCnd0RDArOG54M1BvMDBKQ2p2dU5LZzE1ZGJnQlBGa294RVduTGV6RWRBb0dBVWxlZmZIZ3crZGtaaWZNYlZJMXcKQjNLdGRpMVByWlR3aXUzZ1ZlWVRQZ1dHdnpuUVdoeHl6SkJKWDF5RE56YkswL2k5SlVxMnVDYWI1SWZaTWVMZAp6UlVsMjU2ejlLMFRsd2p0bnhzY0lrRXBBQUtyYm0yRXo5eXpKNTBXWmZMWWNhL1lMRTkxeE82am9VNUZIczZTCm1vajZtZzBieDV0ZnhBS2d1dnhxS3drQ2dZQlU3S2dxMnRLNDZlTEw0ck80U0pCdTgxZ2s0Rm8yOUMxWEYwaTUKczIyUmNWVjVQOUhwbVBhajlHd0ZxZ29vRVh1NjUrTE1sZGVMc2kzYjB6bk1xZ3pxL1A2UmRhUWF6TmdJV1BNcwpRdnBicEhMMHhwU2JtRTJYRkVGZzY0ZWZTRWhwRDlURkNRRGJTMll5N0o0OUtLZExYVVhqZFFZRlpZQ1M3ZC9zCjlVZ1RHUUtCZ1FEVjJsQlVUemdMeXVQd3dHS2xXeDl3UVZFRytjQWlQRmNVWDRBMHdwQzZPNWZnTk15N0I1emoKMVBWeUZjeFJnZWU4L2h3anlYYTZHdURwYkxJOGNvVTNMZXhiVmhBYXBIM2Nsb0pUamF6d2hmdGdMM01jM3kzNgo4bzgzZmNJQmh2RnBWdWkrZWVGSGNYRWl5d3VnNFlWcE9FK3VHT2t2NW9yeDM2b1hwUFIyUnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/aggregator-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWRGbGhZZ2pnd0MyQVc2bnp2US9RMkM2VWlFMTYxYWszRktodjBucnZuZ2poem5lClUreS82RmpINkFDM0cxVU01cVQrOFNBUFNlbExGUWVqbENxdE10YlVOalQ4S3dweWVkb01NVkxzSlRocTl6RGoKRXRwZEtlUzlVUWxTWGs2MEV1NWRmT1ZSejR1NW1zNTQxcVY0dmpTMHV1OWpNak8xRG4ranp5OVlvUFB2NmxIOAp3NHdFNXllanJlb0tNcWVWRmNwcStMeks1REhNbE4vUlJzZU1mWWhWbktwTlRhK1NaRzJ5NkRCbG9aSFo3Lys5CnBkYmM0N0Y5dXJtaEYrVGQ5bmlFTFFHWGNVRmd3cDZjcU5pOU4yRi9mSGp6TWcvd08rZVJZeUc3OWZ1QmVyQUsKQm4rTUhyVVNBejVlRXpudFNMdmlMN1cvblkrUG1LbjVFVDJTMVFJREFRQUJBb0lCQVFDWmUrbmtpMWZ4M0lONQoyV0lJNHR6aWxhSXhOcmRuNVpDVllEZTBYcVc0RlZvYlYyUmFaQ0w4RTJGRU5Gc0syNHlsY3NJV2Y0bkJYazhqClZzVDZIT29sSlNmeWduK01PYnZuQklHdnVEUFFacktMN2JpU21RWDlGYkIrb0RtR0puSTlkT0NKeW8xeDVwTHYKMlA0ZEpsNytsV0IzVEViZWI3RnRBV2RZT2w1MXlzQUhpeG5vRU8rc3pqbzZ6cTE4UGNkaVZiVllCaTNoZmloZwpDK0xtdmFFbHhKa3QvTmVLK2pnNEk1OC8rSGhoVTNMOHZoejgreHJwRmZUWDVpV2ZZY0ZUb2xjYjNhRzl2TURjCnhQWENvZ2MzWW9nWWpUUytzVWJvS0JWcTcrWS90Yk43UnhER1h4U3N1dENaaDVuV216UTZjWExic2c2R1lUemUKc1poVHh5OGhBb0dCQU45REVvRDU3T1RWbU05M3BDWkRlTjJZdnRIMzNVcWZINkp4RmNpaUwwSk1hY0FrRnlGaApvUGNhc3lMS2Q3THExQ0QwaXFPaDgwSGhlZ01jYnpuY1F4QWVpS2ZsMEdXRVhIRHpPUzZwZU84cHdOTkZGSnlNClRlR1RyeFltRmdwcDZveEFkT0xjRmdpcS9ZZ2JSQ3B5UUcxc2hOaUdCUEZ0bWdya1ZVRk9rVE1aQW9HQkFOVVEKdXROY01pS1V1WG5LcE40N1BUOE5Wc1haeFRzOGJrT3Fubjk3YW9sUEo3ZExvU1gwY0NtQkczRDZHVG9JZHlKNQpKWlFXT21LSE4rWnpxR3l6dGgzdHlYVHJCZnVBVDkwSzZhWGNDaG1xTFEyM044akdjZ2RaUHF4OTZ2b1BaeUZyCnd0RDArOG54M1BvMDBKQ2p2dU5LZzE1ZGJnQlBGa294RVduTGV6RWRBb0dBVWxlZmZIZ3crZGtaaWZNYlZJMXcKQjNLdGRpMVByWlR3aXUzZ1ZlWVRQZ1dHdnpuUVdoeHl6SkJKWDF5RE56YkswL2k5SlVxMnVDYWI1SWZaTWVMZAp6UlVsMjU2ejlLMFRsd2p0bnhzY0lrRXBBQUtyYm0yRXo5eXpKNTBXWmZMWWNhL1lMRTkxeE82am9VNUZIczZTCm1vajZtZzBieDV0ZnhBS2d1dnhxS3drQ2dZQlU3S2dxMnRLNDZlTEw0ck80U0pCdTgxZ2s0Rm8yOUMxWEYwaTUKczIyUmNWVjVQOUhwbVBhajlHd0ZxZ29vRVh1NjUrTE1sZGVMc2kzYjB6bk1xZ3pxL1A2UmRhUWF6TmdJV1BNcwpRdnBicEhMMHhwU2JtRTJYRkVGZzY0ZWZTRWhwRDlURkNRRGJTMll5N0o0OUtLZExYVVhqZFFZRlpZQ1M3ZC9zCjlVZ1RHUUtCZ1FEVjJsQlVUemdMeXVQd3dHS2xXeDl3UVZFRytjQWlQRmNVWDRBMHdwQzZPNWZnTk15N0I1emoKMVBWeUZjeFJnZWU4L2h3anlYYTZHdURwYkxJOGNvVTNMZXhiVmhBYXBIM2Nsb0pUamF6d2hmdGdMM01jM3kzNgo4bzgzZmNJQmh2RnBWdWkrZWVGSGNYRWl5d3VnNFlWcE9FK3VHT2t2NW9yeDM2b1hwUFIyUnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/aggregator-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lJRE5tTUxIdkFIZHd3RFFZSktvWklodmNOQVFFTEJRQXdNREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sb3dHQVlEVlFRREV4RmhaMmR5WldkaGRHOXlMWE5wWjI1bGNqQWVGdzB4T1RFeQpNRGt4TURVMk1ERmFGdzB4T1RFeU1UQXhNRFUyTURGYU1EQXhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVhCk1CZ0dBMVVFQXhNUllXZG5jbVZuWVhSdmNpMXphV2R1WlhJd2dnRWlNQTBHQ1NxR1NJYjNEUUVCQVFVQUE0SUIKRHdBd2dnRUtBb0lCQVFDNTBXV0ZpQ09EQUxZQmJxZk85RDlEWUxwU0lUWHJWcVRjVXFHL1NldStlQ09IT2Q1VAo3TC9vV01mb0FMY2JWUXptcFA3eElBOUo2VXNWQjZPVUtxMHkxdFEyTlB3ckNuSjUyZ3d4VXV3bE9HcjNNT01TCjJsMHA1TDFSQ1ZKZVRyUVM3bDE4NVZIUGk3bWF6bmpXcFhpK05MUzY3Mk15TTdVT2Y2UFBMMWlnOCsvcVVmekQKakFUbko2T3Q2Z295cDVVVnltcjR2TXJrTWN5VTM5Rkd4NHg5aUZXY3FrMU5yNUprYmJMb01HV2hrZG52LzcybAoxdHpqc1gyNnVhRVg1TjMyZUlRdEFaZHhRV0RDbnB5bzJMMDNZWDk4ZVBNeUQvQTc1NUZqSWJ2MSs0RjZzQW9HCmY0d2V0UklEUGw0VE9lMUl1K0l2dGIrZGo0K1lxZmtSUFpMVkFnTUJBQUdqUWpCQU1BNEdBMVVkRHdFQi93UUUKQXdJQ3BEQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCVGRVazI1VzdPV0pVS1VMdERacTd1WApScFZZT3pBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQWVEQ3RYVjFCK05iMVhyS24vR3pJcjcwVWpOQTVBYlI0Cko0WEhxV0UxTXRaOHZRSlVzQ3QxM3VldHFpcmN3NDBMbGdjUlZxb3JRNmE3bUFhMzQvai8ydTRoT0JSZUIwaTkKQkFqWmR1ZEpBQzE1TTVrWlBvSjljMjZRN3luSGtTL3k5K3ZiWG0waDdTd0xHQzNzSmdUQTk4cGdlcW95VXRwTwowK2dHT01vWVJNNEFmdjBsQUZMRVpENnE3VEVRNEI5N2Rhc1o5RmZReEV3NVozYUV3dVAraHROWjlxUXdJVVpiCmEwSUtrOXdpdVJjcGhJQjRwOUcrN0ROMGUwbGpnUVVJcEZUY2RoNnR6NDcwbXlkNGRVRU1xd3hzVUtlTERJalEKaFRUaGswQ280OHBwOWVFbE1HaFkwVW8vSDVtK2thL2VvNDZOei9SZnVVQkRsN0w2amIzdHZRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.EtcdCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHRENDQWdDZ0F3SUJBZ0lJSTJZQm1rekd2a0l3RFFZSktvWklodmNOQVFFTEJRQXdLakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMQpOVGxhRncweU9URXlNRFl4TURVMU5UbGFNQ294RWpBUUJnTlZCQXNUQ1c5d1pXNXphR2xtZERFVU1CSUdBMVVFCkF4TUxaWFJqWkMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2kKQWJuZHRGL2h5M1IzZ3JLcWxjU1BHMjYzSzgvaElxR3VlRFlQYUlwNW0zQXVtZjBpKzIwNm5GdlVWRHZ0NCtvVQp3QzhNVWZ5RjVtZ3FobnZDTGdFOW9SYWJkc012aHhQODBIaHBVWUdhT2Iwb2d5R2Y3Unp4N3dyY1hWNmpqMkowCk1mUUFIL2lnczNTZjRnY3ZvV1h6THpxMncxSmZIQm1EejZwM2lIWnAxSHZBZUtRWU5McUk4WGl3VVFKN2FlenQKV1BQcG1nYVZRWTkvL0hNNUFOVVY2T1dHbzlXZW5FYmtNY1lOSmVEa2tYKzVYbldQTzBWdFhEd1dmb2dTWTcxbgp3MGl5QytGWnZGNG9NU1dvcko4YitmSVVYS3NSVWlCYjlHNmtwVDFlc0tyRk5hRndsb3h1T0N6cURrRDVxeWxICll1QkJ3Z0ZjZ2t5QURyNHdibE96QWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSd1Q2bWFwTVZCQVkvTVdLMFpEMXQ4SGRXUlNUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBV2g3RGI2V0EyazB3ZDllNUdmV1Z1SXhDTjUxekc2UXdWSjBWRXIybU1FV2x2Ym1wCnVsT1JseDdlVWJEKzJrT252MENBS2VFblVjWkJNWmNZeXlDTjhYZ2dFL0p5MWdTZXZmTXhNRkhIdXIxNkFFZmMKSVdET2J2clQvb1c3NXdET2dQcXpwVUlIYnA5WlRyKzQ5YTZ2eTBidDlWNC9VMjBwZTNkb3hVdUQyWmZ1QmlrOApxUFNSQVNac3JLV1JQQkhWZ01rdDMrUGVuN3VSZ2ZXSG5SWW5QOERJSnFrQkhzbXFKTTZYNmJXZ3Y5SkhqUUdBCnlTeFdSeGJVSzJZbEdCSUdQeDF1anp1aGNUNkljN0xDVmFLVElSNUViNVpab3lqYWFoNUkvdzRwZVgxWENpQk4KRXdvdmtucmxUZlpMVGROSHRQVURWaVZzY2hrc3VNaEZDQ0ZBL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/etcd-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHRENDQWdDZ0F3SUJBZ0lJSTJZQm1rekd2a0l3RFFZSktvWklodmNOQVFFTEJRQXdLakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMQpOVGxhRncweU9URXlNRFl4TURVMU5UbGFNQ294RWpBUUJnTlZCQXNUQ1c5d1pXNXphR2xtZERFVU1CSUdBMVVFCkF4TUxaWFJqWkMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2kKQWJuZHRGL2h5M1IzZ3JLcWxjU1BHMjYzSzgvaElxR3VlRFlQYUlwNW0zQXVtZjBpKzIwNm5GdlVWRHZ0NCtvVQp3QzhNVWZ5RjVtZ3FobnZDTGdFOW9SYWJkc012aHhQODBIaHBVWUdhT2Iwb2d5R2Y3Unp4N3dyY1hWNmpqMkowCk1mUUFIL2lnczNTZjRnY3ZvV1h6THpxMncxSmZIQm1EejZwM2lIWnAxSHZBZUtRWU5McUk4WGl3VVFKN2FlenQKV1BQcG1nYVZRWTkvL0hNNUFOVVY2T1dHbzlXZW5FYmtNY1lOSmVEa2tYKzVYbldQTzBWdFhEd1dmb2dTWTcxbgp3MGl5QytGWnZGNG9NU1dvcko4YitmSVVYS3NSVWlCYjlHNmtwVDFlc0tyRk5hRndsb3h1T0N6cURrRDVxeWxICll1QkJ3Z0ZjZ2t5QURyNHdibE96QWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSd1Q2bWFwTVZCQVkvTVdLMFpEMXQ4SGRXUlNUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBV2g3RGI2V0EyazB3ZDllNUdmV1Z1SXhDTjUxekc2UXdWSjBWRXIybU1FV2x2Ym1wCnVsT1JseDdlVWJEKzJrT252MENBS2VFblVjWkJNWmNZeXlDTjhYZ2dFL0p5MWdTZXZmTXhNRkhIdXIxNkFFZmMKSVdET2J2clQvb1c3NXdET2dQcXpwVUlIYnA5WlRyKzQ5YTZ2eTBidDlWNC9VMjBwZTNkb3hVdUQyWmZ1QmlrOApxUFNSQVNac3JLV1JQQkhWZ01rdDMrUGVuN3VSZ2ZXSG5SWW5QOERJSnFrQkhzbXFKTTZYNmJXZ3Y5SkhqUUdBCnlTeFdSeGJVSzJZbEdCSUdQeDF1anp1aGNUNkljN0xDVmFLVElSNUViNVpab3lqYWFoNUkvdzRwZVgxWENpQk4KRXdvdmtucmxUZlpMVGROSHRQVURWaVZzY2hrc3VNaEZDQ0ZBL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.EtcdMetricCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lJQVM5NUNudnJQbGN3RFFZSktvWklodmNOQVFFTEJRQXdNVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sc3dHUVlEVlFRREV4SmxkR05rTFcxbGRISnBZeTF6YVdkdVpYSXdIaGNOTVRreApNakE1TVRBMU5qQXdXaGNOTWpreE1qQTJNVEExTmpBd1dqQXhNUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4Ckd6QVpCZ05WQkFNVEVtVjBZMlF0YldWMGNtbGpMWE5wWjI1bGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNZFl2RUtCMGpPcmxITUp6OWVYWVZUQ3BTaTltbmZBS0oxNjJ2ZzBlRDNLSkJNdwppZzIxUk8zRWFXTFVJeC9pSVNTS0lsMGFNMzVUa3lLT29xT09WczFDQ0U2dExsdWdqMnZHTlIrOG5wc1hlKzdDCnBsQUhvU1ZYN0MwaGlIWWovQmhzREhrYWtFclcwYThpZzNIb1Z0WnlTdVBCSnAyTUpSRHdLVTQ1STNxMmxoVnIKMFZhOG5DTnM2Z3ZYc2xXUVpVVmlxdWNHRkxCMk4zZlB0Mm5lMUFZVzNQeW5FTDY2Z3Exa1B5Z09GMGhGUlZCSApjMTJ5VTkzRnkvWUZzVUxDNnNjSzYxRWFJcDBNTVNSNzVGWFVQb21pWjJEWWVMSEdXQ1Q3b1REZ1orcDJ0YmlLCmJMcnkyNmo4M1VUZC9lQnVnc0lYQmFYa1ZlZGpuQ3NjZ3A4cEJEc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGR1BJSGs2RFAxU1hxZ3pyN0xIeQpnOGRDaVVTK01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQU0wd2RKNHcvc1BpTloxN3lOTFNiMXlEU1l6cEIzClBYTGFZK05hZUVVNkYrZ3VrcWxHa0VnOW5QcFRXZENWZVp1NERQVVVLK2hFT1pvb0Q1cU0yNndqWjdNVWVVdUUKK3RrTXM2LzZTWUtQL1BmY3R6RlVuSWFoL1FFNUhCU2I2ZDZrVUdpbzVpR1Z0NXg5RnB6NmdXRmt3SUtuY2gxbgo3V1Bjb1Vic0plNEFPOGNsUjR1bWM1bnZRMnZubzlRWHFUZ3lTbDU3dTM4TzdadTNuTXcyeHV2OXdsNlZGV05OCm14eDBrR2tLUEZoNXRzaWFnRU5xTnVjaitHT01HT2RNd09QSFBsS2p2Q21wZEoyOHA2R0k1VURRU2lMKzBFKzkKVS9wMU1vOWxUeGNjYmR2SEx2SHlmbjFlNWZqaDFEKzg5VWZlUlFueXJNMjEyZXp6U2VpNGc3ekkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/etcd-metric-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lJQVM5NUNudnJQbGN3RFFZSktvWklodmNOQVFFTEJRQXdNVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sc3dHUVlEVlFRREV4SmxkR05rTFcxbGRISnBZeTF6YVdkdVpYSXdIaGNOTVRreApNakE1TVRBMU5qQXdXaGNOTWpreE1qQTJNVEExTmpBd1dqQXhNUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4Ckd6QVpCZ05WQkFNVEVtVjBZMlF0YldWMGNtbGpMWE5wWjI1bGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNZFl2RUtCMGpPcmxITUp6OWVYWVZUQ3BTaTltbmZBS0oxNjJ2ZzBlRDNLSkJNdwppZzIxUk8zRWFXTFVJeC9pSVNTS0lsMGFNMzVUa3lLT29xT09WczFDQ0U2dExsdWdqMnZHTlIrOG5wc1hlKzdDCnBsQUhvU1ZYN0MwaGlIWWovQmhzREhrYWtFclcwYThpZzNIb1Z0WnlTdVBCSnAyTUpSRHdLVTQ1STNxMmxoVnIKMFZhOG5DTnM2Z3ZYc2xXUVpVVmlxdWNHRkxCMk4zZlB0Mm5lMUFZVzNQeW5FTDY2Z3Exa1B5Z09GMGhGUlZCSApjMTJ5VTkzRnkvWUZzVUxDNnNjSzYxRWFJcDBNTVNSNzVGWFVQb21pWjJEWWVMSEdXQ1Q3b1REZ1orcDJ0YmlLCmJMcnkyNmo4M1VUZC9lQnVnc0lYQmFYa1ZlZGpuQ3NjZ3A4cEJEc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGR1BJSGs2RFAxU1hxZ3pyN0xIeQpnOGRDaVVTK01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQU0wd2RKNHcvc1BpTloxN3lOTFNiMXlEU1l6cEIzClBYTGFZK05hZUVVNkYrZ3VrcWxHa0VnOW5QcFRXZENWZVp1NERQVVVLK2hFT1pvb0Q1cU0yNndqWjdNVWVVdUUKK3RrTXM2LzZTWUtQL1BmY3R6RlVuSWFoL1FFNUhCU2I2ZDZrVUdpbzVpR1Z0NXg5RnB6NmdXRmt3SUtuY2gxbgo3V1Bjb1Vic0plNEFPOGNsUjR1bWM1bnZRMnZubzlRWHFUZ3lTbDU3dTM4TzdadTNuTXcyeHV2OXdsNlZGV05OCm14eDBrR2tLUEZoNXRzaWFnRU5xTnVjaitHT01HT2RNd09QSFBsS2p2Q21wZEoyOHA2R0k1VURRU2lMKzBFKzkKVS9wMU1vOWxUeGNjYmR2SEx2SHlmbjFlNWZqaDFEKzg5VWZlUlFueXJNMjEyZXp6U2VpNGc3ekkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.EtcdMetricSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lJQVM5NUNudnJQbGN3RFFZSktvWklodmNOQVFFTEJRQXdNVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sc3dHUVlEVlFRREV4SmxkR05rTFcxbGRISnBZeTF6YVdkdVpYSXdIaGNOTVRreApNakE1TVRBMU5qQXdXaGNOTWpreE1qQTJNVEExTmpBd1dqQXhNUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4Ckd6QVpCZ05WQkFNVEVtVjBZMlF0YldWMGNtbGpMWE5wWjI1bGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNZFl2RUtCMGpPcmxITUp6OWVYWVZUQ3BTaTltbmZBS0oxNjJ2ZzBlRDNLSkJNdwppZzIxUk8zRWFXTFVJeC9pSVNTS0lsMGFNMzVUa3lLT29xT09WczFDQ0U2dExsdWdqMnZHTlIrOG5wc1hlKzdDCnBsQUhvU1ZYN0MwaGlIWWovQmhzREhrYWtFclcwYThpZzNIb1Z0WnlTdVBCSnAyTUpSRHdLVTQ1STNxMmxoVnIKMFZhOG5DTnM2Z3ZYc2xXUVpVVmlxdWNHRkxCMk4zZlB0Mm5lMUFZVzNQeW5FTDY2Z3Exa1B5Z09GMGhGUlZCSApjMTJ5VTkzRnkvWUZzVUxDNnNjSzYxRWFJcDBNTVNSNzVGWFVQb21pWjJEWWVMSEdXQ1Q3b1REZ1orcDJ0YmlLCmJMcnkyNmo4M1VUZC9lQnVnc0lYQmFYa1ZlZGpuQ3NjZ3A4cEJEc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGR1BJSGs2RFAxU1hxZ3pyN0xIeQpnOGRDaVVTK01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQU0wd2RKNHcvc1BpTloxN3lOTFNiMXlEU1l6cEIzClBYTGFZK05hZUVVNkYrZ3VrcWxHa0VnOW5QcFRXZENWZVp1NERQVVVLK2hFT1pvb0Q1cU0yNndqWjdNVWVVdUUKK3RrTXM2LzZTWUtQL1BmY3R6RlVuSWFoL1FFNUhCU2I2ZDZrVUdpbzVpR1Z0NXg5RnB6NmdXRmt3SUtuY2gxbgo3V1Bjb1Vic0plNEFPOGNsUjR1bWM1bnZRMnZubzlRWHFUZ3lTbDU3dTM4TzdadTNuTXcyeHV2OXdsNlZGV05OCm14eDBrR2tLUEZoNXRzaWFnRU5xTnVjaitHT01HT2RNd09QSFBsS2p2Q21wZEoyOHA2R0k1VURRU2lMKzBFKzkKVS9wMU1vOWxUeGNjYmR2SEx2SHlmbjFlNWZqaDFEKzg5VWZlUlFueXJNMjEyZXp6U2VpNGc3ekkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeDFpOFFvSFNNNnVVY3duUDE1ZGhWTUtsS0wyYWQ4QW9uWHJhK0RSNFBjb2tFekNLCkRiVkU3Y1JwWXRRakgrSWhKSW9pWFJvemZsT1RJbzZpbzQ1V3pVSUlUcTB1VzZDUGE4WTFIN3llbXhkNzdzS20KVUFlaEpWZnNMU0dJZGlQOEdHd01lUnFRU3RiUnJ5S0RjZWhXMW5KSzQ4RW1uWXdsRVBBcFRqa2plcmFXRld2UgpWcnljSTJ6cUM5ZXlWWkJsUldLcTV3WVVzSFkzZDgrM2FkN1VCaGJjL0tjUXZycUNyV1EvS0E0WFNFVkZVRWR6ClhiSlQzY1hMOWdXeFFzTHF4d3JyVVJvaW5Rd3hKSHZrVmRRK2lhSm5ZTmg0c2NaWUpQdWhNT0JuNm5hMXVJcHMKdXZMYnFQemRSTjM5NEc2Q3doY0ZwZVJWNTJPY0t4eUNueWtFT3dJREFRQUJBb0lCQUUvbzJ6YVIwZEJTcEdSawo5NE1GdE1lRWF5NWtxdW44Qm92eU5wcXVkZERYR2hUekxUUUhpUVVDNmZmcTc5V1ZFUklUcVdqRzJ3TjF2eEpvCk9QdjFVQWhod3ZDKzdVbGZtSDVzYXRrNUJCOUpqNjJMSzU0RElPN1dTdDlnaE5KTzVIeHB1NnBFSXJsTldhcXAKM0NVcUxMMHovWjlFeXhUMm05a3BYSFYxNUNvSkZ0ekc1MFgrbTJaVElRdU1Sb2JPRXBBeHpmeGt4dXkvdzMyOAp1aDZPVHJFSVJMempTUEc1MFJiblpTcFU1Y3EvTGJXcTBVNTdDTmkwZU52QVJnMEdTNjdObURpVmFnenBLRERNCm50c1c1N3lnZ3hLUUZ3YXE2Rys3eG5Zdzh5T3ErNFgzK1p6YnNUNm1nOVAralhwWkdLWU5JMHdhbS9wM3A3NGMKcVZyRlhIa0NnWUVBL1ZXL0tLRWtvUitPbmxoeGtUOGNFTnV5dUlhYVAzcVFSZFpudWtQRm9qeHhZcXJEL0wvQwptNFBPbW5NQ2g4cVNXTDQvd2xtUWU4ampaYktZcXhKYm5RMVVsMktDcnNFUFBKR0pzM2hPOUgvZWdzTVFiTXBKClhRbFNBRU9OZWE1K0VYV2pIT3h0czZPNGJWWTZpV3AvbnMrVHZKWGhzb3VsTmhxZzlmZzNTY2NDZ1lFQXlYR1gKNXc1ak16UDdZVE5TbnE5VTFPYi93MDd4RmtLZ3I4K0k4a3Bra1FJcVZuVlJiK3FpUFhrVGZuamNxeG5UczFBUQpWYzNOaFY5QWYxZ0JVYmRwVUZpRVczMzNuWjhYbUpobEpxOWZaT3NUdTd5d2ptcDB3V1QxbGZSNDgyU1RaTDhoCjVuZ3BJS0YrcjRvMUE5THdqQW83dFVFYXZGVS9aN3VrYnVOUWtlMENnWUIyYTUyMjlWUzFDSlpYU0lxVjFjVmQKMEFVRUlzOTV1dVl6N3h4L3dteGhBUllUaERXbk1WQmI5OG9kQW9QOVMrRUxJS3VYUXR5Nk1GYXoxRDl2UUY2WQoxSUZsWG9RdUFrc0lDaFF2VTU2OHhnVVNaUEtKbUNtaEZ0bEJERkxXdlkxcXhlMmdlSmh6TDZYblhqWnd3OXF5Ck51QWRlSWFQT3AzWTQ2dTRMdlpSUXdLQmdFdi9qQlNDekJBa08yR0hjRk1ueUxSdDFlNUVXUlpSMnJlWmI0d2gKWHVHS1ZKaTd1QmFtQ2NGeGJWWlltTUFBaFdyditNbTJWQ1JPTkZJV3pLQ2N0cUcyVTNFRkRDY3VQME8xc3V1dQpYQ29CdWpjb3o5OWE4R09LQ0ZFam80SUgzc2V5aUVLZjhMdzcwVVMrdXBPUHdHckU3WlBMVlIvYWRZcFlNNGdXClFHNWRBb0dBTStBQkphNmZwYmpMMmVWTDh3TnhjQW8xdGdPZ2JkQktLV3h2b3IwTkdhNkc5Zks2N0pFTEg5WU0KZDZjSC9MMGNhaHAzeHQyazdQRGlzSFNLK1UyZ3dBMzBDbjZXSG5ucUtLUkFPVC9SaXlrd3ZodUdmbGF5SHpnaApXekR3WVlUU1FpbGxHSkwxb1JmQU5DREpXK1VsWG1oOU5tbnpQYnI5RXZ1WC83QnhFUkk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/etcd-metric-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBeDFpOFFvSFNNNnVVY3duUDE1ZGhWTUtsS0wyYWQ4QW9uWHJhK0RSNFBjb2tFekNLCkRiVkU3Y1JwWXRRakgrSWhKSW9pWFJvemZsT1RJbzZpbzQ1V3pVSUlUcTB1VzZDUGE4WTFIN3llbXhkNzdzS20KVUFlaEpWZnNMU0dJZGlQOEdHd01lUnFRU3RiUnJ5S0RjZWhXMW5KSzQ4RW1uWXdsRVBBcFRqa2plcmFXRld2UgpWcnljSTJ6cUM5ZXlWWkJsUldLcTV3WVVzSFkzZDgrM2FkN1VCaGJjL0tjUXZycUNyV1EvS0E0WFNFVkZVRWR6ClhiSlQzY1hMOWdXeFFzTHF4d3JyVVJvaW5Rd3hKSHZrVmRRK2lhSm5ZTmg0c2NaWUpQdWhNT0JuNm5hMXVJcHMKdXZMYnFQemRSTjM5NEc2Q3doY0ZwZVJWNTJPY0t4eUNueWtFT3dJREFRQUJBb0lCQUUvbzJ6YVIwZEJTcEdSawo5NE1GdE1lRWF5NWtxdW44Qm92eU5wcXVkZERYR2hUekxUUUhpUVVDNmZmcTc5V1ZFUklUcVdqRzJ3TjF2eEpvCk9QdjFVQWhod3ZDKzdVbGZtSDVzYXRrNUJCOUpqNjJMSzU0RElPN1dTdDlnaE5KTzVIeHB1NnBFSXJsTldhcXAKM0NVcUxMMHovWjlFeXhUMm05a3BYSFYxNUNvSkZ0ekc1MFgrbTJaVElRdU1Sb2JPRXBBeHpmeGt4dXkvdzMyOAp1aDZPVHJFSVJMempTUEc1MFJiblpTcFU1Y3EvTGJXcTBVNTdDTmkwZU52QVJnMEdTNjdObURpVmFnenBLRERNCm50c1c1N3lnZ3hLUUZ3YXE2Rys3eG5Zdzh5T3ErNFgzK1p6YnNUNm1nOVAralhwWkdLWU5JMHdhbS9wM3A3NGMKcVZyRlhIa0NnWUVBL1ZXL0tLRWtvUitPbmxoeGtUOGNFTnV5dUlhYVAzcVFSZFpudWtQRm9qeHhZcXJEL0wvQwptNFBPbW5NQ2g4cVNXTDQvd2xtUWU4ampaYktZcXhKYm5RMVVsMktDcnNFUFBKR0pzM2hPOUgvZWdzTVFiTXBKClhRbFNBRU9OZWE1K0VYV2pIT3h0czZPNGJWWTZpV3AvbnMrVHZKWGhzb3VsTmhxZzlmZzNTY2NDZ1lFQXlYR1gKNXc1ak16UDdZVE5TbnE5VTFPYi93MDd4RmtLZ3I4K0k4a3Bra1FJcVZuVlJiK3FpUFhrVGZuamNxeG5UczFBUQpWYzNOaFY5QWYxZ0JVYmRwVUZpRVczMzNuWjhYbUpobEpxOWZaT3NUdTd5d2ptcDB3V1QxbGZSNDgyU1RaTDhoCjVuZ3BJS0YrcjRvMUE5THdqQW83dFVFYXZGVS9aN3VrYnVOUWtlMENnWUIyYTUyMjlWUzFDSlpYU0lxVjFjVmQKMEFVRUlzOTV1dVl6N3h4L3dteGhBUllUaERXbk1WQmI5OG9kQW9QOVMrRUxJS3VYUXR5Nk1GYXoxRDl2UUY2WQoxSUZsWG9RdUFrc0lDaFF2VTU2OHhnVVNaUEtKbUNtaEZ0bEJERkxXdlkxcXhlMmdlSmh6TDZYblhqWnd3OXF5Ck51QWRlSWFQT3AzWTQ2dTRMdlpSUXdLQmdFdi9qQlNDekJBa08yR0hjRk1ueUxSdDFlNUVXUlpSMnJlWmI0d2gKWHVHS1ZKaTd1QmFtQ2NGeGJWWlltTUFBaFdyditNbTJWQ1JPTkZJV3pLQ2N0cUcyVTNFRkRDY3VQME8xc3V1dQpYQ29CdWpjb3o5OWE4R09LQ0ZFam80SUgzc2V5aUVLZjhMdzcwVVMrdXBPUHdHckU3WlBMVlIvYWRZcFlNNGdXClFHNWRBb0dBTStBQkphNmZwYmpMMmVWTDh3TnhjQW8xdGdPZ2JkQktLV3h2b3IwTkdhNkc5Zks2N0pFTEg5WU0KZDZjSC9MMGNhaHAzeHQyazdQRGlzSFNLK1UyZ3dBMzBDbjZXSG5ucUtLUkFPVC9SaXlrd3ZodUdmbGF5SHpnaApXekR3WVlUU1FpbGxHSkwxb1JmQU5DREpXK1VsWG1oOU5tbnpQYnI5RXZ1WC83QnhFUkk9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/etcd-metric-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKakNDQWc2Z0F3SUJBZ0lJQVM5NUNudnJQbGN3RFFZSktvWklodmNOQVFFTEJRQXdNVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sc3dHUVlEVlFRREV4SmxkR05rTFcxbGRISnBZeTF6YVdkdVpYSXdIaGNOTVRreApNakE1TVRBMU5qQXdXaGNOTWpreE1qQTJNVEExTmpBd1dqQXhNUkl3RUFZRFZRUUxFd2x2Y0dWdWMyaHBablF4Ckd6QVpCZ05WQkFNVEVtVjBZMlF0YldWMGNtbGpMWE5wWjI1bGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFNZFl2RUtCMGpPcmxITUp6OWVYWVZUQ3BTaTltbmZBS0oxNjJ2ZzBlRDNLSkJNdwppZzIxUk8zRWFXTFVJeC9pSVNTS0lsMGFNMzVUa3lLT29xT09WczFDQ0U2dExsdWdqMnZHTlIrOG5wc1hlKzdDCnBsQUhvU1ZYN0MwaGlIWWovQmhzREhrYWtFclcwYThpZzNIb1Z0WnlTdVBCSnAyTUpSRHdLVTQ1STNxMmxoVnIKMFZhOG5DTnM2Z3ZYc2xXUVpVVmlxdWNHRkxCMk4zZlB0Mm5lMUFZVzNQeW5FTDY2Z3Exa1B5Z09GMGhGUlZCSApjMTJ5VTkzRnkvWUZzVUxDNnNjSzYxRWFJcDBNTVNSNzVGWFVQb21pWjJEWWVMSEdXQ1Q3b1REZ1orcDJ0YmlLCmJMcnkyNmo4M1VUZC9lQnVnc0lYQmFYa1ZlZGpuQ3NjZ3A4cEJEc0NBd0VBQWFOQ01FQXdEZ1lEVlIwUEFRSC8KQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGR1BJSGs2RFAxU1hxZ3pyN0xIeQpnOGRDaVVTK01BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQU0wd2RKNHcvc1BpTloxN3lOTFNiMXlEU1l6cEIzClBYTGFZK05hZUVVNkYrZ3VrcWxHa0VnOW5QcFRXZENWZVp1NERQVVVLK2hFT1pvb0Q1cU0yNndqWjdNVWVVdUUKK3RrTXM2LzZTWUtQL1BmY3R6RlVuSWFoL1FFNUhCU2I2ZDZrVUdpbzVpR1Z0NXg5RnB6NmdXRmt3SUtuY2gxbgo3V1Bjb1Vic0plNEFPOGNsUjR1bWM1bnZRMnZubzlRWHFUZ3lTbDU3dTM4TzdadTNuTXcyeHV2OXdsNlZGV05OCm14eDBrR2tLUEZoNXRzaWFnRU5xTnVjaitHT01HT2RNd09QSFBsS2p2Q21wZEoyOHA2R0k1VURRU2lMKzBFKzkKVS9wMU1vOWxUeGNjYmR2SEx2SHlmbjFlNWZqaDFEKzg5VWZlUlFueXJNMjEyZXp6U2VpNGc3ekkKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.EtcdMetricSignerClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWRENDQWp5Z0F3SUJBZ0lJUlhLUlhxaEpxcVV3RFFZSktvWklodmNOQVFFTEJRQXdNVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sc3dHUVlEVlFRREV4SmxkR05rTFcxbGRISnBZeTF6YVdkdVpYSXdIaGNOTVRreApNakE1TVRBMU5qQXdXaGNOTWpreE1qQTJNVEExTmpBd1dqQXNNUlF3RWdZRFZRUUxFd3RsZEdOa0xXMWxkSEpwCll6RVVNQklHQTFVRUF4TUxaWFJqWkMxdFpYUnlhV013Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUNsdWFSckIvenZRWjlPd2lqQXI0ZzFvR0JMVkxEakxNOEFLeDBzYXppZWF2NGQ1N1RPZUhZTwpZUTNWLzZ1VmljdWpGdWtWd2hBV1luNTh1MEtZUnZjNmN2UVYrQSsraXFEeWxhTGVWbkwxUm1xdzF6aGNFWDRLCnVsaFpyTm1WUUZrNmNmWGsxSnhhajljWGE2aVhOTXFSY0x5N1puWnJvdjUzL0d0YjdmRkUyUEFRbGhaTm5XWFcKQngvOXRHY1VHTTZTOWZkeG85OXVjQzZVU3drRHZBSU9qeEdaOHR0WWdDUkprb05QZU1hQU51Y3FNaW9uYmVzOApSR1k5NFdOTUZnWTJTN214bnFzR2wvS2ZsdzNMMGVVNm1Ddk5VYWZnLzZTbjVwRUgzSi9iUVVyUG5JdzZzMXZaCmtlVzdCTGRlTGIvUW9tMW1mdzI4aFJUR21oWWNWYm9yQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUYKb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJSagp5QjVPZ3o5VWw2b002K3l4OG9QSFFvbEV2akFmQmdOVkhTTUVHREFXZ0JSanlCNU9nejlVbDZvTTYreXg4b1BIClFvbEV2akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBeGY3azlick55Q0VHaUpHNmdUQzBUcDg2eUdrN2czYVcKTGlrY2FjdXN4Vy8rampNTmNKcnMvbXRSSnd4SVBPY2dwOHRaRkdIWlZDRnFXMUdUZ2trLyt0QjFxalNta0xQZQpUUk8wTkJJWnJZOUZFbTYxcThhT2E4a2ZCQ1ZYSjNOWXhFU29BRGtMTUFEcXdHNk94S0VBMVROdVFTU1d6OHdLCllpUFZrWmNINVFGaFMrWEJIa2JueDk1WlpML2x3KzhQZXJWVkVIZTNlQUd0c1BvQndiOXQzQWhiRndZWVJBODYKSnYrbWxmOXRTaFZCeEx6aHFsN010M1hybUpaUWxHMWxtSDNHMVNuSUY5MFVxcHVOcVJkOUI1V292R0FkM3FmawpHNjJpT3BtcS9YajNGVUFTOVE0Vjg3WWx3T1JlTU14MkJJSU9OTEc3NXpDS1duelJDb2pKeUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcGJta2F3Zjg3MEdmVHNJb3dLK0lOYUJnUzFTdzR5elBBQ3NkTEdzNG5tcitIZWUwCnpuaDJEbUVOMWYrcmxZbkxveGJwRmNJUUZtSitmTHRDbUViM09uTDBGZmdQdm9xZzhwV2kzbFp5OVVacXNOYzQKWEJGK0NycFlXYXpabFVCWk9uSDE1TlNjV28vWEYydW9selRLa1hDOHUyWjJhNkwrZC94clcrM3hSTmp3RUpZVwpUWjFsMWdjZi9iUm5GQmpPa3ZYM2NhUGZibkF1bEVzSkE3d0NEbzhSbWZMYldJQWtTWktEVDNqR2dEYm5LaklxCkoyM3JQRVJtUGVGalRCWUdOa3U1c1o2ckJwZnluNWNOeTlIbE9wZ3J6VkduNFAra3ArYVJCOXlmMjBGS3o1eU0KT3JOYjJaSGx1d1MzWGkyLzBLSnRabjhOdklVVXhwb1dIRlc2S3dJREFRQUJBb0lCQUFzTzRSYTNPTHhxUDR3TQp6cFZVNFJ6YTc3SDNHN3A4NGU4YjhWMW1aaWZEOGVMaTlDQ1d6eUhVZmd6YWU0T0Y1MDJobUxuMzhnVGNXNTVOCkRIdUd1TFp3dHpMRUU2RGVOVEVhcFB4Ni9qNjVqU0x4cVhRVFFycktobHl0ZVBOSmtPcWljZ3JyMk9iK0ZCY2UKK3Vma0FPUkZob0ptcXQ0eHlSTU9oOGRoa0NqTXlXdnIxMVg2VzU0emZkMUVUVDZUMFNiSjFSR1F0ZkhTQ2diSQowbk1QdE1VT2h6SUVsSWhDQnVlR3MrZ2NjQnZWREJJbWNsZ3c1VnpJQzRJMGdFa24xeGlYMVpMWXJFN3crR0orCmlvdURhZ2FzUkNxTURkRDJ2SWhIYllzN2RLZis0bDEzdlJwSGE4d2pTSVB3Ry9ZV3pxYWpWNENOdE1adVc4ZW4Ka3lhQjJoRUNnWUVBMTNoeWp0VDVBUGZKaE94aW9GVGw5UU5NRWpEck41YUtQdVRQaEl6VGp5bUxUdC8zZWNNcgp1OUVWc1dpeHF4V0ZUVThFUUdYQmt3UFU4QnB0QW5xbHlPNEdYWlFXSmo4VDhiSHZYL0U0QTVxRk84aFpmWGRpCmo0YVI4UUROOExKTUp2djdXMzZQV2p5SjdzWDNmSzk0K016T3kxNXNHTlYzSStMNTFkRFJ1VE1DZ1lFQXhPWE8Kc0NyNTR6bTczL3dQTDJ6aTVnMjBGd3hJRFNXVlJwSWFqMDBvdkp5VS9IbDduTWNkaTY0VFhMYVVDK000ZkRrTQpoQWlOWnd6YlpPbXNqSUtFaWRRaEsvUnNTdmFmOTVmV2tYVlQxYTJGZEFwWG4vWkJZTktuV3A0bTNrSlZMMGUxCjRXa29SbnZHYTBQdHJuY01FOHR6dkFlbTdkNmQ0WXoyNXovT3F5a0NnWUFsTDBZbDNCODB5WTVmZ0NQdEkzbWoKOVBPMTEvZGYybnoxS2F1ZVptZEVONWt3L1huSjY2S3FnUVRMWHhQNlFIYUd4dkltNHVpckpHZ2xINHBjZVNvUApLUFMwUlpBay9aSEZqajJQUXlPMWkzOGV1QTZwbG1iTitoMUppQ2dDTitMb2YyZjdmRFhsRHJtSEdXY0NmNDNTCjhoVm1CMStFVWFLRDhQSElzb2JlL1FLQmdFTXVTZlJ2NVcwek1MZyt6NHVWOG1FZVFka3ZWcEl0eFo0YmtiWmQKVkUzdWV5TWQ3Q0JWQys2eHlXZHo0RldpQkk3V0JFQTBqdEtmWDJneUZxNm1oY1JsUGFBNnVJeG5VN050K2tjTgpLanFaQnhUTnhwSU11c2ZuZURTQ0M2OEFJUUtOekRBSjZqVUtYR3dTOUZEM3k0WWhmKzZqQ2NEVm1UYnhHdmxTCkd4anBBb0dBS3BaYjJxYVd5d0NyZ20wdXNBdXZqRXRuaUNvanVCVzRLZ004aUxzVUpESy9RaHRKYm9tOVU2OXgKOGM0M2hUckpTUUUyQytDRUFWbmg0VDJkeDFLMTJpRDkvZ0s1NVlkcXZEMFVlQ01BeHZZR0ZvQXpwaTNGam4wUwpXKzFESUd3ekJyM1JGaFlRUkZZMCtCcDFTU29EOG54L1N1ME5yTW5hNlUrQXJXY1ZORlE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/etcd-metric-signer-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBcGJta2F3Zjg3MEdmVHNJb3dLK0lOYUJnUzFTdzR5elBBQ3NkTEdzNG5tcitIZWUwCnpuaDJEbUVOMWYrcmxZbkxveGJwRmNJUUZtSitmTHRDbUViM09uTDBGZmdQdm9xZzhwV2kzbFp5OVVacXNOYzQKWEJGK0NycFlXYXpabFVCWk9uSDE1TlNjV28vWEYydW9selRLa1hDOHUyWjJhNkwrZC94clcrM3hSTmp3RUpZVwpUWjFsMWdjZi9iUm5GQmpPa3ZYM2NhUGZibkF1bEVzSkE3d0NEbzhSbWZMYldJQWtTWktEVDNqR2dEYm5LaklxCkoyM3JQRVJtUGVGalRCWUdOa3U1c1o2ckJwZnluNWNOeTlIbE9wZ3J6VkduNFAra3ArYVJCOXlmMjBGS3o1eU0KT3JOYjJaSGx1d1MzWGkyLzBLSnRabjhOdklVVXhwb1dIRlc2S3dJREFRQUJBb0lCQUFzTzRSYTNPTHhxUDR3TQp6cFZVNFJ6YTc3SDNHN3A4NGU4YjhWMW1aaWZEOGVMaTlDQ1d6eUhVZmd6YWU0T0Y1MDJobUxuMzhnVGNXNTVOCkRIdUd1TFp3dHpMRUU2RGVOVEVhcFB4Ni9qNjVqU0x4cVhRVFFycktobHl0ZVBOSmtPcWljZ3JyMk9iK0ZCY2UKK3Vma0FPUkZob0ptcXQ0eHlSTU9oOGRoa0NqTXlXdnIxMVg2VzU0emZkMUVUVDZUMFNiSjFSR1F0ZkhTQ2diSQowbk1QdE1VT2h6SUVsSWhDQnVlR3MrZ2NjQnZWREJJbWNsZ3c1VnpJQzRJMGdFa24xeGlYMVpMWXJFN3crR0orCmlvdURhZ2FzUkNxTURkRDJ2SWhIYllzN2RLZis0bDEzdlJwSGE4d2pTSVB3Ry9ZV3pxYWpWNENOdE1adVc4ZW4Ka3lhQjJoRUNnWUVBMTNoeWp0VDVBUGZKaE94aW9GVGw5UU5NRWpEck41YUtQdVRQaEl6VGp5bUxUdC8zZWNNcgp1OUVWc1dpeHF4V0ZUVThFUUdYQmt3UFU4QnB0QW5xbHlPNEdYWlFXSmo4VDhiSHZYL0U0QTVxRk84aFpmWGRpCmo0YVI4UUROOExKTUp2djdXMzZQV2p5SjdzWDNmSzk0K016T3kxNXNHTlYzSStMNTFkRFJ1VE1DZ1lFQXhPWE8Kc0NyNTR6bTczL3dQTDJ6aTVnMjBGd3hJRFNXVlJwSWFqMDBvdkp5VS9IbDduTWNkaTY0VFhMYVVDK000ZkRrTQpoQWlOWnd6YlpPbXNqSUtFaWRRaEsvUnNTdmFmOTVmV2tYVlQxYTJGZEFwWG4vWkJZTktuV3A0bTNrSlZMMGUxCjRXa29SbnZHYTBQdHJuY01FOHR6dkFlbTdkNmQ0WXoyNXovT3F5a0NnWUFsTDBZbDNCODB5WTVmZ0NQdEkzbWoKOVBPMTEvZGYybnoxS2F1ZVptZEVONWt3L1huSjY2S3FnUVRMWHhQNlFIYUd4dkltNHVpckpHZ2xINHBjZVNvUApLUFMwUlpBay9aSEZqajJQUXlPMWkzOGV1QTZwbG1iTitoMUppQ2dDTitMb2YyZjdmRFhsRHJtSEdXY0NmNDNTCjhoVm1CMStFVWFLRDhQSElzb2JlL1FLQmdFTXVTZlJ2NVcwek1MZyt6NHVWOG1FZVFka3ZWcEl0eFo0YmtiWmQKVkUzdWV5TWQ3Q0JWQys2eHlXZHo0RldpQkk3V0JFQTBqdEtmWDJneUZxNm1oY1JsUGFBNnVJeG5VN050K2tjTgpLanFaQnhUTnhwSU11c2ZuZURTQ0M2OEFJUUtOekRBSjZqVUtYR3dTOUZEM3k0WWhmKzZqQ2NEVm1UYnhHdmxTCkd4anBBb0dBS3BaYjJxYVd5d0NyZ20wdXNBdXZqRXRuaUNvanVCVzRLZ004aUxzVUpESy9RaHRKYm9tOVU2OXgKOGM0M2hUckpTUUUyQytDRUFWbmg0VDJkeDFLMTJpRDkvZ0s1NVlkcXZEMFVlQ01BeHZZR0ZvQXpwaTNGam4wUwpXKzFESUd3ekJyM1JGaFlRUkZZMCtCcDFTU29EOG54L1N1ME5yTW5hNlUrQXJXY1ZORlE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/etcd-metric-signer-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWRENDQWp5Z0F3SUJBZ0lJUlhLUlhxaEpxcVV3RFFZSktvWklodmNOQVFFTEJRQXdNVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Sc3dHUVlEVlFRREV4SmxkR05rTFcxbGRISnBZeTF6YVdkdVpYSXdIaGNOTVRreApNakE1TVRBMU5qQXdXaGNOTWpreE1qQTJNVEExTmpBd1dqQXNNUlF3RWdZRFZRUUxFd3RsZEdOa0xXMWxkSEpwCll6RVVNQklHQTFVRUF4TUxaWFJqWkMxdFpYUnlhV013Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUUNsdWFSckIvenZRWjlPd2lqQXI0ZzFvR0JMVkxEakxNOEFLeDBzYXppZWF2NGQ1N1RPZUhZTwpZUTNWLzZ1VmljdWpGdWtWd2hBV1luNTh1MEtZUnZjNmN2UVYrQSsraXFEeWxhTGVWbkwxUm1xdzF6aGNFWDRLCnVsaFpyTm1WUUZrNmNmWGsxSnhhajljWGE2aVhOTXFSY0x5N1puWnJvdjUzL0d0YjdmRkUyUEFRbGhaTm5XWFcKQngvOXRHY1VHTTZTOWZkeG85OXVjQzZVU3drRHZBSU9qeEdaOHR0WWdDUkprb05QZU1hQU51Y3FNaW9uYmVzOApSR1k5NFdOTUZnWTJTN214bnFzR2wvS2ZsdzNMMGVVNm1Ddk5VYWZnLzZTbjVwRUgzSi9iUVVyUG5JdzZzMXZaCmtlVzdCTGRlTGIvUW9tMW1mdzI4aFJUR21oWWNWYm9yQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUYKb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJSagp5QjVPZ3o5VWw2b002K3l4OG9QSFFvbEV2akFmQmdOVkhTTUVHREFXZ0JSanlCNU9nejlVbDZvTTYreXg4b1BIClFvbEV2akFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBeGY3azlick55Q0VHaUpHNmdUQzBUcDg2eUdrN2czYVcKTGlrY2FjdXN4Vy8rampNTmNKcnMvbXRSSnd4SVBPY2dwOHRaRkdIWlZDRnFXMUdUZ2trLyt0QjFxalNta0xQZQpUUk8wTkJJWnJZOUZFbTYxcThhT2E4a2ZCQ1ZYSjNOWXhFU29BRGtMTUFEcXdHNk94S0VBMVROdVFTU1d6OHdLCllpUFZrWmNINVFGaFMrWEJIa2JueDk1WlpML2x3KzhQZXJWVkVIZTNlQUd0c1BvQndiOXQzQWhiRndZWVJBODYKSnYrbWxmOXRTaFZCeEx6aHFsN010M1hybUpaUWxHMWxtSDNHMVNuSUY5MFVxcHVOcVJkOUI1V292R0FkM3FmawpHNjJpT3BtcS9YajNGVUFTOVE0Vjg3WWx3T1JlTU14MkJJSU9OTEc3NXpDS1duelJDb2pKeUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.EtcdSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHRENDQWdDZ0F3SUJBZ0lJSTJZQm1rekd2a0l3RFFZSktvWklodmNOQVFFTEJRQXdLakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMQpOVGxhRncweU9URXlNRFl4TURVMU5UbGFNQ294RWpBUUJnTlZCQXNUQ1c5d1pXNXphR2xtZERFVU1CSUdBMVVFCkF4TUxaWFJqWkMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2kKQWJuZHRGL2h5M1IzZ3JLcWxjU1BHMjYzSzgvaElxR3VlRFlQYUlwNW0zQXVtZjBpKzIwNm5GdlVWRHZ0NCtvVQp3QzhNVWZ5RjVtZ3FobnZDTGdFOW9SYWJkc012aHhQODBIaHBVWUdhT2Iwb2d5R2Y3Unp4N3dyY1hWNmpqMkowCk1mUUFIL2lnczNTZjRnY3ZvV1h6THpxMncxSmZIQm1EejZwM2lIWnAxSHZBZUtRWU5McUk4WGl3VVFKN2FlenQKV1BQcG1nYVZRWTkvL0hNNUFOVVY2T1dHbzlXZW5FYmtNY1lOSmVEa2tYKzVYbldQTzBWdFhEd1dmb2dTWTcxbgp3MGl5QytGWnZGNG9NU1dvcko4YitmSVVYS3NSVWlCYjlHNmtwVDFlc0tyRk5hRndsb3h1T0N6cURrRDVxeWxICll1QkJ3Z0ZjZ2t5QURyNHdibE96QWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSd1Q2bWFwTVZCQVkvTVdLMFpEMXQ4SGRXUlNUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBV2g3RGI2V0EyazB3ZDllNUdmV1Z1SXhDTjUxekc2UXdWSjBWRXIybU1FV2x2Ym1wCnVsT1JseDdlVWJEKzJrT252MENBS2VFblVjWkJNWmNZeXlDTjhYZ2dFL0p5MWdTZXZmTXhNRkhIdXIxNkFFZmMKSVdET2J2clQvb1c3NXdET2dQcXpwVUlIYnA5WlRyKzQ5YTZ2eTBidDlWNC9VMjBwZTNkb3hVdUQyWmZ1QmlrOApxUFNSQVNac3JLV1JQQkhWZ01rdDMrUGVuN3VSZ2ZXSG5SWW5QOERJSnFrQkhzbXFKTTZYNmJXZ3Y5SkhqUUdBCnlTeFdSeGJVSzJZbEdCSUdQeDF1anp1aGNUNkljN0xDVmFLVElSNUViNVpab3lqYWFoNUkvdzRwZVgxWENpQk4KRXdvdmtucmxUZlpMVGROSHRQVURWaVZzY2hrc3VNaEZDQ0ZBL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb2dHNTNiUmY0Y3QwZDRLeXFwWEVqeHR1dHl2UDRTS2hybmcyRDJpS2VadHdMcG45Ckl2dHRPcHhiMUZRNzdlUHFGTUF2REZIOGhlWm9Lb1o3d2k0QlBhRVdtM2JETDRjVC9OQjRhVkdCbWptOUtJTWgKbiswYzhlOEszRjFlbzQ5aWRESDBBQi80b0xOMG4rSUhMNkZsOHk4NnRzTlNYeHdaZzgrcWQ0aDJhZFI3d0hpawpHRFM2aVBGNHNGRUNlMm5zN1ZqejZab0dsVUdQZi94ek9RRFZGZWpsaHFQVm5weEc1REhHRFNYZzVKRi91VjUxCmp6dEZiVnc4Rm42SUVtTzlaOE5Jc2d2aFdieGVLREVscUt5ZkcvbnlGRnlyRVZJZ1cvUnVwS1U5WHJDcXhUV2gKY0phTWJqZ3M2ZzVBK2FzcFIyTGdRY0lCWElKTWdBNitNRzVUc3dJREFRQUJBb0lCQUVGSVlzYVZUZUhtSTR1WgpMamdSWEFDeTlEMTV1UzRtejNKSDNMait6blpNamJzcHNGanRha21wQWxRZ2tYbStVdkNEdFRISXcvS05NMEtYCnFMMUozcFFnR3NVUTZYeDRlVFJ5S1dOL1JiT0pPdEZkYmlwTTJWSWdtb2JNVlR1aHB2SGR3MDVkazhubUpzUGEKeUR5SVZGWFhuVmhTZ3hueWI5R3UyQ21NNHZLbjJlNnQ1TW5sbWFHQ1NtaEgrR3ZUUVUzV1p1MmNLeVB3M05ubgpTblJYbWQwdFZaUjc1UVAvTjRXbEVQMnplOWJIN2Vlc1pUUmo1NHYxYlNhdmlYVUdrNGlNUTgvUUg1NmQyY2Z2Ck9sMTYxblNkZTZLS0FwNW1IMzhnOVlSK2w1U2FTcWZOZVZEM3JRZk5DbElpRXo2dkFBVlBycVRHaVFiaGU2M2cKU0xMZ2k0RUNnWUVBeEk5QkFWSnVtc3VIUnFyOUJ4RytDTGlJaVcrUU10ZWptbU5VUTN2U3NuYS9qb29MRWUvNQp0Zmo2S1QydmZKRm1HaDZNMk1aOXRqSnR3VW9KTndndEJRdWh6Ujl1ZE5lVHMxMzFSRFhva3NFVThLeFIzSG5XCkxycjFreE92ZnpDMUxTaDBiSDlSL0NRbEE1MzhOdWFmbUVWWW43RlFwTUpvZHVlb3ZXN29abk1DZ1lFQTB2K00KZGVjUllXZGE4RGx3QW1UcVBXV1Y5eVF3dXU3OG9MaWQ4azNaRWtMTzJnNTNuZTBvS3psU3RibXlFZy9XN2VsRwp3dlc2U3hoQjhPbzJEZWZqWGx6Wm5yMldhN3hIQ3hITldiL2dmL0tYWUU2amVKTnN6YW0zSmJwanZIWkNkSnNpCmRsSnE5ZE5zZDhaL1k5SVlZbU5iamF4RERCeUdORUFlWEhkVnpjRUNnWUJsV1hnck5sWFJleUJGVCtVbnYvNDgKZ09ubDg2Qm1sc25FMFhLaFdUZEt6ZS8zanpZbUNaYTRQYWkvbXc3aExCZDVZRWMvZnhsUzJLMisvRzNEOG5ORQpKcnRIQ08zclVUelhQNXMza0pSYkZ6TzA1U1ZRaVlIbWxvQUpWaDBuZC9YelV1aTFDUEU5RVdZRWQzR1UzVlZ0CkxsU0VBdW1TQ3F2U282QmVETkhJQVFLQmdESE9YT3VmNWJ4bVYxTUpXK1ZVeU81QlFvc2FJZDZlZDBmQkRKZWIKeExmSXlXY3pyd3k2WkpiL2F3UzJsdEFvcVFWejRWNDMvd2VtN0RuZ0wyNU01S0RycmZzSXFhODR2RlJpbVdTcwpKR1JQY1dnc1orNFlic0NGWlZRa2tWSjFYKzZDaURvQjdubWt0Si81WFN6RTlUaVVWNUl6cllmNFc3Mk52Uno2CmxtaUJBb0dCQUo5VVV2SGpLUTRRTzR3MitrNndFbTlQcm5wcmhoQldKVUtRclMwamJCcWlEOEtjbm1tOFlJNVIKODlLNGlqMGdRL3hkd3BMMXA5T2YwN2Vwc2l1OUtUTXhsQXNTY1hxQXRGQThPSHUzWlFsb051U0JqZDFjeXMzUgpVZUlPNUJFOTdYYVNtY0ZHeWV4V2hYNzRTOW5IbWNNMVh0SFhlUHZjQy91NGUwYUtvRHlaCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/etcd-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBb2dHNTNiUmY0Y3QwZDRLeXFwWEVqeHR1dHl2UDRTS2hybmcyRDJpS2VadHdMcG45Ckl2dHRPcHhiMUZRNzdlUHFGTUF2REZIOGhlWm9Lb1o3d2k0QlBhRVdtM2JETDRjVC9OQjRhVkdCbWptOUtJTWgKbiswYzhlOEszRjFlbzQ5aWRESDBBQi80b0xOMG4rSUhMNkZsOHk4NnRzTlNYeHdaZzgrcWQ0aDJhZFI3d0hpawpHRFM2aVBGNHNGRUNlMm5zN1ZqejZab0dsVUdQZi94ek9RRFZGZWpsaHFQVm5weEc1REhHRFNYZzVKRi91VjUxCmp6dEZiVnc4Rm42SUVtTzlaOE5Jc2d2aFdieGVLREVscUt5ZkcvbnlGRnlyRVZJZ1cvUnVwS1U5WHJDcXhUV2gKY0phTWJqZ3M2ZzVBK2FzcFIyTGdRY0lCWElKTWdBNitNRzVUc3dJREFRQUJBb0lCQUVGSVlzYVZUZUhtSTR1WgpMamdSWEFDeTlEMTV1UzRtejNKSDNMait6blpNamJzcHNGanRha21wQWxRZ2tYbStVdkNEdFRISXcvS05NMEtYCnFMMUozcFFnR3NVUTZYeDRlVFJ5S1dOL1JiT0pPdEZkYmlwTTJWSWdtb2JNVlR1aHB2SGR3MDVkazhubUpzUGEKeUR5SVZGWFhuVmhTZ3hueWI5R3UyQ21NNHZLbjJlNnQ1TW5sbWFHQ1NtaEgrR3ZUUVUzV1p1MmNLeVB3M05ubgpTblJYbWQwdFZaUjc1UVAvTjRXbEVQMnplOWJIN2Vlc1pUUmo1NHYxYlNhdmlYVUdrNGlNUTgvUUg1NmQyY2Z2Ck9sMTYxblNkZTZLS0FwNW1IMzhnOVlSK2w1U2FTcWZOZVZEM3JRZk5DbElpRXo2dkFBVlBycVRHaVFiaGU2M2cKU0xMZ2k0RUNnWUVBeEk5QkFWSnVtc3VIUnFyOUJ4RytDTGlJaVcrUU10ZWptbU5VUTN2U3NuYS9qb29MRWUvNQp0Zmo2S1QydmZKRm1HaDZNMk1aOXRqSnR3VW9KTndndEJRdWh6Ujl1ZE5lVHMxMzFSRFhva3NFVThLeFIzSG5XCkxycjFreE92ZnpDMUxTaDBiSDlSL0NRbEE1MzhOdWFmbUVWWW43RlFwTUpvZHVlb3ZXN29abk1DZ1lFQTB2K00KZGVjUllXZGE4RGx3QW1UcVBXV1Y5eVF3dXU3OG9MaWQ4azNaRWtMTzJnNTNuZTBvS3psU3RibXlFZy9XN2VsRwp3dlc2U3hoQjhPbzJEZWZqWGx6Wm5yMldhN3hIQ3hITldiL2dmL0tYWUU2amVKTnN6YW0zSmJwanZIWkNkSnNpCmRsSnE5ZE5zZDhaL1k5SVlZbU5iamF4RERCeUdORUFlWEhkVnpjRUNnWUJsV1hnck5sWFJleUJGVCtVbnYvNDgKZ09ubDg2Qm1sc25FMFhLaFdUZEt6ZS8zanpZbUNaYTRQYWkvbXc3aExCZDVZRWMvZnhsUzJLMisvRzNEOG5ORQpKcnRIQ08zclVUelhQNXMza0pSYkZ6TzA1U1ZRaVlIbWxvQUpWaDBuZC9YelV1aTFDUEU5RVdZRWQzR1UzVlZ0CkxsU0VBdW1TQ3F2U282QmVETkhJQVFLQmdESE9YT3VmNWJ4bVYxTUpXK1ZVeU81QlFvc2FJZDZlZDBmQkRKZWIKeExmSXlXY3pyd3k2WkpiL2F3UzJsdEFvcVFWejRWNDMvd2VtN0RuZ0wyNU01S0RycmZzSXFhODR2RlJpbVdTcwpKR1JQY1dnc1orNFlic0NGWlZRa2tWSjFYKzZDaURvQjdubWt0Si81WFN6RTlUaVVWNUl6cllmNFc3Mk52Uno2CmxtaUJBb0dCQUo5VVV2SGpLUTRRTzR3MitrNndFbTlQcm5wcmhoQldKVUtRclMwamJCcWlEOEtjbm1tOFlJNVIKODlLNGlqMGdRL3hkd3BMMXA5T2YwN2Vwc2l1OUtUTXhsQXNTY1hxQXRGQThPSHUzWlFsb051U0JqZDFjeXMzUgpVZUlPNUJFOTdYYVNtY0ZHeWV4V2hYNzRTOW5IbWNNMVh0SFhlUHZjQy91NGUwYUtvRHlaCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/etcd-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURHRENDQWdDZ0F3SUJBZ0lJSTJZQm1rekd2a0l3RFFZSktvWklodmNOQVFFTEJRQXdLakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMQpOVGxhRncweU9URXlNRFl4TURVMU5UbGFNQ294RWpBUUJnTlZCQXNUQ1c5d1pXNXphR2xtZERFVU1CSUdBMVVFCkF4TUxaWFJqWkMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ2kKQWJuZHRGL2h5M1IzZ3JLcWxjU1BHMjYzSzgvaElxR3VlRFlQYUlwNW0zQXVtZjBpKzIwNm5GdlVWRHZ0NCtvVQp3QzhNVWZ5RjVtZ3FobnZDTGdFOW9SYWJkc012aHhQODBIaHBVWUdhT2Iwb2d5R2Y3Unp4N3dyY1hWNmpqMkowCk1mUUFIL2lnczNTZjRnY3ZvV1h6THpxMncxSmZIQm1EejZwM2lIWnAxSHZBZUtRWU5McUk4WGl3VVFKN2FlenQKV1BQcG1nYVZRWTkvL0hNNUFOVVY2T1dHbzlXZW5FYmtNY1lOSmVEa2tYKzVYbldQTzBWdFhEd1dmb2dTWTcxbgp3MGl5QytGWnZGNG9NU1dvcko4YitmSVVYS3NSVWlCYjlHNmtwVDFlc0tyRk5hRndsb3h1T0N6cURrRDVxeWxICll1QkJ3Z0ZjZ2t5QURyNHdibE96QWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJSd1Q2bWFwTVZCQVkvTVdLMFpEMXQ4SGRXUlNUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBV2g3RGI2V0EyazB3ZDllNUdmV1Z1SXhDTjUxekc2UXdWSjBWRXIybU1FV2x2Ym1wCnVsT1JseDdlVWJEKzJrT252MENBS2VFblVjWkJNWmNZeXlDTjhYZ2dFL0p5MWdTZXZmTXhNRkhIdXIxNkFFZmMKSVdET2J2clQvb1c3NXdET2dQcXpwVUlIYnA5WlRyKzQ5YTZ2eTBidDlWNC9VMjBwZTNkb3hVdUQyWmZ1QmlrOApxUFNSQVNac3JLV1JQQkhWZ01rdDMrUGVuN3VSZ2ZXSG5SWW5QOERJSnFrQkhzbXFKTTZYNmJXZ3Y5SkhqUUdBCnlTeFdSeGJVSzJZbEdCSUdQeDF1anp1aGNUNkljN0xDVmFLVElSNUViNVpab3lqYWFoNUkvdzRwZVgxWENpQk4KRXdvdmtucmxUZlpMVGROSHRQVURWaVZzY2hrc3VNaEZDQ0ZBL3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.EtcdSignerClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQekNDQWllZ0F3SUJBZ0lJSGVuYVQ2UjhjQ0l3RFFZSktvWklodmNOQVFFTEJRQXdLakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMQpOVGxhRncweU9URXlNRFl4TURVMk1EQmFNQjR4RFRBTEJnTlZCQXNUQkdWMFkyUXhEVEFMQmdOVkJBTVRCR1YwClkyUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNkRlNkRGVDNSVUk3dGFhV08KZnpJZEFTTFVxZ3NkUFRrYjJKTXBLY2lJVGxtTXZIc09ZUElwdVVCSStwUHNoNW5zT1JPbE8xZytuV1FaMHhjVwpCYnRRL3JhVHpPTlMrODdram5nN0hrWWhyS1VUVmlHeWpWMVdQU1dMY29vNjNhT3Z1QjJQSGtRWm1GRFdpWFJ0Cm9oTDNBQ21URmZWRFRuU3UzbjdaaVZFYWFNbHc5TWVNenVBUGlqSW9yMGJ1ZVVSazhjQm1WVi9Xc0w3WkovMFMKNWxnZDJGcFRublFPbGpZSnFXUDJvWE0yc3ppbG11WDlIanhmc2tnbHVRZTYwQWlGUzF2SFB1REt5RTcvUGN4YwpJajZNQkE4bVRtRlZXZU5zb0JlMDQxQk1jWGdoVFJTMHRJZ0xQcWFXRXh2aHh5ODE3N0ZGcmQvREZyUnNTVGpCCmprWFZBZ01CQUFHamRUQnpNQTRHQTFVZER3RUIvd1FFQXdJRklEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlJ3VDZtYXBNVkJBWS9NV0swWkQxdDhIZFdSU1RBZgpCZ05WSFNNRUdEQVdnQlJ3VDZtYXBNVkJBWS9NV0swWkQxdDhIZFdSU1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DCkFRRUFCakFsRGNaZUlia2lBSmpaSXlNVmRnUVBxK2ZYcmorc3A2Y2U5RS8xaGJKSWlPL0dtZDFReEI0L2NlSE4KUTVtbjR1bk9vVzlNQno2L3ZOaUU5aHRSaWFSLzJQZk51cWpHb0l4dExvVTZwSWFyTXBacW8yTm1yUGhCam02SwpXRkRiVUkwMnBEaURsOVVjbzhFWGhnUGR4T2o2NEhHZHZJQTlSaW9reC9ST1RycklZQVdmQ0cxTDMrL0FFZDlrClpjQ1BlbHJtWGZpSmxlVHBpQmF0M3RWYlZFajZLTjlxQVhKYnVMSVdGbllXZlBmaWEvS01CcXAyS1FyelE1MEoKaE1jVHVpQVN0Ym8yOHJBTUxQNk1RTTZKeCtaWmxCc0xzWFNKbTMwSXV3RTVyU1BncWRvTjFnU3R2bCtsMTJZTApQTU16cUU2bE5EU3FabFc3dXdOeUNxRU8yUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWczdWd4VTkwVkNPN1dtbGpuOHlIUUVpMUtvTEhUMDVHOWlUS1NuSWlFNVpqTHg3CkRtRHlLYmxBU1BxVDdJZVo3RGtUcFR0WVBwMWtHZE1YRmdXN1VQNjJrOHpqVXZ2TzVJNTRPeDVHSWF5bEUxWWgKc28xZFZqMGxpM0tLT3QyanI3Z2RqeDVFR1poUTFvbDBiYUlTOXdBcGt4WDFRMDUwcnQ1KzJZbFJHbWpKY1BUSApqTTdnRDRveUtLOUc3bmxFWlBIQVpsVmYxckMrMlNmOUV1WllIZGhhVTU1MERwWTJDYWxqOXFGek5yTTRwWnJsCi9SNDhYN0pJSmJrSHV0QUloVXRieHo3Z3lzaE8vejNNWENJK2pBUVBKazVoVlZuamJLQVh0T05RVEhGNElVMFUKdExTSUN6Nm1saE1iNGNjdk5lK3hSYTNmd3hhMGJFazR3WTVGMVFJREFRQUJBb0lCQUQ4VmJES2I2Q3JwZ3B5eQovb1J6VWoyTlhnNzNYTzljQzlvS005TjRMRnN6SFovZlpHWDZyd0ZBbzdCYTdmNzc5MCttQnFnMmwvUWJENDdHCkNRVFppcXFxd3FNWWpGZGRzOGZCR3JrSXljU3ZNZ1Y5WmMyUnF2MExuSWhNbk52YXZKNWU4ZjdOeDA5YVdzWnoKTXJ2ZGdVcW9qbkFsdU5SS2JMdkNDd2FkVFplRExnODRPeWwwUjU3U2lyb1pHT2NaM2lURFNBK0JlMER6UlY0ZwpIT2VLb0tyOFptbzNTbFZMczEzZ3RDcS8xcDl6bzhWcEJKSEZockV1T1VpMU4wVWF3bFYrTXRTZUdWcEJGdTJaCmpSK00vdHhwTnRIcW9uS0ZIZmZobm9SMEtUakFlNUl6NDNoWkNDdGZuN0FYLzNWNmtKK0Vlbk52VEhseDdNam0KbU5BMVNYMENnWUVBMTBWZWdlaGFzclJJamJXdklORU9mK0x2T2hWRDhnZWNiM1R6UE41M3lqM1dnZ2xPcGpGagpsa24wYXdyMkozN0hLUzk5WGxtZ040SUJRdkVNakhFZ0ZHNVd3bm9oL1k5d1JYdTBJK0NpdlkrT2pZUWRHRHNtCktyM29EbkV0Z0V3dExKVkdrM2VablhteXErUGdtYzkxdlRNZnYwV0JHdkpZZWU5WE9BbzlJWHNDZ1lFQTNVRjIKR2g3K1k2elNGTzNubkNRNmVHVXhIYndjajRaYTVMU3ZCTmxHUTU0UzV2NjZic3p4RmtjcWJMaUVkNG9pMXFRYgpyOUJDcGRqZ2QrM1Qzdkw3a2VLSHkxTndRRk56bExXdWVFR0FkNEx6TkpJTzh5c00yMUJFRm9NcmFFZ2l5aFRyCmVEMEV5bXZhaWF1ZlpRNmVwOHpFa0RQNWV1RUJiK3c2OFhjS3pPOENnWUVBd0ttSEFjRVFtMnVhbTZtRlNWdVIKSElmZ0R4M0ZKN0lFSWdTTFJXamQwUlV6REVLRUwxMTRnYU5DcXlLdVYzNnhoSHpLT1UwQmhXeEc4TUNIdUpIdQpZaHEyYjJ1YlRERzZDNVhCRFhNWWM0c3R6QjMzWkI1YjlGanVmUzV4eUtka3JzZ1MyQnhzVVhIL3BMTlg2cEN3CkVWcldDUHVOcHE1SzNTYUY2dFBQRGswQ2dZQmZ4WVlwcUdEVkpHbUxSYStMbHVMNFdsVDRXZ1RDMjVWY2lobDQKTDlTS1VGSStTdVRJTVUzcUpzUG1hN2hyUmcvdWVQckRENUxKMXliU3dzK0RJZ3BqQzN0Y043SFBKbEJSZnBNVwoyc09ROTgzdVk0cTFGMTFwVVVVbnVYK0FsRGo2NEROTXlKemFRZlZHd2xNc216ZHh5dUVLeW5TakMrSmpZQTNqCmwzUEZZUUtCZ1FDeEtsaEZMSDBDc2FveG5ML0ZUQ2NWUEdXOHlQNzcrbHVCcms4UEF4alp3RHVSdDRZVHBKdzgKdmRoVGQ0SGRlR08yZSt4ZXdOazhuNzk0RksrREtlbDA0MktMSmdtUnNOTVIyRjM1aWlLczc2MkRGTTFRM1hkUQpuMzlrQmdqVStHc2FUZ0RFL3hVMzZac0JKQ1MxN25McUZZaEVURzRaSVBHQnJhRFJBWDRpdVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/etcd-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWczdWd4VTkwVkNPN1dtbGpuOHlIUUVpMUtvTEhUMDVHOWlUS1NuSWlFNVpqTHg3CkRtRHlLYmxBU1BxVDdJZVo3RGtUcFR0WVBwMWtHZE1YRmdXN1VQNjJrOHpqVXZ2TzVJNTRPeDVHSWF5bEUxWWgKc28xZFZqMGxpM0tLT3QyanI3Z2RqeDVFR1poUTFvbDBiYUlTOXdBcGt4WDFRMDUwcnQ1KzJZbFJHbWpKY1BUSApqTTdnRDRveUtLOUc3bmxFWlBIQVpsVmYxckMrMlNmOUV1WllIZGhhVTU1MERwWTJDYWxqOXFGek5yTTRwWnJsCi9SNDhYN0pJSmJrSHV0QUloVXRieHo3Z3lzaE8vejNNWENJK2pBUVBKazVoVlZuamJLQVh0T05RVEhGNElVMFUKdExTSUN6Nm1saE1iNGNjdk5lK3hSYTNmd3hhMGJFazR3WTVGMVFJREFRQUJBb0lCQUQ4VmJES2I2Q3JwZ3B5eQovb1J6VWoyTlhnNzNYTzljQzlvS005TjRMRnN6SFovZlpHWDZyd0ZBbzdCYTdmNzc5MCttQnFnMmwvUWJENDdHCkNRVFppcXFxd3FNWWpGZGRzOGZCR3JrSXljU3ZNZ1Y5WmMyUnF2MExuSWhNbk52YXZKNWU4ZjdOeDA5YVdzWnoKTXJ2ZGdVcW9qbkFsdU5SS2JMdkNDd2FkVFplRExnODRPeWwwUjU3U2lyb1pHT2NaM2lURFNBK0JlMER6UlY0ZwpIT2VLb0tyOFptbzNTbFZMczEzZ3RDcS8xcDl6bzhWcEJKSEZockV1T1VpMU4wVWF3bFYrTXRTZUdWcEJGdTJaCmpSK00vdHhwTnRIcW9uS0ZIZmZobm9SMEtUakFlNUl6NDNoWkNDdGZuN0FYLzNWNmtKK0Vlbk52VEhseDdNam0KbU5BMVNYMENnWUVBMTBWZWdlaGFzclJJamJXdklORU9mK0x2T2hWRDhnZWNiM1R6UE41M3lqM1dnZ2xPcGpGagpsa24wYXdyMkozN0hLUzk5WGxtZ040SUJRdkVNakhFZ0ZHNVd3bm9oL1k5d1JYdTBJK0NpdlkrT2pZUWRHRHNtCktyM29EbkV0Z0V3dExKVkdrM2VablhteXErUGdtYzkxdlRNZnYwV0JHdkpZZWU5WE9BbzlJWHNDZ1lFQTNVRjIKR2g3K1k2elNGTzNubkNRNmVHVXhIYndjajRaYTVMU3ZCTmxHUTU0UzV2NjZic3p4RmtjcWJMaUVkNG9pMXFRYgpyOUJDcGRqZ2QrM1Qzdkw3a2VLSHkxTndRRk56bExXdWVFR0FkNEx6TkpJTzh5c00yMUJFRm9NcmFFZ2l5aFRyCmVEMEV5bXZhaWF1ZlpRNmVwOHpFa0RQNWV1RUJiK3c2OFhjS3pPOENnWUVBd0ttSEFjRVFtMnVhbTZtRlNWdVIKSElmZ0R4M0ZKN0lFSWdTTFJXamQwUlV6REVLRUwxMTRnYU5DcXlLdVYzNnhoSHpLT1UwQmhXeEc4TUNIdUpIdQpZaHEyYjJ1YlRERzZDNVhCRFhNWWM0c3R6QjMzWkI1YjlGanVmUzV4eUtka3JzZ1MyQnhzVVhIL3BMTlg2cEN3CkVWcldDUHVOcHE1SzNTYUY2dFBQRGswQ2dZQmZ4WVlwcUdEVkpHbUxSYStMbHVMNFdsVDRXZ1RDMjVWY2lobDQKTDlTS1VGSStTdVRJTVUzcUpzUG1hN2hyUmcvdWVQckRENUxKMXliU3dzK0RJZ3BqQzN0Y043SFBKbEJSZnBNVwoyc09ROTgzdVk0cTFGMTFwVVVVbnVYK0FsRGo2NEROTXlKemFRZlZHd2xNc216ZHh5dUVLeW5TakMrSmpZQTNqCmwzUEZZUUtCZ1FDeEtsaEZMSDBDc2FveG5ML0ZUQ2NWUEdXOHlQNzcrbHVCcms4UEF4alp3RHVSdDRZVHBKdzgKdmRoVGQ0SGRlR08yZSt4ZXdOazhuNzk0RksrREtlbDA0MktMSmdtUnNOTVIyRjM1aWlLczc2MkRGTTFRM1hkUQpuMzlrQmdqVStHc2FUZ0RFL3hVMzZac0JKQ1MxN25McUZZaEVURzRaSVBHQnJhRFJBWDRpdVE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/etcd-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURQekNDQWllZ0F3SUJBZ0lJSGVuYVQ2UjhjQ0l3RFFZSktvWklodmNOQVFFTEJRQXdLakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SUXdFZ1lEVlFRREV3dGxkR05rTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMQpOVGxhRncweU9URXlNRFl4TURVMk1EQmFNQjR4RFRBTEJnTlZCQXNUQkdWMFkyUXhEVEFMQmdOVkJBTVRCR1YwClkyUXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNkRlNkRGVDNSVUk3dGFhV08KZnpJZEFTTFVxZ3NkUFRrYjJKTXBLY2lJVGxtTXZIc09ZUElwdVVCSStwUHNoNW5zT1JPbE8xZytuV1FaMHhjVwpCYnRRL3JhVHpPTlMrODdram5nN0hrWWhyS1VUVmlHeWpWMVdQU1dMY29vNjNhT3Z1QjJQSGtRWm1GRFdpWFJ0Cm9oTDNBQ21URmZWRFRuU3UzbjdaaVZFYWFNbHc5TWVNenVBUGlqSW9yMGJ1ZVVSazhjQm1WVi9Xc0w3WkovMFMKNWxnZDJGcFRublFPbGpZSnFXUDJvWE0yc3ppbG11WDlIanhmc2tnbHVRZTYwQWlGUzF2SFB1REt5RTcvUGN4YwpJajZNQkE4bVRtRlZXZU5zb0JlMDQxQk1jWGdoVFJTMHRJZ0xQcWFXRXh2aHh5ODE3N0ZGcmQvREZyUnNTVGpCCmprWFZBZ01CQUFHamRUQnpNQTRHQTFVZER3RUIvd1FFQXdJRklEQVRCZ05WSFNVRUREQUtCZ2dyQmdFRkJRY0QKQWpBTUJnTlZIUk1CQWY4RUFqQUFNQjBHQTFVZERnUVdCQlJ3VDZtYXBNVkJBWS9NV0swWkQxdDhIZFdSU1RBZgpCZ05WSFNNRUdEQVdnQlJ3VDZtYXBNVkJBWS9NV0swWkQxdDhIZFdSU1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DCkFRRUFCakFsRGNaZUlia2lBSmpaSXlNVmRnUVBxK2ZYcmorc3A2Y2U5RS8xaGJKSWlPL0dtZDFReEI0L2NlSE4KUTVtbjR1bk9vVzlNQno2L3ZOaUU5aHRSaWFSLzJQZk51cWpHb0l4dExvVTZwSWFyTXBacW8yTm1yUGhCam02SwpXRkRiVUkwMnBEaURsOVVjbzhFWGhnUGR4T2o2NEhHZHZJQTlSaW9reC9ST1RycklZQVdmQ0cxTDMrL0FFZDlrClpjQ1BlbHJtWGZpSmxlVHBpQmF0M3RWYlZFajZLTjlxQVhKYnVMSVdGbllXZlBmaWEvS01CcXAyS1FyelE1MEoKaE1jVHVpQVN0Ym8yOHJBTUxQNk1RTTZKeCtaWmxCc0xzWFNKbTMwSXV3RTVyU1BncWRvTjFnU3R2bCtsMTJZTApQTU16cUU2bE5EU3FabFc3dXdOeUNxRU8yUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.JournalCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lJYjJ1enlxM1R3K2N3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU1TVRJd09URXdOVFUxT0ZvWApEVEk1TVRJd05qRXdOVFl3TWxvd09URWNNQm9HQTFVRUNoTVRUM0JsYmxOb2FXWjBJRUp2YjNSemRISmhjREVaCk1CY0dBMVVFQXhNUWFtOTFjbTVoYkMxbllYUmxkMkY1WkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQVBtR0swckhyanBDZHA3RjZRTUt2OXZRKzRYcUZHYWVOTzR2dStqV2liSnN3R1BWSUNCRAo2SUdTU29UTTlGaWpsK2o5RjVEWUh0eFFDM1Y2WTNnVk9nWUpicEthT0plUmxjcCs2VytPanEzakw4SVBMckVRCmZYdUJ1VU1yT1JlRVF0bkVjcFpJaEd3QldTdU1qY1IwRUZFSFlNaXBqU3Z5RERnT2JIeURxSFJvQU1aNHIxLzAKb1JPTXp3Q0x1YVk1aVhoais1Y3I2a21WVldpRUp1d1U2eTF1SmVvcHFNczh5UCtKL1U3RDY1SnUzc05HQ29CbQo3TDdxQ2djL2VCSGJNZjJaTHVjRlNqUjB4Rk16QzE4dE13aituSmlLTzI2d3AwUTJJSVJjblJlWXhmTjVBRTlnCi90OWJqcXFWQXhEL0V1anl4alBXVlZZY084WFozeG1BSHYwQ0F3RUFBYU4vTUgwd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlJCSXNPQklJSUtXVTFTZDlrSEczYTAvY3dwMkRBZkJnTlZIU01FR0RBV2dCUkJJc09CCklJSUtXVTFTZDlrSEczYTAvY3dwMkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUJ2RStuNXhCaFZtYkh0VkcKSjJ5OHR1MEx4TEF0VTJBSkFLUE40UnorMC8xc0ZGV1lxeS9oTmxDWlowS3B5RXF2eHhYUHRmWm9WMDQvaFBtMQpJZXoxb3ptRUNUMkxWLzEwV2hvdk1DTzdnOGFuaFdTQlVNRWpLQkpJOEVZMjl0cXcxRFdmQnc2dVR1bENZZDA1CmZNZFg3UTBoTTd4Mm9wbFN5RUxydytBakxRdjMrWS9kTW03SEF0VjZ3bm5OSHNjejlSN3VwcG5MS1pjU0srVlcKMXNNdTh3TFVVeUdXK3dJWWNRancvMERTWERlVE9tRGFUU1ZrMFVadnRoVVZTQXc5VFVDRDhLYW1QUStxcXA0SApkc1pYYU9rbVJSaXBBbFp0TElzcDhFdHFZZXBiU0MvRXovWER2R0w2VEpVZkkva3psTzdaL2VNL2FiNnBjR3hXCnI4VzdtUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBK1lZclNzZXVPa0oybnNYcEF3cS8yOUQ3aGVvVVpwNDA3aSs3Nk5hSnNtekFZOVVnCklFUG9nWkpLaE16MFdLT1g2UDBYa05nZTNGQUxkWHBqZUJVNkJnbHVrcG80bDVHVnluN3BiNDZPcmVNdndnOHUKc1JCOWU0RzVReXM1RjRSQzJjUnlsa2lFYkFGWks0eU54SFFRVVFkZ3lLbU5LL0lNT0E1c2ZJT29kR2dBeG5pdgpYL1NoRTR6UEFJdTVwam1KZUdQN2x5dnFTWlZWYUlRbTdCVHJMVzRsNmltb3l6ekkvNG45VHNQcmttN2V3MFlLCmdHYnN2dW9LQno5NEVkc3gvWmt1NXdWS05IVEVVek1MWHkwekNQNmNtSW83YnJDblJEWWdoRnlkRjVqRjgza0EKVDJEKzMxdU9xcFVERVA4UzZQTEdNOVpWVmh3N3hkbmZHWUFlL1FJREFRQUJBb0lCQVFDa05WaWVNTVNHMEtCeApvbnJTcHF0V1JMU1NEMWIzcFZ2ZCtBbm9rKzh3UFlOcTc2SGh1ZTd6L2tzT0ZEY2xjaHVSbDZWL2k4cmJYODM2CnROMXE5RVVvSGVMbmxaaHlucnQ5OUlFNUNnNzVmazQ2bm5VeXoxQlZEQ3pZZUVSdEpudzhCWjBISzVnQjMrMUgKeklxclkxb3RpUFozZDZWUTYweUJRM1MvaUlFK2dMcC9ZQ0x5czFjT3pTeUlIVTJuUStHTUtPSjVYQ00waG00VQpMQlhzalpxdWR3MTFwMG91R1c5TWp3Sjcxd01MczVPNjN3enBVc1B4eFk5cThwa3pXcFc5WkhrK0E0bW56MUdkCjB3UjhIRDEwYndER2k5c3pIYWcwTGZRY1pWQkZIb3BBQW5kUGVnUVMrMHZyZkpmZHdSM0J0cG1HK1BTYTZLbG8Ka2VpNS9EK2RBb0dCQVByTzZQNVRSRlM5Y0w4ZEF4NGdxWWt2L3NwSmJ3UGFURC9jbDhIdWpyTmYwWGt3T00xTQpva0hqVmZiKy9HNWpDd042SmVLUm92RDUyMDNCVUJPaVJ6WEg1c0lkb0dnYmRpRXpZOVlJYVBBOHI0NFI0WUZNCkZYWWJYY3huV0RpUDlwY2Mzblh1MFlhcm9XZDBOUzlqaXNPSXg2ekZ2RWczRktVb1pwMkhzUkVmQW9HQkFQNncKZERtc0Qxd01HaWVjcktnQnpKQmdqUXArcG5RM1piUFM2Y2E2dWhndGJXZEV5N1Q3UmVUN3BtM0E3eVBaVUNSQgptYmhUNlZkUUJVNzI3K0pVK2NJQkxVS1dTSUcwdjBKb1RGR2RvbWFEMStLRC93UCtOeVRyMER5TDcwbVN4UjVCCnRYTjF1YUlqUGRmQXNrYitjTjFFNWRFUEVaSlpMNVRCZTkzMnFZQmpBb0dBYk1nYmhGdUhNcDNyN2VoZWRzM0IKMnEvSGVlTjUxQmoxbzJsQkpTc2NGNjdDZ3lhb0xGdEZzUUF5USt2NmZzSlVmNUNXSi92MHlVSUZuV2J3SFdQdwpNT0pnTXVkNHNFN2c0S3VTYkwyL0RodTBKUkdhVm1NeWw4UnMzWUFoWW44R2ZDcFlUcHhqb2w2RXBnTmdJZ3F4Cm4vZU9hMkJrTm9vMVdTRDV5TytXbkE4Q2dZQkJWS3dMbXlvNWQxVkNNZnRNQVdJaTZ0RmpEc2ZONmVQcHM4R0oKMjU0ZTA1Qkx2Q2J3M3IrNEZDRkY2QWF2MEcreFRTNk1UT0gvSnFTbDg4dm01OXRGTzU0TGhaZEZ4a0tGVzFHdwpZZG9scDg0NTZaZ0J3elVNQUgxaStwWS83aWtvTUx6RnlEMzg3RU5SMDdrbll0ODZzeENzaHN3QUdXYU9KdStLCktWcWpkd0tCZ0E0WnVCeHFTK29LVy94Vkk4S1IyaDJjSVgxYitlUTdKNjRIWGIrbGhjY1NIZjIySmZ6S1htbjgKdjYxTXNiM0FzQXorRDN4TGxsdEh4WW0xR0IzdFVQUG1nOWhtZUh6ekc2MFkybmJvdURDaW9CeGErcG1tYUVhMgpySXNZRTZUZTlOVWZEM0J4SHdCOGFjVjd2eXdSZUl5bGxUdFJmaDlCSjRKbUxVK0laNEhHCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/journal-gatewayd.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBK1lZclNzZXVPa0oybnNYcEF3cS8yOUQ3aGVvVVpwNDA3aSs3Nk5hSnNtekFZOVVnCklFUG9nWkpLaE16MFdLT1g2UDBYa05nZTNGQUxkWHBqZUJVNkJnbHVrcG80bDVHVnluN3BiNDZPcmVNdndnOHUKc1JCOWU0RzVReXM1RjRSQzJjUnlsa2lFYkFGWks0eU54SFFRVVFkZ3lLbU5LL0lNT0E1c2ZJT29kR2dBeG5pdgpYL1NoRTR6UEFJdTVwam1KZUdQN2x5dnFTWlZWYUlRbTdCVHJMVzRsNmltb3l6ekkvNG45VHNQcmttN2V3MFlLCmdHYnN2dW9LQno5NEVkc3gvWmt1NXdWS05IVEVVek1MWHkwekNQNmNtSW83YnJDblJEWWdoRnlkRjVqRjgza0EKVDJEKzMxdU9xcFVERVA4UzZQTEdNOVpWVmh3N3hkbmZHWUFlL1FJREFRQUJBb0lCQVFDa05WaWVNTVNHMEtCeApvbnJTcHF0V1JMU1NEMWIzcFZ2ZCtBbm9rKzh3UFlOcTc2SGh1ZTd6L2tzT0ZEY2xjaHVSbDZWL2k4cmJYODM2CnROMXE5RVVvSGVMbmxaaHlucnQ5OUlFNUNnNzVmazQ2bm5VeXoxQlZEQ3pZZUVSdEpudzhCWjBISzVnQjMrMUgKeklxclkxb3RpUFozZDZWUTYweUJRM1MvaUlFK2dMcC9ZQ0x5czFjT3pTeUlIVTJuUStHTUtPSjVYQ00waG00VQpMQlhzalpxdWR3MTFwMG91R1c5TWp3Sjcxd01MczVPNjN3enBVc1B4eFk5cThwa3pXcFc5WkhrK0E0bW56MUdkCjB3UjhIRDEwYndER2k5c3pIYWcwTGZRY1pWQkZIb3BBQW5kUGVnUVMrMHZyZkpmZHdSM0J0cG1HK1BTYTZLbG8Ka2VpNS9EK2RBb0dCQVByTzZQNVRSRlM5Y0w4ZEF4NGdxWWt2L3NwSmJ3UGFURC9jbDhIdWpyTmYwWGt3T00xTQpva0hqVmZiKy9HNWpDd042SmVLUm92RDUyMDNCVUJPaVJ6WEg1c0lkb0dnYmRpRXpZOVlJYVBBOHI0NFI0WUZNCkZYWWJYY3huV0RpUDlwY2Mzblh1MFlhcm9XZDBOUzlqaXNPSXg2ekZ2RWczRktVb1pwMkhzUkVmQW9HQkFQNncKZERtc0Qxd01HaWVjcktnQnpKQmdqUXArcG5RM1piUFM2Y2E2dWhndGJXZEV5N1Q3UmVUN3BtM0E3eVBaVUNSQgptYmhUNlZkUUJVNzI3K0pVK2NJQkxVS1dTSUcwdjBKb1RGR2RvbWFEMStLRC93UCtOeVRyMER5TDcwbVN4UjVCCnRYTjF1YUlqUGRmQXNrYitjTjFFNWRFUEVaSlpMNVRCZTkzMnFZQmpBb0dBYk1nYmhGdUhNcDNyN2VoZWRzM0IKMnEvSGVlTjUxQmoxbzJsQkpTc2NGNjdDZ3lhb0xGdEZzUUF5USt2NmZzSlVmNUNXSi92MHlVSUZuV2J3SFdQdwpNT0pnTXVkNHNFN2c0S3VTYkwyL0RodTBKUkdhVm1NeWw4UnMzWUFoWW44R2ZDcFlUcHhqb2w2RXBnTmdJZ3F4Cm4vZU9hMkJrTm9vMVdTRDV5TytXbkE4Q2dZQkJWS3dMbXlvNWQxVkNNZnRNQVdJaTZ0RmpEc2ZONmVQcHM4R0oKMjU0ZTA1Qkx2Q2J3M3IrNEZDRkY2QWF2MEcreFRTNk1UT0gvSnFTbDg4dm01OXRGTzU0TGhaZEZ4a0tGVzFHdwpZZG9scDg0NTZaZ0J3elVNQUgxaStwWS83aWtvTUx6RnlEMzg3RU5SMDdrbll0ODZzeENzaHN3QUdXYU9KdStLCktWcWpkd0tCZ0E0WnVCeHFTK29LVy94Vkk4S1IyaDJjSVgxYitlUTdKNjRIWGIrbGhjY1NIZjIySmZ6S1htbjgKdjYxTXNiM0FzQXorRDN4TGxsdEh4WW0xR0IzdFVQUG1nOWhtZUh6ekc2MFkybmJvdURDaW9CeGErcG1tYUVhMgpySXNZRTZUZTlOVWZEM0J4SHdCOGFjVjd2eXdSZUl5bGxUdFJmaDlCSjRKbUxVK0laNEhHCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/journal-gatewayd.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURZRENDQWtpZ0F3SUJBZ0lJYjJ1enlxM1R3K2N3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU1TVRJd09URXdOVFUxT0ZvWApEVEk1TVRJd05qRXdOVFl3TWxvd09URWNNQm9HQTFVRUNoTVRUM0JsYmxOb2FXWjBJRUp2YjNSemRISmhjREVaCk1CY0dBMVVFQXhNUWFtOTFjbTVoYkMxbllYUmxkMkY1WkRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQVBtR0swckhyanBDZHA3RjZRTUt2OXZRKzRYcUZHYWVOTzR2dStqV2liSnN3R1BWSUNCRAo2SUdTU29UTTlGaWpsK2o5RjVEWUh0eFFDM1Y2WTNnVk9nWUpicEthT0plUmxjcCs2VytPanEzakw4SVBMckVRCmZYdUJ1VU1yT1JlRVF0bkVjcFpJaEd3QldTdU1qY1IwRUZFSFlNaXBqU3Z5RERnT2JIeURxSFJvQU1aNHIxLzAKb1JPTXp3Q0x1YVk1aVhoais1Y3I2a21WVldpRUp1d1U2eTF1SmVvcHFNczh5UCtKL1U3RDY1SnUzc05HQ29CbQo3TDdxQ2djL2VCSGJNZjJaTHVjRlNqUjB4Rk16QzE4dE13aituSmlLTzI2d3AwUTJJSVJjblJlWXhmTjVBRTlnCi90OWJqcXFWQXhEL0V1anl4alBXVlZZY084WFozeG1BSHYwQ0F3RUFBYU4vTUgwd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQjBHQTFVZERnUVdCQlJCSXNPQklJSUtXVTFTZDlrSEczYTAvY3dwMkRBZkJnTlZIU01FR0RBV2dCUkJJc09CCklJSUtXVTFTZDlrSEczYTAvY3dwMkRBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQUJ2RStuNXhCaFZtYkh0VkcKSjJ5OHR1MEx4TEF0VTJBSkFLUE40UnorMC8xc0ZGV1lxeS9oTmxDWlowS3B5RXF2eHhYUHRmWm9WMDQvaFBtMQpJZXoxb3ptRUNUMkxWLzEwV2hvdk1DTzdnOGFuaFdTQlVNRWpLQkpJOEVZMjl0cXcxRFdmQnc2dVR1bENZZDA1CmZNZFg3UTBoTTd4Mm9wbFN5RUxydytBakxRdjMrWS9kTW03SEF0VjZ3bm5OSHNjejlSN3VwcG5MS1pjU0srVlcKMXNNdTh3TFVVeUdXK3dJWWNRancvMERTWERlVE9tRGFUU1ZrMFVadnRoVVZTQXc5VFVDRDhLYW1QUStxcXA0SApkc1pYYU9rbVJSaXBBbFp0TElzcDhFdHFZZXBiU0MvRXovWER2R0w2VEpVZkkva3psTzdaL2VNL2FiNnBjR3hXCnI4VzdtUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerCompleteCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSWFEQ2dJL2dST3Jzd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1Ua3hNakE1TVRBMU5UVTNXaGNOTWpreE1qQTJNVEExTlRVM1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUpydU9mZzkrc2xiMTBld0hGVzFVa3RteGFVWTMxclcKUzl1NXZRN21IY0xPaHRzWFB5SWk5cUVtZDFReSt3ZmdFR3BSbkNoZjNSR0s1UDF0ZzRZejdmSTFhSlZlaUYrVwowTll0bFU4TUxuNURXK2VWc0o3eHBWTnZWU3FVMUFqUlNRWWpDRS9ybTNsYkF6a2U4RTVHNWxsQkdqdnFVdXJhCjVraG1abVVKOUo1d2NsNGJIVFV6VzczOVBzVFVQb3ZMV1kzVkIvMWI3dlNrWkJob1dPOHVZdTFMQklLVEJ0MGoKMXRaeXdRbEtMU0NGRlZUd09MclFrNG14QlhqWHJVTDFMVmxKY3Q3cG9TUFVvbkMxakVQUXB3WFhTSTFqb0xQWApuaWdBY2tGazZvN3BmTUxFWGVQKzRGak5ucms3blhpQ2xmTGpRN2JGNncza0l6bWQzQTZnWXlNQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCd1oKSHRraUhuMms4L3h4cjlFVExmdFRVd0U4TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCbEtTWkNPZ1JoeEpSNgowSkVrdDgrN0YyTldKS1czOVc1RXpUTUE4a09kOUlRdDFUa0s2cURiWGNzVjBjcEM0YXNabVl1TlRjY0plRkdNCitweWFMVnpNTkNVV3FQcytxSHRQSWxjdUlBc1Y1VUZnQVgyQU9Dd05TQ2c1OXA0QWZUWFZuWTdVY0kyTVdrc08KNU12M05MTGZET2F5VURiT3NjcWN4WlU5N0hYbFJPYXVxTjFnZjg0dUk0R2ZXYkFBSUJ0RndFSHBsbnlQb2JqRgpJUUY5TDU1OVV1WEk5NGhLOUNURVpJQ2F6bGxIZkZhaTZCK2llZUZnYVhBOG53Q3BPMXBiTit1VGJCSkRjTkZQClZscjhlZ0VmUTBVMCtSc1ZmUlNoTnBjNEZMTnhLeWxXQjd5OHJPakU4eHZmQmoxVGtnRFlUN1BidXhQVUtXbnEKUy9ibWlCKzAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-complete-server-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETWpDQ0FocWdBd0lCQWdJSWFEQ2dJL2dST3Jzd0RRWUpLb1pJaHZjTkFRRUxCUUF3TnpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0V3SHdZRFZRUURFeGhyZFdKbExXRndhWE5sY25abGNpMXNZaTF6YVdkdVpYSXcKSGhjTk1Ua3hNakE1TVRBMU5UVTNXaGNOTWpreE1qQTJNVEExTlRVM1dqQTNNUkl3RUFZRFZRUUxFd2x2Y0dWdQpjMmhwWm5ReElUQWZCZ05WQkFNVEdHdDFZbVV0WVhCcGMyVnlkbVZ5TFd4aUxYTnBaMjVsY2pDQ0FTSXdEUVlKCktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUpydU9mZzkrc2xiMTBld0hGVzFVa3RteGFVWTMxclcKUzl1NXZRN21IY0xPaHRzWFB5SWk5cUVtZDFReSt3ZmdFR3BSbkNoZjNSR0s1UDF0ZzRZejdmSTFhSlZlaUYrVwowTll0bFU4TUxuNURXK2VWc0o3eHBWTnZWU3FVMUFqUlNRWWpDRS9ybTNsYkF6a2U4RTVHNWxsQkdqdnFVdXJhCjVraG1abVVKOUo1d2NsNGJIVFV6VzczOVBzVFVQb3ZMV1kzVkIvMWI3dlNrWkJob1dPOHVZdTFMQklLVEJ0MGoKMXRaeXdRbEtMU0NGRlZUd09MclFrNG14QlhqWHJVTDFMVmxKY3Q3cG9TUFVvbkMxakVQUXB3WFhTSTFqb0xQWApuaWdBY2tGazZvN3BmTUxFWGVQKzRGak5ucms3blhpQ2xmTGpRN2JGNncza0l6bWQzQTZnWXlNQ0F3RUFBYU5DCk1FQXdEZ1lEVlIwUEFRSC9CQVFEQWdLa01BOEdBMVVkRXdFQi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZCd1oKSHRraUhuMms4L3h4cjlFVExmdFRVd0U4TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCbEtTWkNPZ1JoeEpSNgowSkVrdDgrN0YyTldKS1czOVc1RXpUTUE4a09kOUlRdDFUa0s2cURiWGNzVjBjcEM0YXNabVl1TlRjY0plRkdNCitweWFMVnpNTkNVV3FQcytxSHRQSWxjdUlBc1Y1VUZnQVgyQU9Dd05TQ2c1OXA0QWZUWFZuWTdVY0kyTVdrc08KNU12M05MTGZET2F5VURiT3NjcWN4WlU5N0hYbFJPYXVxTjFnZjg0dUk0R2ZXYkFBSUJ0RndFSHBsbnlQb2JqRgpJUUY5TDU1OVV1WEk5NGhLOUNURVpJQ2F6bGxIZkZhaTZCK2llZUZnYVhBOG53Q3BPMXBiTit1VGJCSkRjTkZQClZscjhlZ0VmUTBVMCtSc1ZmUlNoTnBjNEZMTnhLeWxXQjd5OHJPakU4eHZmQmoxVGtnRFlUN1BidXhQVUtXbnEKUy9ibWlCKzAKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeAPIServerCompleteClientCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWDdyRFFPT0dCQmt3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB4T1RFeU1Ea3hNRFUxTlRaYUZ3MHlPVEV5TURZeE1EVTFOVFphTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzRBRko5YUZTZ3lCbDFIeTcrSUwxTUhLZ0pJa1QrUmlFKwp3ZjBUd3BVTFhHUWdsY044MThKd29HMTNQMm45b1lWZmd6VTJRVGNQNmpkeW1lcTlOQmgyMWFKa2VyWkZuQzIxCmV3N0RtdTFtaGJyc0pzVWhyRE1MUk1KVzJLTWRRSWRmSmZpZTlZZ3BKRXRWTllvUjNGT2pFUE1hUWhsUjdYL0kKOGRVeURYd0xReGxXMEFCTndoekExMmhwRElTOWh0WmZ4MnBmeUdVUy9FNUdGaENwODMzMzdnTUtneGFucFB0TApKVWtXaEVHRDlxaUpxajZSWEQvNGpQdUpjYm1oY0plT1o3WmtSM3RFRm5RVW44aVlmYkNRWU9mS3M3dStFMVBHCkg5UXhwcnRSclZmak1UQ0ViaDFVZkNlZGhBcS9VRmxOWkpLZk9JUU1XKzlzbzZHa1lwVXJBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlN3UjBMMApnRUhIbXQrK3cxVUFtdDU0dlY2bW5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFzUVlqcGgrSnM5TGkvaXpYCkI1STFtUFpHenRBNmV0Zi91RzRWemhCM2ZZcHFTMmZ1blRwUU9HaGR0TmhGblYxUXNVbFd6aHlsbklxNFpHekEKSThpcHFTUlBNS0lMYXp5bTN2ZmI1MWtONHhXQy9Ncm9CbnVUN0N2azJHT1dGNjlDMDRkbHh4d2pyN1dKd21PMQpPaEM1RXJGVFB5aVpoUXJkSTQ3UzUvVi9OcnRBV3p0REZab25DdERCU3pEOWJER2NVWHd2SzF2U1RoTVpnVjNUCi9KVTlLQUtqY1J2WkpQRk0xc2tiTjlZMUJhdTRGYXpGWUYycnhwSWI1cFZVWmpsZDRjZkpTdGxWWjlhUUU5VUkKN2Z6L2FUR1JNanNiamtQUGQ5d2pncE5zL0JPaitGditXNVl1dWhqRUhPS283cWtwQ3NMNU1obUJ2NStmZGhaSgppdkhCcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlESGpDQ0FnYWdBd0lCQWdJSVcrSHp0NHVScW9Rd0RRWUpLb1pJaHZjTkFRRUxCUUF3TFRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUmN3RlFZRFZRUURFdzVyZFdKbGJHVjBMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3gKTURVMk1EUmFGdzB4T1RFeU1UQXhNRFUyTURSYU1DMHhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVYTUJVRwpBMVVFQXhNT2EzVmlaV3hsZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURTWGdiOXIrdi91T0dTcndQZFZVendkOUtqQk9HSDE2M0Q4WmNRcFJOZW55QVcxbXl2ZjArakM4TzQKRGhua3dTenVOS2dyVVl5a1dweWNLcldvYUNkUWhaU2N1S1VESHdaZmJpeWlqQkVXakx3OWkwS0Mya3dWTVI5TQp5WmhUcGlKTTZFOGJreXQ4Ums1cDM5SDlBKzJMU1VsbmxFMmJWN05rMlQwdytqNGpGNEtyM3g2aUJBYXdISXJzCmNTR2JZNTdXMS9wVEp0bi9IQ1pIRldmcmNMT3FDMmRhNFJ1U1JwZVhPdlhLT2tPK2JBc2hpejRmU2dqcGt1ZG0KMTFDR1Z4b2tURXorb2p1NkJwY2V6c2NRbDZJSnVYQWtMQm0xUVlqZGI0TFhHQzN2cWI4U3ZyQ0NRRmtPbUxnMQpuS29TS2VrS25YcWRFcnhiNEUvRXFXR29GdEpuQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRaVRPUDUzTmtLQU9hRUt2aDFySS9Bajl5aFJ6QU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQUQ4bGg4MEdDa210UmZ5aThGMkt6bTZzZXZVWjgzNUZ5bmZmWVY1VgoyQTl4ejhTbTByVXBPRUFxb1IwZGpIMjNjRy81a0JTVitBTjhaQWtUTHl4cW9nYzBKdU05VDZrMnlLeTBzOGt1CnJDQ2tVTkE2clpSQkgwM1pIRjEzcnN5a1Fid21hRDJwMGFoRUlnOHppdXZjclVSdWJuaWJ0VXVZa3F1cnpjaHMKSVZ3TG1QdEtyUFRyK3pCR2FwZzhJN0VrZ0NpR3ZHSmxmVVA1S0d5S0JaaVFFRDVZVVFyZGkveWRDZmFTM0FUawpRc0pQeFdvL3I2T012UWVaTEZIRmF3dExmdzhSTkluc1FvOE5waUV1bmdOUzhwc2NDZDNQaHpjakRSUENWdnZMCnl2S21Kdks3SEtwbWxtVTV3V0VXd1BrZEIyQTg1RzdQU0xSWHdZeEc0TzZKTnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETkRDQ0FoeWdBd0lCQWdJSUZkTjBFSXJ1dmNrd0RRWUpLb1pJaHZjTkFRRUxCUUF3T0RFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0l3SUFZRFZRUURFeGxyZFdKbExXTnZiblJ5YjJ3dGNHeGhibVV0YzJsbmJtVnkKTUI0WERURTVNVEl3T1RFd05UWXdORm9YRFRJd01USXdPREV3TlRZd05Gb3dPREVTTUJBR0ExVUVDeE1KYjNCbApibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdrVFRlSERQTXBWV0lya2VJY0ZQcG04TGZLNGsKWFhLcnFsYjZWYXhuWGdCa2VybmxabGMxSTBTNGwwL2hhdWR2dkZET1kwL2dtK0RQZjZpN3l6RUFaM3FNMGxndwpISGFyMlFpUWpuWEYxbHNXVStGZXBiTXVNZ2JSOC8vU3dtVGxnZ3hqdVlyeU1FSkhQbkl4OUxia3Zld2tYRTV3CkNkb2RkUndmSk5IVmV4aGxDTE1ZUHNSeERNZVVWakNZZkJlOUpDanhFZit4MzlKcDd0VUs2d05hS2NwRytTdXQKb0xJRzdLclRIbWdycUNXdm1pK1FnK01yb2Z4djFjdTlpb1dGUHFnSEU5YlpOZmcwb1BQRzVsa29SL0ZTcjFpZgoyMFdTYUo3L0UrOWRMd2c2WlZHc0lubWtCRkFBSlBzNnphcEV5VTlTZWk0OGE4aThEeTZwOW5BN3RRSURBUUFCCm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUKcWtMa3c3bnV6ZXgwWVYvSzJCZXZWbXpORTg0d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGd3hJVWw2VzFiaApUWWRub01vZUlqWXZUVVFldmhSNVVBYk5hVGRqK2tJMThseS9jUVZYZlZoTzQraDNaMTFxTVFrTDJBc3ZzZ09nCkRSbUNLSTd1dDJlRW9CSnI1Z3g2eVBNTVFXV21ZVnVESkptdWdTMTZ1Mk1ZbGc2OWpwUERXRS9IMUdXK3Z2aW8KOFJ3Qm00cm9PV2dUUFlPVnFFTEUxa3lTeG5rQ1hDQmRIaE1jVFRoU2dpdjFVay9sc2djaS80RjBhZHpuNld0SgpVc1RXZHpPN1dOZVZZVVM4K1Q4Q0FUYzhlRERkQm92N0JJcVR2VWlDclIyRmNid1Fmc1JuUWFBU3hCS2c3UzE0ClBOQzBqL2FDL1k1VzNCcHRhNFdyWlY1U21DS3pWUGxIaGRpTStYdDN1akJxVThTZEdQZGp6Y2VYQkVnclpzT3QKQk1RemRjODR6REE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJTWlINlpnRDR0RVV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFYwVjhWTlcrOQpZVElFaCtZNnJxazNDNFFYUWEwQ0lFOExPSnRiUVZNS3hSbGV4N3E5K1JSRjlyeXZRNEcyTGZZaDBIK2ZUZHhSCmh4M0hZakYwZzR5c0JJdldabWVoaXQ0MGZSaE5PVmVXQ0ZDU1lLbG1vSGNTSm1aYnc4ZnFkRjNBRjJwNExFdGMKcEhwSUViZWpmS2NraXpNeUlPaW45Rk9uWmpEanhndW1vSmpRbXU1MkJvSFg3SkJLa09CM29WWW1OeFdEb3IvNwpBUlFPM1VhbnpiMlcvZkcyb29TM3ZMNHBNNVRCY05TbFBCamdvZlIveEMzbFNWUjVPQ2lZVy8ydjUwdTNzNEpJCnc5eWFHeXZaRUlyNDVLL1ArRGJBNEtwSlY4L3ZCOEFOY244TzZnY0dBYTVta1pLZ3hoSWdGYnZXZit4VzdxYmkKc2lRZkRZSEVySUNOQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBd3dXQ085UUNzTjZuZi9sWGd3aVJnS21WYWY5cE5aT2ZBcm04aW9LcFpWK3lyYkVlWDVjRnNHUlQKa0FESktjaGg5SDEvcVppRDdNUFQzZzJuWkdoYjlNa0hsWFZCU0RUSDlTODFYbmt6UGZHcDhDZXNMYXZWVko4MgowdDU1NmV6eldqcVFIU2szcUs2Q2ZUMEs2RkswcXFRNDNYTW1sRGl6Q1dQUlMzaUtPSUcxZENJbmZNQ1BmQ0FGCkhHZEFNcHJMUWFoS0lTeWJvY0lBWTU3SmhRNlVVVThnbVFWTWtHb0xwdXVRbDNuOVcwS1RIeVIrSTJNQjBsTWwKVlV2dktMQkVvVXRQOTVpa0hkTVViRkplcGpZU3dyQ25qWEMyQ2ZucUROVW44QXJRTE9TUXlsdXZmdC9URjY1RQp6RkFJM0ZuenUyci9rTDRIT2RMZ1V3U0FSRXR3NUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEU0RDQ0FqQ2dBd0lCQWdJSVNlVVJNWTRRdlVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UWpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU3d3S2dZRFZRUURFeU5yZFdKbGJHVjBMV0p2YjNSemRISmhjQzFyZFdKbFkyOXUKWm1sbkxYTnBaMjVsY2pBZUZ3MHhPVEV5TURreE1EVTFOVGhhRncweU9URXlNRFl4TURVMU5UaGFNRUl4RWpBUQpCZ05WQkFzVENXOXdaVzV6YUdsbWRERXNNQ29HQTFVRUF4TWphM1ZpWld4bGRDMWliMjkwYzNSeVlYQXRhM1ZpClpXTnZibVpwWnkxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzcKZzZ6bDhsZ09HWE12a28zYllHVEZVNS9PUHlQQjArUHFCSjhyYlRmN1hPRVd1U3lqTjlreE9CTDRReVRCT2pMTgp5bVNxWjlJbVJpekp5YWdTSW1mdWRES0t0TnhIWTVLZkh3cFNzVFJWUStsNnhMTVhTRjVJNHRNL1RDWEp3RmdWClpEemU0MG83RjE0OWNHdlJ3aFVXSWM1WldidjF6U1hHdDlsL21LdXIrR1d6QjJ2S0hCTy9LWUFDWHdabVh5ZXIKZlJvTmhzZHFwOGQrUnlLa3FSalBYSHlLemxta0hCdlpkZlpVZWlGQWJnNmZtWDJHR29RWDFMY0E5RVlMNFB5aApBaUFabUVLc1N5TWlrR0pKM2pJeFB4VklTbnZEWktEY2o4cmZpa0ZoeWxRVTRqVm1idVUyNDZ2Qmx2K3owSHVJCitKQjUxMlY1NlYrcTdPVDAzWkpQQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTSVBDOXFoWDNEaUtKVHYyNXVxbHRkTWp4MnBUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBczc0YmY2UDB5WGR5Um9LUXQ4RDVOQ3ErbzlMY0FKVkNoT3NENldsZjNhZStaSDA5CkMrQXZMeC9FM3JMajBEUCtQOWdCZllVVU5wMm9aSDROSWRZTFVsR2RFbnpuYXlnTlkxZzVwWTk5a2hXYXJhOGEKWVkwcGlDc1cxUmZYT3dxVGxJRTFGOHkwOHh3VnBQR21ueUVUMmUyV2tzbEdCQUg4UWRkYWpCTXVyMXNGUklieQpkUkFEamhjNTZ4aFdmSVVCZW10VjM5bW4rejk3dGwxVmc3YXhDeE9ZZUVsVmhobEE2NGZXUno4b2NSQWFNWmo3CjdGOXgxMFRCNmFMRW5oN0dvRDF3VytCclNhTG9Ec2FuY015ejhPdnFCcUk3SVVpOUpkSXVsSTNsNnFHaitodDAKV3NVNWQzOGpBQTFLcEJ2YnB5c1drSEhnS1FyWWZKd2lGQlc4N3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-complete-client-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lJWDdyRFFPT0dCQmt3RFFZSktvWklodmNOQVFFTEJRQXdOakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TQXdIZ1lEVlFRREV4ZGhaRzFwYmkxcmRXSmxZMjl1Wm1sbkxYTnBaMjVsY2pBZQpGdzB4T1RFeU1Ea3hNRFUxTlRaYUZ3MHlPVEV5TURZeE1EVTFOVFphTURZeEVqQVFCZ05WQkFzVENXOXdaVzV6CmFHbG1kREVnTUI0R0ExVUVBeE1YWVdSdGFXNHRhM1ZpWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUcKU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzRBRko5YUZTZ3lCbDFIeTcrSUwxTUhLZ0pJa1QrUmlFKwp3ZjBUd3BVTFhHUWdsY044MThKd29HMTNQMm45b1lWZmd6VTJRVGNQNmpkeW1lcTlOQmgyMWFKa2VyWkZuQzIxCmV3N0RtdTFtaGJyc0pzVWhyRE1MUk1KVzJLTWRRSWRmSmZpZTlZZ3BKRXRWTllvUjNGT2pFUE1hUWhsUjdYL0kKOGRVeURYd0xReGxXMEFCTndoekExMmhwRElTOWh0WmZ4MnBmeUdVUy9FNUdGaENwODMzMzdnTUtneGFucFB0TApKVWtXaEVHRDlxaUpxajZSWEQvNGpQdUpjYm1oY0plT1o3WmtSM3RFRm5RVW44aVlmYkNRWU9mS3M3dStFMVBHCkg5UXhwcnRSclZmak1UQ0ViaDFVZkNlZGhBcS9VRmxOWkpLZk9JUU1XKzlzbzZHa1lwVXJBZ01CQUFHalFqQkEKTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlN3UjBMMApnRUhIbXQrK3cxVUFtdDU0dlY2bW5qQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFzUVlqcGgrSnM5TGkvaXpYCkI1STFtUFpHenRBNmV0Zi91RzRWemhCM2ZZcHFTMmZ1blRwUU9HaGR0TmhGblYxUXNVbFd6aHlsbklxNFpHekEKSThpcHFTUlBNS0lMYXp5bTN2ZmI1MWtONHhXQy9Ncm9CbnVUN0N2azJHT1dGNjlDMDRkbHh4d2pyN1dKd21PMQpPaEM1RXJGVFB5aVpoUXJkSTQ3UzUvVi9OcnRBV3p0REZab25DdERCU3pEOWJER2NVWHd2SzF2U1RoTVpnVjNUCi9KVTlLQUtqY1J2WkpQRk0xc2tiTjlZMUJhdTRGYXpGWUYycnhwSWI1cFZVWmpsZDRjZkpTdGxWWjlhUUU5VUkKN2Z6L2FUR1JNanNiamtQUGQ5d2pncE5zL0JPaitGditXNVl1dWhqRUhPS283cWtwQ3NMNU1obUJ2NStmZGhaSgppdkhCcFE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlESGpDQ0FnYWdBd0lCQWdJSVcrSHp0NHVScW9Rd0RRWUpLb1pJaHZjTkFRRUxCUUF3TFRFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNUmN3RlFZRFZRUURFdzVyZFdKbGJHVjBMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3gKTURVMk1EUmFGdzB4T1RFeU1UQXhNRFUyTURSYU1DMHhFakFRQmdOVkJBc1RDVzl3Wlc1emFHbG1kREVYTUJVRwpBMVVFQXhNT2EzVmlaV3hsZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLCkFvSUJBUURTWGdiOXIrdi91T0dTcndQZFZVendkOUtqQk9HSDE2M0Q4WmNRcFJOZW55QVcxbXl2ZjArakM4TzQKRGhua3dTenVOS2dyVVl5a1dweWNLcldvYUNkUWhaU2N1S1VESHdaZmJpeWlqQkVXakx3OWkwS0Mya3dWTVI5TQp5WmhUcGlKTTZFOGJreXQ4Ums1cDM5SDlBKzJMU1VsbmxFMmJWN05rMlQwdytqNGpGNEtyM3g2aUJBYXdISXJzCmNTR2JZNTdXMS9wVEp0bi9IQ1pIRldmcmNMT3FDMmRhNFJ1U1JwZVhPdlhLT2tPK2JBc2hpejRmU2dqcGt1ZG0KMTFDR1Z4b2tURXorb2p1NkJwY2V6c2NRbDZJSnVYQWtMQm0xUVlqZGI0TFhHQzN2cWI4U3ZyQ0NRRmtPbUxnMQpuS29TS2VrS25YcWRFcnhiNEUvRXFXR29GdEpuQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQCkJnTlZIUk1CQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJRaVRPUDUzTmtLQU9hRUt2aDFySS9Bajl5aFJ6QU4KQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBQUQ4bGg4MEdDa210UmZ5aThGMkt6bTZzZXZVWjgzNUZ5bmZmWVY1VgoyQTl4ejhTbTByVXBPRUFxb1IwZGpIMjNjRy81a0JTVitBTjhaQWtUTHl4cW9nYzBKdU05VDZrMnlLeTBzOGt1CnJDQ2tVTkE2clpSQkgwM1pIRjEzcnN5a1Fid21hRDJwMGFoRUlnOHppdXZjclVSdWJuaWJ0VXVZa3F1cnpjaHMKSVZ3TG1QdEtyUFRyK3pCR2FwZzhJN0VrZ0NpR3ZHSmxmVVA1S0d5S0JaaVFFRDVZVVFyZGkveWRDZmFTM0FUawpRc0pQeFdvL3I2T012UWVaTEZIRmF3dExmdzhSTkluc1FvOE5waUV1bmdOUzhwc2NDZDNQaHpjakRSUENWdnZMCnl2S21Kdks3SEtwbWxtVTV3V0VXd1BrZEIyQTg1RzdQU0xSWHdZeEc0TzZKTnc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlETkRDQ0FoeWdBd0lCQWdJSUZkTjBFSXJ1dmNrd0RRWUpLb1pJaHZjTkFRRUxCUUF3T0RFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU0l3SUFZRFZRUURFeGxyZFdKbExXTnZiblJ5YjJ3dGNHeGhibVV0YzJsbmJtVnkKTUI0WERURTVNVEl3T1RFd05UWXdORm9YRFRJd01USXdPREV3TlRZd05Gb3dPREVTTUJBR0ExVUVDeE1KYjNCbApibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeU1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdrVFRlSERQTXBWV0lya2VJY0ZQcG04TGZLNGsKWFhLcnFsYjZWYXhuWGdCa2VybmxabGMxSTBTNGwwL2hhdWR2dkZET1kwL2dtK0RQZjZpN3l6RUFaM3FNMGxndwpISGFyMlFpUWpuWEYxbHNXVStGZXBiTXVNZ2JSOC8vU3dtVGxnZ3hqdVlyeU1FSkhQbkl4OUxia3Zld2tYRTV3CkNkb2RkUndmSk5IVmV4aGxDTE1ZUHNSeERNZVVWakNZZkJlOUpDanhFZit4MzlKcDd0VUs2d05hS2NwRytTdXQKb0xJRzdLclRIbWdycUNXdm1pK1FnK01yb2Z4djFjdTlpb1dGUHFnSEU5YlpOZmcwb1BQRzVsa29SL0ZTcjFpZgoyMFdTYUo3L0UrOWRMd2c2WlZHc0lubWtCRkFBSlBzNnphcEV5VTlTZWk0OGE4aThEeTZwOW5BN3RRSURBUUFCCm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQi96QWRCZ05WSFE0RUZnUVUKcWtMa3c3bnV6ZXgwWVYvSzJCZXZWbXpORTg0d0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGd3hJVWw2VzFiaApUWWRub01vZUlqWXZUVVFldmhSNVVBYk5hVGRqK2tJMThseS9jUVZYZlZoTzQraDNaMTFxTVFrTDJBc3ZzZ09nCkRSbUNLSTd1dDJlRW9CSnI1Z3g2eVBNTVFXV21ZVnVESkptdWdTMTZ1Mk1ZbGc2OWpwUERXRS9IMUdXK3Z2aW8KOFJ3Qm00cm9PV2dUUFlPVnFFTEUxa3lTeG5rQ1hDQmRIaE1jVFRoU2dpdjFVay9sc2djaS80RjBhZHpuNld0SgpVc1RXZHpPN1dOZVZZVVM4K1Q4Q0FUYzhlRERkQm92N0JJcVR2VWlDclIyRmNid1Fmc1JuUWFBU3hCS2c3UzE0ClBOQzBqL2FDL1k1VzNCcHRhNFdyWlY1U21DS3pWUGxIaGRpTStYdDN1akJxVThTZEdQZGp6Y2VYQkVnclpzT3QKQk1RemRjODR6REE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJTWlINlpnRDR0RVV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFYwVjhWTlcrOQpZVElFaCtZNnJxazNDNFFYUWEwQ0lFOExPSnRiUVZNS3hSbGV4N3E5K1JSRjlyeXZRNEcyTGZZaDBIK2ZUZHhSCmh4M0hZakYwZzR5c0JJdldabWVoaXQ0MGZSaE5PVmVXQ0ZDU1lLbG1vSGNTSm1aYnc4ZnFkRjNBRjJwNExFdGMKcEhwSUViZWpmS2NraXpNeUlPaW45Rk9uWmpEanhndW1vSmpRbXU1MkJvSFg3SkJLa09CM29WWW1OeFdEb3IvNwpBUlFPM1VhbnpiMlcvZkcyb29TM3ZMNHBNNVRCY05TbFBCamdvZlIveEMzbFNWUjVPQ2lZVy8ydjUwdTNzNEpJCnc5eWFHeXZaRUlyNDVLL1ArRGJBNEtwSlY4L3ZCOEFOY244TzZnY0dBYTVta1pLZ3hoSWdGYnZXZit4VzdxYmkKc2lRZkRZSEVySUNOQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBd3dXQ085UUNzTjZuZi9sWGd3aVJnS21WYWY5cE5aT2ZBcm04aW9LcFpWK3lyYkVlWDVjRnNHUlQKa0FESktjaGg5SDEvcVppRDdNUFQzZzJuWkdoYjlNa0hsWFZCU0RUSDlTODFYbmt6UGZHcDhDZXNMYXZWVko4MgowdDU1NmV6eldqcVFIU2szcUs2Q2ZUMEs2RkswcXFRNDNYTW1sRGl6Q1dQUlMzaUtPSUcxZENJbmZNQ1BmQ0FGCkhHZEFNcHJMUWFoS0lTeWJvY0lBWTU3SmhRNlVVVThnbVFWTWtHb0xwdXVRbDNuOVcwS1RIeVIrSTJNQjBsTWwKVlV2dktMQkVvVXRQOTVpa0hkTVViRkplcGpZU3dyQ25qWEMyQ2ZucUROVW44QXJRTE9TUXlsdXZmdC9URjY1RQp6RkFJM0ZuenUyci9rTDRIT2RMZ1V3U0FSRXR3NUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEU0RDQ0FqQ2dBd0lCQWdJSVNlVVJNWTRRdlVRd0RRWUpLb1pJaHZjTkFRRUxCUUF3UWpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU3d3S2dZRFZRUURFeU5yZFdKbGJHVjBMV0p2YjNSemRISmhjQzFyZFdKbFkyOXUKWm1sbkxYTnBaMjVsY2pBZUZ3MHhPVEV5TURreE1EVTFOVGhhRncweU9URXlNRFl4TURVMU5UaGFNRUl4RWpBUQpCZ05WQkFzVENXOXdaVzV6YUdsbWRERXNNQ29HQTFVRUF4TWphM1ZpWld4bGRDMWliMjkwYzNSeVlYQXRhM1ZpClpXTnZibVpwWnkxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzcKZzZ6bDhsZ09HWE12a28zYllHVEZVNS9PUHlQQjArUHFCSjhyYlRmN1hPRVd1U3lqTjlreE9CTDRReVRCT2pMTgp5bVNxWjlJbVJpekp5YWdTSW1mdWRES0t0TnhIWTVLZkh3cFNzVFJWUStsNnhMTVhTRjVJNHRNL1RDWEp3RmdWClpEemU0MG83RjE0OWNHdlJ3aFVXSWM1WldidjF6U1hHdDlsL21LdXIrR1d6QjJ2S0hCTy9LWUFDWHdabVh5ZXIKZlJvTmhzZHFwOGQrUnlLa3FSalBYSHlLemxta0hCdlpkZlpVZWlGQWJnNmZtWDJHR29RWDFMY0E5RVlMNFB5aApBaUFabUVLc1N5TWlrR0pKM2pJeFB4VklTbnZEWktEY2o4cmZpa0ZoeWxRVTRqVm1idVUyNDZ2Qmx2K3owSHVJCitKQjUxMlY1NlYrcTdPVDAzWkpQQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUIKQWY4RUJUQURBUUgvTUIwR0ExVWREZ1FXQkJTSVBDOXFoWDNEaUtKVHYyNXVxbHRkTWp4MnBUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBczc0YmY2UDB5WGR5Um9LUXQ4RDVOQ3ErbzlMY0FKVkNoT3NENldsZjNhZStaSDA5CkMrQXZMeC9FM3JMajBEUCtQOWdCZllVVU5wMm9aSDROSWRZTFVsR2RFbnpuYXlnTlkxZzVwWTk5a2hXYXJhOGEKWVkwcGlDc1cxUmZYT3dxVGxJRTFGOHkwOHh3VnBQR21ueUVUMmUyV2tzbEdCQUg4UWRkYWpCTXVyMXNGUklieQpkUkFEamhjNTZ4aFdmSVVCZW10VjM5bW4rejk3dGwxVmc3YXhDeE9ZZUVsVmhobEE2NGZXUno4b2NSQWFNWmo3CjdGOXgxMFRCNmFMRW5oN0dvRDF3VytCclNhTG9Ec2FuY015ejhPdnFCcUk3SVVpOUpkSXVsSTNsNnFHaitodDAKV3NVNWQzOGpBQTFLcEJ2YnB5c1drSEhnS1FyWWZKd2lGQlc4N3c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerExternalLBServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJUHJGaTNjWXRTWll3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05NVGt4TWpFd01UQTFOakF5V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxQ05wbkt4NDRVU1BaZnZSM05KdkMyZ1BuR2djbFBHdApIUm1vcjFIVCs5R0NuUXN6UkhHVkJ4aVZXU2h6T3U0Z0EreGNiL3k5MGpKU21PNWdvL2NQelBPYngyOHVuWC9BCjc2U212SVBJblRpMVJmZFZsMzJnVzZvSFlZdE5WNVZLdDdkSm1sMG5qcnhsdFhyZ0ZJZm9aclRheXhrVnl2MnMKcjVlTlZBVUZIVzRCSEFNMHFLd29BSDBlT2Uxa0xGV0MrZkRPSlNtaDArVy9aMXgrNWRrK2p3aDlyait1TDdBRQpBZGRpVXp5Rk04TFkxbXF1Tkk1bGM3b3FkTXl6TGFha1ByTERPbWlSSWFrZUlyUGtoeU4xb3FtaUkveWZjd0VTCkkyR3lPdjRNTllnSTlzSzlSRHYzVFo2bjllaGEwdm1SeFQycXIzeVZDLzBtM1BmVGtSQTNzUUlEQVFBQm80R3IKTUlHb01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREFmQmdOVkhTTUVHREFXCmdCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREF6QmdOVkhSRUVMREFxZ2loaGNHa3VZMngxYzNSbGNpMHoKTkRObUxuTmhibVJpYjNneE5qWXpMbTl3Wlc1MGJHTXVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTwoyMHA0cGFGdkJNcTdtSzJDRFBodDV6VVF1WHkyd09UUGpRUEhhamNTenRPQmZtaEloVEhiYkRuQU9BNlIxZzhnCjlkbEhIUVNmNlp5V2g1TERrVTR6TkQrTHhmTGkzeE1PbW9XcDlEMXJ3aWFBTHJTN3QxZXNYQ3pYaW9HQ2k1ZFEKZEpacXVFOFVZNTArVEgxSWFEZHVOd0VVVjBXbWczR3RmVncwNmlzQUNFZFltNzd3YnczVFE5dzFmbk02OTFieQpxRkZUNTZBSjRJa2UzZGFhYURNTXNQR1BMSEJVT3RmSnpXdFlsczVCZFMrUTlCMCtlSTNTMUFSZ3JES3IrVEZ1CmdlR3F6eXRnZGVsUTJndHB5Y0xFUk9SWG5GK21TMHRrNkhDcnU4K0MyM0JCUUV6ekpnd0xOay9KejdwbDhxUm0KaWN3VUlHTFdJQjhiR1pXekg5ckwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJYURDZ0kvZ1JPcnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05Namt4TWpBMk1UQTFOVFUzV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSnJ1T2ZnOStzbGIxMGV3SEZXMVVrdG14YVVZMzFyVwpTOXU1dlE3bUhjTE9odHNYUHlJaTlxRW1kMVF5K3dmZ0VHcFJuQ2hmM1JHSzVQMXRnNFl6N2ZJMWFKVmVpRitXCjBOWXRsVThNTG41RFcrZVZzSjd4cFZOdlZTcVUxQWpSU1FZakNFL3JtM2xiQXprZThFNUc1bGxCR2p2cVV1cmEKNWtobVptVUo5SjV3Y2w0YkhUVXpXNzM5UHNUVVBvdkxXWTNWQi8xYjd2U2taQmhvV084dVl1MUxCSUtUQnQwagoxdFp5d1FsS0xTQ0ZGVlR3T0xyUWs0bXhCWGpYclVMMUxWbEpjdDdwb1NQVW9uQzFqRVBRcHdYWFNJMWpvTFBYCm5pZ0Fja0ZrNm83cGZNTEVYZVArNEZqTm5yazduWGlDbGZMalE3YkY2dzNrSXptZDNBNmdZeU1DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJ3WgpIdGtpSG4yazgveHhyOUVUTGZ0VFV3RThNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJsS1NaQ09nUmh4SlI2CjBKRWt0OCs3RjJOV0pLVzM5VzVFelRNQThrT2Q5SVF0MVRrSzZxRGJYY3NWMGNwQzRhc1ptWXVOVGNjSmVGR00KK3B5YUxWek1OQ1VXcVBzK3FIdFBJbGN1SUFzVjVVRmdBWDJBT0N3TlNDZzU5cDRBZlRYVm5ZN1VjSTJNV2tzTwo1TXYzTkxMZkRPYXlVRGJPc2NxY3haVTk3SFhsUk9hdXFOMWdmODR1STRHZldiQUFJQnRGd0VIcGxueVBvYmpGCklRRjlMNTU5VXVYSTk0aEs5Q1RFWklDYXpsbEhmRmFpNkIraWVlRmdhWEE4bndDcE8xcGJOK3VUYkJKRGNORlAKVmxyOGVnRWZRMFUwK1JzVmZSU2hOcGM0RkxOeEt5bFdCN3k4ck9qRTh4dmZCajFUa2dEWVQ3UGJ1eFBVS1ducQpTL2JtaUIrMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcUNOcG5LeDQ0VVNQWmZ2UjNOSnZDMmdQbkdnY2xQR3RIUm1vcjFIVCs5R0NuUXN6ClJIR1ZCeGlWV1Noek91NGdBK3hjYi95OTBqSlNtTzVnby9jUHpQT2J4Mjh1blgvQTc2U212SVBJblRpMVJmZFYKbDMyZ1c2b0hZWXROVjVWS3Q3ZEptbDBuanJ4bHRYcmdGSWZvWnJUYXl4a1Z5djJzcjVlTlZBVUZIVzRCSEFNMApxS3dvQUgwZU9lMWtMRldDK2ZET0pTbWgwK1cvWjF4KzVkaytqd2g5cmordUw3QUVBZGRpVXp5Rk04TFkxbXF1Ck5JNWxjN29xZE15ekxhYWtQckxET21pUklha2VJclBraHlOMW9xbWlJL3lmY3dFU0kyR3lPdjRNTllnSTlzSzkKUkR2M1RaNm45ZWhhMHZtUnhUMnFyM3lWQy8wbTNQZlRrUkEzc1FJREFRQUJBb0lCQUhHRDV3dWx6YjZZb1EvRApZYjVxUEJwQldUakplWEo5YjlqVHQvVVZrNzdSaGhNc3VxSWM1UFp6ZkhGRFEvaW5SK29lSzVKWDJuZ05EWUsrCmZYUjFtcTlPVVAvbWFseGZJZzBvNW9Fam44KzF0M3pUTFhBbm1wb0lRdzl5RXZkc2paTlhKVlFZVEZxcml5ZHAKRzl3QW5jQ3BuWVc5Rzk5K1FKWVVCWkNTQ3hBQVdjZ0g2YkE1cTZ4Rmg2Q1RSNnJjdWFMSk43MUNJckRPUGM5Ywo0blpycFlMVXcvTFZGMTZocE1pczQ2eUJNeDJieDI5S3B5a1B1WHZyVFBkdzNweWxIaVVKL0JLa2hzUXBRK3RvCnUzWm1sMWZMRGVaNDB1a1R3cjBibXU3U1RiYXA5L0ZGWmF4UHBvZGhrODNUR24rbCtGckFldWNSVndJQTI5UnUKWGZSdlZoa0NnWUVBMzRSbk9GQjZpQytFOHJGaitHK1pqeVc5Qk10aDFwR0N0cDJJQ1ZTWnpOY3dha3FwamE4Qgp5NHhyekk3RGduZFhQWk0yd0I0clNQbFlwWXNNUjlheHBZRTI1U2VIQnIyaGVRZGQrY1ZMdFQyaHZuTUFQRXF5CnRWTWo2VkRLMlZSUkd2QWRXQUZiSjd0L2IybkdxcVdadW5zbEczTkszbnNQVzZJQmtJS3hEWmNDZ1lFQXdKSzYKVkFpblpydk1RWk9tNUhtbXBXa2FBSGE3eFhUYmFTdk5ueFEzSCtSaHZVWmxqRVZ0Z09zcDh0R1ord1pNM2JsVwpaai9SOXZRRWpCczdxRUY0VVQ3SThKNllCM243SzVQRkRzN1dZemVrK2dFWHBHWXFFeXFVVVVqVGNLcTJ2ellkCjY2cjRIM1NqQVBYbktDWGZpNzdUZW9rNXNuazdHdXE4QlA0ZUhmY0NnWUVBekkzMmpQSVNBVnBEdUh1aGV2WmYKT1VNWFJqRC9QQWYwOFQwZ0J6SDJneUdZZkY0UjU4bDJ3aHFqZVJSYVZxYnpIelgvMERpTDhuL0hvZENzRDM2cgpHMFV5d09xNHh2RjZ1akdFenBYQjRIOGo3QkNBOGF5RytpeTVXOGdGckhsZXRHRjA2VnBzV3VOY0Q5Rms4RDBYCmdETTgxVzlnNEZVTXpCWnFpaDhnKzhjQ2dZQUVQN2lJdmlBamJpVlZsUkpybkJ1SExzaDZGaVNTZUwrV2xIYlcKK2JVMXFPNVhKTVI4MGROV3N0bWNGKy9UMEJIR0dwN0Rac2tWTDlFaDNqLzB1RzBWTGROMUs2cWpENWZ4SURPSwozaGx3MnZ0eTRLOUsyMDQyV2d3bnR2bWpWTUR2ZXh3eDVQWFFpOXhFMnlnY2hLbG9CZS9ZbGtxRm01TW9SdUdiCklwZzdoUUtCZ1FESEdhQUxqZW4xellBbEYrYjRUZFFKWmtWRWQzd1BWdTd4WjdZVWE1S1I3YVQya0lWWUozVi8Kdmh5OVVIQ0xtMWtDclg2UVp0RlFYd2ZBS3NlaXpMZURReXRlN1R5aGxCanhQeFJYb2VBSDJJazY5eG1JWDRNQQpwVnBjV3FHczIwMUZHVXBmM0ZmVGNEeEtubVhtWE9PS2lrSzVGQlJjRDBCVC9DNUtSMjdqZEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-lb-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcUNOcG5LeDQ0VVNQWmZ2UjNOSnZDMmdQbkdnY2xQR3RIUm1vcjFIVCs5R0NuUXN6ClJIR1ZCeGlWV1Noek91NGdBK3hjYi95OTBqSlNtTzVnby9jUHpQT2J4Mjh1blgvQTc2U212SVBJblRpMVJmZFYKbDMyZ1c2b0hZWXROVjVWS3Q3ZEptbDBuanJ4bHRYcmdGSWZvWnJUYXl4a1Z5djJzcjVlTlZBVUZIVzRCSEFNMApxS3dvQUgwZU9lMWtMRldDK2ZET0pTbWgwK1cvWjF4KzVkaytqd2g5cmordUw3QUVBZGRpVXp5Rk04TFkxbXF1Ck5JNWxjN29xZE15ekxhYWtQckxET21pUklha2VJclBraHlOMW9xbWlJL3lmY3dFU0kyR3lPdjRNTllnSTlzSzkKUkR2M1RaNm45ZWhhMHZtUnhUMnFyM3lWQy8wbTNQZlRrUkEzc1FJREFRQUJBb0lCQUhHRDV3dWx6YjZZb1EvRApZYjVxUEJwQldUakplWEo5YjlqVHQvVVZrNzdSaGhNc3VxSWM1UFp6ZkhGRFEvaW5SK29lSzVKWDJuZ05EWUsrCmZYUjFtcTlPVVAvbWFseGZJZzBvNW9Fam44KzF0M3pUTFhBbm1wb0lRdzl5RXZkc2paTlhKVlFZVEZxcml5ZHAKRzl3QW5jQ3BuWVc5Rzk5K1FKWVVCWkNTQ3hBQVdjZ0g2YkE1cTZ4Rmg2Q1RSNnJjdWFMSk43MUNJckRPUGM5Ywo0blpycFlMVXcvTFZGMTZocE1pczQ2eUJNeDJieDI5S3B5a1B1WHZyVFBkdzNweWxIaVVKL0JLa2hzUXBRK3RvCnUzWm1sMWZMRGVaNDB1a1R3cjBibXU3U1RiYXA5L0ZGWmF4UHBvZGhrODNUR24rbCtGckFldWNSVndJQTI5UnUKWGZSdlZoa0NnWUVBMzRSbk9GQjZpQytFOHJGaitHK1pqeVc5Qk10aDFwR0N0cDJJQ1ZTWnpOY3dha3FwamE4Qgp5NHhyekk3RGduZFhQWk0yd0I0clNQbFlwWXNNUjlheHBZRTI1U2VIQnIyaGVRZGQrY1ZMdFQyaHZuTUFQRXF5CnRWTWo2VkRLMlZSUkd2QWRXQUZiSjd0L2IybkdxcVdadW5zbEczTkszbnNQVzZJQmtJS3hEWmNDZ1lFQXdKSzYKVkFpblpydk1RWk9tNUhtbXBXa2FBSGE3eFhUYmFTdk5ueFEzSCtSaHZVWmxqRVZ0Z09zcDh0R1ord1pNM2JsVwpaai9SOXZRRWpCczdxRUY0VVQ3SThKNllCM243SzVQRkRzN1dZemVrK2dFWHBHWXFFeXFVVVVqVGNLcTJ2ellkCjY2cjRIM1NqQVBYbktDWGZpNzdUZW9rNXNuazdHdXE4QlA0ZUhmY0NnWUVBekkzMmpQSVNBVnBEdUh1aGV2WmYKT1VNWFJqRC9QQWYwOFQwZ0J6SDJneUdZZkY0UjU4bDJ3aHFqZVJSYVZxYnpIelgvMERpTDhuL0hvZENzRDM2cgpHMFV5d09xNHh2RjZ1akdFenBYQjRIOGo3QkNBOGF5RytpeTVXOGdGckhsZXRHRjA2VnBzV3VOY0Q5Rms4RDBYCmdETTgxVzlnNEZVTXpCWnFpaDhnKzhjQ2dZQUVQN2lJdmlBamJpVlZsUkpybkJ1SExzaDZGaVNTZUwrV2xIYlcKK2JVMXFPNVhKTVI4MGROV3N0bWNGKy9UMEJIR0dwN0Rac2tWTDlFaDNqLzB1RzBWTGROMUs2cWpENWZ4SURPSwozaGx3MnZ0eTRLOUsyMDQyV2d3bnR2bWpWTUR2ZXh3eDVQWFFpOXhFMnlnY2hLbG9CZS9ZbGtxRm01TW9SdUdiCklwZzdoUUtCZ1FESEdhQUxqZW4xellBbEYrYjRUZFFKWmtWRWQzd1BWdTd4WjdZVWE1S1I3YVQya0lWWUozVi8Kdmh5OVVIQ0xtMWtDclg2UVp0RlFYd2ZBS3NlaXpMZURReXRlN1R5aGxCanhQeFJYb2VBSDJJazY5eG1JWDRNQQpwVnBjV3FHczIwMUZHVXBmM0ZmVGNEeEtubVhtWE9PS2lrSzVGQlJjRDBCVC9DNUtSMjdqZEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-lb-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJUHJGaTNjWXRTWll3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05NVGt4TWpFd01UQTFOakF5V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFxQ05wbkt4NDRVU1BaZnZSM05KdkMyZ1BuR2djbFBHdApIUm1vcjFIVCs5R0NuUXN6UkhHVkJ4aVZXU2h6T3U0Z0EreGNiL3k5MGpKU21PNWdvL2NQelBPYngyOHVuWC9BCjc2U212SVBJblRpMVJmZFZsMzJnVzZvSFlZdE5WNVZLdDdkSm1sMG5qcnhsdFhyZ0ZJZm9aclRheXhrVnl2MnMKcjVlTlZBVUZIVzRCSEFNMHFLd29BSDBlT2Uxa0xGV0MrZkRPSlNtaDArVy9aMXgrNWRrK2p3aDlyait1TDdBRQpBZGRpVXp5Rk04TFkxbXF1Tkk1bGM3b3FkTXl6TGFha1ByTERPbWlSSWFrZUlyUGtoeU4xb3FtaUkveWZjd0VTCkkyR3lPdjRNTllnSTlzSzlSRHYzVFo2bjllaGEwdm1SeFQycXIzeVZDLzBtM1BmVGtSQTNzUUlEQVFBQm80R3IKTUlHb01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREFmQmdOVkhTTUVHREFXCmdCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREF6QmdOVkhSRUVMREFxZ2loaGNHa3VZMngxYzNSbGNpMHoKTkRObUxuTmhibVJpYjNneE5qWXpMbTl3Wlc1MGJHTXVZMjl0TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDTwoyMHA0cGFGdkJNcTdtSzJDRFBodDV6VVF1WHkyd09UUGpRUEhhamNTenRPQmZtaEloVEhiYkRuQU9BNlIxZzhnCjlkbEhIUVNmNlp5V2g1TERrVTR6TkQrTHhmTGkzeE1PbW9XcDlEMXJ3aWFBTHJTN3QxZXNYQ3pYaW9HQ2k1ZFEKZEpacXVFOFVZNTArVEgxSWFEZHVOd0VVVjBXbWczR3RmVncwNmlzQUNFZFltNzd3YnczVFE5dzFmbk02OTFieQpxRkZUNTZBSjRJa2UzZGFhYURNTXNQR1BMSEJVT3RmSnpXdFlsczVCZFMrUTlCMCtlSTNTMUFSZ3JES3IrVEZ1CmdlR3F6eXRnZGVsUTJndHB5Y0xFUk9SWG5GK21TMHRrNkhDcnU4K0MyM0JCUUV6ekpnd0xOay9KejdwbDhxUm0KaWN3VUlHTFdJQjhiR1pXekg5ckwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJYURDZ0kvZ1JPcnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05Namt4TWpBMk1UQTFOVFUzV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSnJ1T2ZnOStzbGIxMGV3SEZXMVVrdG14YVVZMzFyVwpTOXU1dlE3bUhjTE9odHNYUHlJaTlxRW1kMVF5K3dmZ0VHcFJuQ2hmM1JHSzVQMXRnNFl6N2ZJMWFKVmVpRitXCjBOWXRsVThNTG41RFcrZVZzSjd4cFZOdlZTcVUxQWpSU1FZakNFL3JtM2xiQXprZThFNUc1bGxCR2p2cVV1cmEKNWtobVptVUo5SjV3Y2w0YkhUVXpXNzM5UHNUVVBvdkxXWTNWQi8xYjd2U2taQmhvV084dVl1MUxCSUtUQnQwagoxdFp5d1FsS0xTQ0ZGVlR3T0xyUWs0bXhCWGpYclVMMUxWbEpjdDdwb1NQVW9uQzFqRVBRcHdYWFNJMWpvTFBYCm5pZ0Fja0ZrNm83cGZNTEVYZVArNEZqTm5yazduWGlDbGZMalE3YkY2dzNrSXptZDNBNmdZeU1DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJ3WgpIdGtpSG4yazgveHhyOUVUTGZ0VFV3RThNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJsS1NaQ09nUmh4SlI2CjBKRWt0OCs3RjJOV0pLVzM5VzVFelRNQThrT2Q5SVF0MVRrSzZxRGJYY3NWMGNwQzRhc1ptWXVOVGNjSmVGR00KK3B5YUxWek1OQ1VXcVBzK3FIdFBJbGN1SUFzVjVVRmdBWDJBT0N3TlNDZzU5cDRBZlRYVm5ZN1VjSTJNV2tzTwo1TXYzTkxMZkRPYXlVRGJPc2NxY3haVTk3SFhsUk9hdXFOMWdmODR1STRHZldiQUFJQnRGd0VIcGxueVBvYmpGCklRRjlMNTU5VXVYSTk0aEs5Q1RFWklDYXpsbEhmRmFpNkIraWVlRmdhWEE4bndDcE8xcGJOK3VUYkJKRGNORlAKVmxyOGVnRWZRMFUwK1JzVmZSU2hOcGM0RkxOeEt5bFdCN3k4ck9qRTh4dmZCajFUa2dEWVQ3UGJ1eFBVS1ducQpTL2JtaUIrMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerInternalLBServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuekNDQW9lZ0F3SUJBZ0lJS3JyUnZHRWdETUl3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05NVGt4TWpFd01UQTFOakF6V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Y010dnFra0hlUGU4MHlBODRMc1FoaStCNUxINngzVwo0RXhicW9JV2hpYXlBWGNoc3Z2eVhkNDRqVTRFN3BkV3MzOXl0Y08ybDMvZ05RYVdrckRrNkw1QVhaNWluWWJVCjlmeXhCWUYzbEFRam1jV0dyMktZVzBmS3doU3JickRiVHFOQlg1WnBQNDlTYjM3b3QvSUcxOWVNWkQ5THpDYVgKaWxkbEovdUU0NUZrZ1d0Q2pmNFIzNW5GNXZ4Y0YvYUYvV21qTTdtUERLbG5iRitoWEZTWHh6T1NVYzdVRlgvSApUdXUrcDZ2T0Y4Z3hJOWFmYVB3TnIxTEkramxmSVpUbExYdFF6RFZXdVNqb3hrWmhic3ZCcitmNmE0TWlpcnBICmg0aUZQMCtKQmpXOXhjS1JScnRjNzN1amZkR1ZncnpzWUQ1MXVkbTZpZjFHNkdxcFFiYTZCd0lEQVFBQm80R3YKTUlHc01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREFmQmdOVkhTTUVHREFXCmdCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREEzQmdOVkhSRUVNREF1Z2l4aGNHa3RhVzUwTG1Oc2RYTjAKWlhJdE16UXpaaTV6WVc1a1ltOTRNVFkyTXk1dmNHVnVkR3hqTG1OdmJUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBSHN1RWthZEFUdEUzdXhucGx3QXpld3FKMGtXeU1TVjJEdmZ3aUVuYzh5ZjA4MzhLZHJTWmpqK1ZIQnRnCjZFekdITnFWRnlaMFNVMUU4STQ1RlZSbk1FLzNQOUVXTDVRbkZJWjZacVdwOVJJTzEzcW9EQS93V2tqdTVBMEYKeUlkV1I3cGJOM2ZTb2VxYXFsUHBMYy9lS1VJalhGUmxqeDlZQmhsQm81Ym44UUtrZlBUSCsvejRTNjFQbjNxWQpvSm43RERDVVBWdktvdytFRHRMek9FZ3VqZjdIaVNQQXgyY1d1bGtGc0tndkhVU1VDRXFxbVRyT0lSVm12KzhKClRlbTVBbHJHK3d6aEl2UE9EZFhkWHdQaWxTTFRCNXM0ZGlSREZZU2pRWmFYR1lVbWkvVXordHBJbTZrTERJcjEKajNWYWc1cE4vSnY0TWpFNEsydmpTMFRjTkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlhRENnSS9nUk9yc3dEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05NVGt4TWpBNU1UQTFOVFUzV2hjTk1qa3hNakEyTVRBMU5UVTNXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFKcnVPZmc5K3NsYjEwZXdIRlcxVWt0bXhhVVkzMXJXClM5dTV2UTdtSGNMT2h0c1hQeUlpOXFFbWQxUXkrd2ZnRUdwUm5DaGYzUkdLNVAxdGc0WXo3ZkkxYUpWZWlGK1cKME5ZdGxVOE1MbjVEVytlVnNKN3hwVk52VlNxVTFBalJTUVlqQ0Uvcm0zbGJBemtlOEU1RzVsbEJHanZxVXVyYQo1a2htWm1VSjlKNXdjbDRiSFRVelc3MzlQc1RVUG92TFdZM1ZCLzFiN3ZTa1pCaG9XTzh1WXUxTEJJS1RCdDBqCjF0Wnl3UWxLTFNDRkZWVHdPTHJRazRteEJYalhyVUwxTFZsSmN0N3BvU1BVb25DMWpFUFFwd1hYU0kxam9MUFgKbmlnQWNrRms2bzdwZk1MRVhlUCs0RmpObnJrN25YaUNsZkxqUTdiRjZ3M2tJem1kM0E2Z1l5TUNBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQndaCkh0a2lIbjJrOC94eHI5RVRMZnRUVXdFOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmxLU1pDT2dSaHhKUjYKMEpFa3Q4KzdGMk5XSktXMzlXNUV6VE1BOGtPZDlJUXQxVGtLNnFEYlhjc1YwY3BDNGFzWm1ZdU5UY2NKZUZHTQorcHlhTFZ6TU5DVVdxUHMrcUh0UElsY3VJQXNWNVVGZ0FYMkFPQ3dOU0NnNTlwNEFmVFhWblk3VWNJMk1Xa3NPCjVNdjNOTExmRE9heVVEYk9zY3FjeFpVOTdIWGxST2F1cU4xZ2Y4NHVJNEdmV2JBQUlCdEZ3RUhwbG55UG9iakYKSVFGOUw1NTlVdVhJOTRoSzlDVEVaSUNhemxsSGZGYWk2QitpZWVGZ2FYQThud0NwTzFwYk4rdVRiQkpEY05GUApWbHI4ZWdFZlEwVTArUnNWZlJTaE5wYzRGTE54S3lsV0I3eThyT2pFOHh2ZkJqMVRrZ0RZVDdQYnV4UFVLV25xClMvYm1pQiswCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2NNdHZxa2tIZVBlODB5QTg0THNRaGkrQjVMSDZ4M1c0RXhicW9JV2hpYXlBWGNoCnN2dnlYZDQ0alU0RTdwZFdzMzl5dGNPMmwzL2dOUWFXa3JEazZMNUFYWjVpblliVTlmeXhCWUYzbEFRam1jV0cKcjJLWVcwZkt3aFNyYnJEYlRxTkJYNVpwUDQ5U2IzN290L0lHMTllTVpEOUx6Q2FYaWxkbEovdUU0NUZrZ1d0QwpqZjRSMzVuRjV2eGNGL2FGL1dtak03bVBES2xuYkYraFhGU1h4ek9TVWM3VUZYL0hUdXUrcDZ2T0Y4Z3hJOWFmCmFQd05yMUxJK2psZklaVGxMWHRRekRWV3VTam94a1poYnN2QnIrZjZhNE1paXJwSGg0aUZQMCtKQmpXOXhjS1IKUnJ0YzczdWpmZEdWZ3J6c1lENTF1ZG02aWYxRzZHcXBRYmE2QndJREFRQUJBb0lCQVFDZk4rQTJKTXp0MXRyVQp1RS9hU2dJVUNqclZCRk5OSzVidmR5OTMvQy9BQ3JvSkpEakgxK3FBSWVQOGtWalNLZi92dmRHbjlPdnNzQUt2CjcvcjVEV3o4cDZGQ2pLemlYdkpPTkZmT2UyV2tkb1kraktheEplYW1VMmNVZG1Hc3NwMXprQWxmSDd6YW9zNE4KbW81bTRQV29sWkhpcW5TQmpGRElPQ3FDWVZjQW00RTllZXZFa0xXOVV1YUY2WXFoRzVzaXk5Ni9aUGdWOEI4RwpWM2I3VVdpWWdpRUJFd05TQytlKzVwNWV6cWxPYUs0TnBEZkdkZXB1c1FrYURQekVjUm55bmw0TzZHM05ISzVhCkhiKzN4ZGUzRHN1UlRrMGVzMHJuY1RaWDVBdmdPMk53dmp4OWRLdXE4dXRXbnV4U2JvQlhQM3ExZzhwTzV0TDAKYkJJM0lkZ3BBb0dCQU9rM256d0dlNUVuODZBQm9YTm1qSGl2Q3lVRitqYVYyM3Q1STd5RGtPN2lNdWY3QjZmRwpwNmVsbVhrTUtsTEJSc2VVdWNwUGlXZ1hCMThMdWhhY2tFdmxMOTdBQW5jR3V2UDB4QkxyaGFrcEdSL0pMUkNYClJxa1ZFV0xNMENUcnprMzhSUkZ2L1B0MkNzUk56cnF3NkExdUJVNWEyMGZzZ1dxRUNya3BvMmdyQW9HQkFOU3cKMnlRYjgySGNiMGxaaWg2MHZhQVMrZ0hKc1h4K0g4TGdTY2hiNUlxWEdJZjdzQm9CaXlYM09SU3pGWHBFbTZRVgp0M0drK0VocERON2ZMUGdxaEp2WnlNMDJZcVVhOUxkYXNMVktKcUkxTzRCUEZ5SlZDSUxJTHVZTkhtY2NZOHdDCkExYVJuOWV2bkc3bDlRSHZubkp6Q055Qlgvd09HUkRhUUcxc2c4dVZBb0dCQUxkajdNeFgwSzFKZkZOVFZQRVoKTDlicTF0bXJSS0hOMzhUTmNxT1gxYzF6aEZKVlhTUzZtelhDaTlmYkVDRDVLVDVpSG1NUGZsNmkxVUlSUjZqbQpQclhmcUhBQ0R5NG4xYlZtd1JTYnJnUmlkQVpCdlRVeHIvZmZ3RWN3QlhFekdJek1sa2RyQjhWNWdtZnhRMklkCklLMEcyaGRPYk9hMi9PR1VxWllIUHg3M0FvR0FVMXcxcDROazhwZ0k3Z0N3QjdUakZWZ2FzSlN5Z1k2Vk9EWGIKOVRFKzg2cWdyTHRTbS82NjROaHlnTkJudkpJalJqNVV0YS9vdDhpa2lMMkR6SWd0alQvZ1diM1ZEOHp1Mk9ZcwptQUZGL3hGS0R0SHd5VDMycGZ0N2xpTFNKYXVVMmFKNFdIZWU1RlFweGJWUFA4RUFvdTYvTEYxd2wwT1hRMm1uCkVyd1RNN2tDZ1lBOEIzdDFuSDZaMnhoRFJmNjZEUHRkVloveTV2WFNvV2FHbVpFWndRWDFIaTVzMW5mM0pxN2cKcEZqYUpkRzZHRzdPNjhiSDd1alB3L04vUlFGZWhBK2N0cENhWERiaHR0Uy9LckhxU2FTSEJPaDBwS3hVVFI1UwpHM0N4bHllTUNGd0xqVjZvb0t3dTRnMnhOWVVFQjFmRDNRdUFQM2J4cStKNVB6N3duektYNlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-internal-lb-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2NNdHZxa2tIZVBlODB5QTg0THNRaGkrQjVMSDZ4M1c0RXhicW9JV2hpYXlBWGNoCnN2dnlYZDQ0alU0RTdwZFdzMzl5dGNPMmwzL2dOUWFXa3JEazZMNUFYWjVpblliVTlmeXhCWUYzbEFRam1jV0cKcjJLWVcwZkt3aFNyYnJEYlRxTkJYNVpwUDQ5U2IzN290L0lHMTllTVpEOUx6Q2FYaWxkbEovdUU0NUZrZ1d0QwpqZjRSMzVuRjV2eGNGL2FGL1dtak03bVBES2xuYkYraFhGU1h4ek9TVWM3VUZYL0hUdXUrcDZ2T0Y4Z3hJOWFmCmFQd05yMUxJK2psZklaVGxMWHRRekRWV3VTam94a1poYnN2QnIrZjZhNE1paXJwSGg0aUZQMCtKQmpXOXhjS1IKUnJ0YzczdWpmZEdWZ3J6c1lENTF1ZG02aWYxRzZHcXBRYmE2QndJREFRQUJBb0lCQVFDZk4rQTJKTXp0MXRyVQp1RS9hU2dJVUNqclZCRk5OSzVidmR5OTMvQy9BQ3JvSkpEakgxK3FBSWVQOGtWalNLZi92dmRHbjlPdnNzQUt2CjcvcjVEV3o4cDZGQ2pLemlYdkpPTkZmT2UyV2tkb1kraktheEplYW1VMmNVZG1Hc3NwMXprQWxmSDd6YW9zNE4KbW81bTRQV29sWkhpcW5TQmpGRElPQ3FDWVZjQW00RTllZXZFa0xXOVV1YUY2WXFoRzVzaXk5Ni9aUGdWOEI4RwpWM2I3VVdpWWdpRUJFd05TQytlKzVwNWV6cWxPYUs0TnBEZkdkZXB1c1FrYURQekVjUm55bmw0TzZHM05ISzVhCkhiKzN4ZGUzRHN1UlRrMGVzMHJuY1RaWDVBdmdPMk53dmp4OWRLdXE4dXRXbnV4U2JvQlhQM3ExZzhwTzV0TDAKYkJJM0lkZ3BBb0dCQU9rM256d0dlNUVuODZBQm9YTm1qSGl2Q3lVRitqYVYyM3Q1STd5RGtPN2lNdWY3QjZmRwpwNmVsbVhrTUtsTEJSc2VVdWNwUGlXZ1hCMThMdWhhY2tFdmxMOTdBQW5jR3V2UDB4QkxyaGFrcEdSL0pMUkNYClJxa1ZFV0xNMENUcnprMzhSUkZ2L1B0MkNzUk56cnF3NkExdUJVNWEyMGZzZ1dxRUNya3BvMmdyQW9HQkFOU3cKMnlRYjgySGNiMGxaaWg2MHZhQVMrZ0hKc1h4K0g4TGdTY2hiNUlxWEdJZjdzQm9CaXlYM09SU3pGWHBFbTZRVgp0M0drK0VocERON2ZMUGdxaEp2WnlNMDJZcVVhOUxkYXNMVktKcUkxTzRCUEZ5SlZDSUxJTHVZTkhtY2NZOHdDCkExYVJuOWV2bkc3bDlRSHZubkp6Q055Qlgvd09HUkRhUUcxc2c4dVZBb0dCQUxkajdNeFgwSzFKZkZOVFZQRVoKTDlicTF0bXJSS0hOMzhUTmNxT1gxYzF6aEZKVlhTUzZtelhDaTlmYkVDRDVLVDVpSG1NUGZsNmkxVUlSUjZqbQpQclhmcUhBQ0R5NG4xYlZtd1JTYnJnUmlkQVpCdlRVeHIvZmZ3RWN3QlhFekdJek1sa2RyQjhWNWdtZnhRMklkCklLMEcyaGRPYk9hMi9PR1VxWllIUHg3M0FvR0FVMXcxcDROazhwZ0k3Z0N3QjdUakZWZ2FzSlN5Z1k2Vk9EWGIKOVRFKzg2cWdyTHRTbS82NjROaHlnTkJudkpJalJqNVV0YS9vdDhpa2lMMkR6SWd0alQvZ1diM1ZEOHp1Mk9ZcwptQUZGL3hGS0R0SHd5VDMycGZ0N2xpTFNKYXVVMmFKNFdIZWU1RlFweGJWUFA4RUFvdTYvTEYxd2wwT1hRMm1uCkVyd1RNN2tDZ1lBOEIzdDFuSDZaMnhoRFJmNjZEUHRkVloveTV2WFNvV2FHbVpFWndRWDFIaTVzMW5mM0pxN2cKcEZqYUpkRzZHRzdPNjhiSDd1alB3L04vUlFGZWhBK2N0cENhWERiaHR0Uy9LckhxU2FTSEJPaDBwS3hVVFI1UwpHM0N4bHllTUNGd0xqVjZvb0t3dTRnMnhOWVVFQjFmRDNRdUFQM2J4cStKNVB6N3duektYNlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-internal-lb-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURuekNDQW9lZ0F3SUJBZ0lJS3JyUnZHRWdETUl3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05NVGt4TWpFd01UQTFOakF6V2pBMk1SUXdFZ1lEVlFRS0V3dHJkV0psCkxXMWhjM1JsY2pFZU1Cd0dBMVVFQXhNVmMzbHpkR1Z0T210MVltVXRZWEJwYzJWeWRtVnlNSUlCSWpBTkJna3EKaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUF3Y010dnFra0hlUGU4MHlBODRMc1FoaStCNUxINngzVwo0RXhicW9JV2hpYXlBWGNoc3Z2eVhkNDRqVTRFN3BkV3MzOXl0Y08ybDMvZ05RYVdrckRrNkw1QVhaNWluWWJVCjlmeXhCWUYzbEFRam1jV0dyMktZVzBmS3doU3JickRiVHFOQlg1WnBQNDlTYjM3b3QvSUcxOWVNWkQ5THpDYVgKaWxkbEovdUU0NUZrZ1d0Q2pmNFIzNW5GNXZ4Y0YvYUYvV21qTTdtUERLbG5iRitoWEZTWHh6T1NVYzdVRlgvSApUdXUrcDZ2T0Y4Z3hJOWFmYVB3TnIxTEkramxmSVpUbExYdFF6RFZXdVNqb3hrWmhic3ZCcitmNmE0TWlpcnBICmg0aUZQMCtKQmpXOXhjS1JScnRjNzN1amZkR1ZncnpzWUQ1MXVkbTZpZjFHNkdxcFFiYTZCd0lEQVFBQm80R3YKTUlHc01BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQgpBZjhFQWpBQU1CMEdBMVVkRGdRV0JCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREFmQmdOVkhTTUVHREFXCmdCUWNHUjdaSWg1OXBQUDhjYS9SRXkzN1UxTUJQREEzQmdOVkhSRUVNREF1Z2l4aGNHa3RhVzUwTG1Oc2RYTjAKWlhJdE16UXpaaTV6WVc1a1ltOTRNVFkyTXk1dmNHVnVkR3hqTG1OdmJUQU5CZ2txaGtpRzl3MEJBUXNGQUFPQwpBUUVBSHN1RWthZEFUdEUzdXhucGx3QXpld3FKMGtXeU1TVjJEdmZ3aUVuYzh5ZjA4MzhLZHJTWmpqK1ZIQnRnCjZFekdITnFWRnlaMFNVMUU4STQ1RlZSbk1FLzNQOUVXTDVRbkZJWjZacVdwOVJJTzEzcW9EQS93V2tqdTVBMEYKeUlkV1I3cGJOM2ZTb2VxYXFsUHBMYy9lS1VJalhGUmxqeDlZQmhsQm81Ym44UUtrZlBUSCsvejRTNjFQbjNxWQpvSm43RERDVVBWdktvdytFRHRMek9FZ3VqZjdIaVNQQXgyY1d1bGtGc0tndkhVU1VDRXFxbVRyT0lSVm12KzhKClRlbTVBbHJHK3d6aEl2UE9EZFhkWHdQaWxTTFRCNXM0ZGlSREZZU2pRWmFYR1lVbWkvVXordHBJbTZrTERJcjEKajNWYWc1cE4vSnY0TWpFNEsydmpTMFRjTkE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlhRENnSS9nUk9yc3dEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05NVGt4TWpBNU1UQTFOVFUzV2hjTk1qa3hNakEyTVRBMU5UVTNXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFKcnVPZmc5K3NsYjEwZXdIRlcxVWt0bXhhVVkzMXJXClM5dTV2UTdtSGNMT2h0c1hQeUlpOXFFbWQxUXkrd2ZnRUdwUm5DaGYzUkdLNVAxdGc0WXo3ZkkxYUpWZWlGK1cKME5ZdGxVOE1MbjVEVytlVnNKN3hwVk52VlNxVTFBalJTUVlqQ0Uvcm0zbGJBemtlOEU1RzVsbEJHanZxVXVyYQo1a2htWm1VSjlKNXdjbDRiSFRVelc3MzlQc1RVUG92TFdZM1ZCLzFiN3ZTa1pCaG9XTzh1WXUxTEJJS1RCdDBqCjF0Wnl3UWxLTFNDRkZWVHdPTHJRazRteEJYalhyVUwxTFZsSmN0N3BvU1BVb25DMWpFUFFwd1hYU0kxam9MUFgKbmlnQWNrRms2bzdwZk1MRVhlUCs0RmpObnJrN25YaUNsZkxqUTdiRjZ3M2tJem1kM0E2Z1l5TUNBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQndaCkh0a2lIbjJrOC94eHI5RVRMZnRUVXdFOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmxLU1pDT2dSaHhKUjYKMEpFa3Q4KzdGMk5XSktXMzlXNUV6VE1BOGtPZDlJUXQxVGtLNnFEYlhjc1YwY3BDNGFzWm1ZdU5UY2NKZUZHTQorcHlhTFZ6TU5DVVdxUHMrcUh0UElsY3VJQXNWNVVGZ0FYMkFPQ3dOU0NnNTlwNEFmVFhWblk3VWNJMk1Xa3NPCjVNdjNOTExmRE9heVVEYk9zY3FjeFpVOTdIWGxST2F1cU4xZ2Y4NHVJNEdmV2JBQUlCdEZ3RUhwbG55UG9iakYKSVFGOUw1NTlVdVhJOTRoSzlDVEVaSUNhemxsSGZGYWk2QitpZWVGZ2FYQThud0NwTzFwYk4rdVRiQkpEY05GUApWbHI4ZWdFZlEwVTArUnNWZlJTaE5wYzRGTE54S3lsV0I3eThyT2pFOHh2ZkJqMVRrZ0RZVDdQYnV4UFVLV25xClMvYm1pQiswCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerLBCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJYURDZ0kvZ1JPcnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05Namt4TWpBMk1UQTFOVFUzV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSnJ1T2ZnOStzbGIxMGV3SEZXMVVrdG14YVVZMzFyVwpTOXU1dlE3bUhjTE9odHNYUHlJaTlxRW1kMVF5K3dmZ0VHcFJuQ2hmM1JHSzVQMXRnNFl6N2ZJMWFKVmVpRitXCjBOWXRsVThNTG41RFcrZVZzSjd4cFZOdlZTcVUxQWpSU1FZakNFL3JtM2xiQXprZThFNUc1bGxCR2p2cVV1cmEKNWtobVptVUo5SjV3Y2w0YkhUVXpXNzM5UHNUVVBvdkxXWTNWQi8xYjd2U2taQmhvV084dVl1MUxCSUtUQnQwagoxdFp5d1FsS0xTQ0ZGVlR3T0xyUWs0bXhCWGpYclVMMUxWbEpjdDdwb1NQVW9uQzFqRVBRcHdYWFNJMWpvTFBYCm5pZ0Fja0ZrNm83cGZNTEVYZVArNEZqTm5yazduWGlDbGZMalE3YkY2dzNrSXptZDNBNmdZeU1DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJ3WgpIdGtpSG4yazgveHhyOUVUTGZ0VFV3RThNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJsS1NaQ09nUmh4SlI2CjBKRWt0OCs3RjJOV0pLVzM5VzVFelRNQThrT2Q5SVF0MVRrSzZxRGJYY3NWMGNwQzRhc1ptWXVOVGNjSmVGR00KK3B5YUxWek1OQ1VXcVBzK3FIdFBJbGN1SUFzVjVVRmdBWDJBT0N3TlNDZzU5cDRBZlRYVm5ZN1VjSTJNV2tzTwo1TXYzTkxMZkRPYXlVRGJPc2NxY3haVTk3SFhsUk9hdXFOMWdmODR1STRHZldiQUFJQnRGd0VIcGxueVBvYmpGCklRRjlMNTU5VXVYSTk0aEs5Q1RFWklDYXpsbEhmRmFpNkIraWVlRmdhWEE4bndDcE8xcGJOK3VUYkJKRGNORlAKVmxyOGVnRWZRMFUwK1JzVmZSU2hOcGM0RkxOeEt5bFdCN3k4ck9qRTh4dmZCajFUa2dEWVQ3UGJ1eFBVS1ducQpTL2JtaUIrMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-lb-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJYURDZ0kvZ1JPcnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05Namt4TWpBMk1UQTFOVFUzV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSnJ1T2ZnOStzbGIxMGV3SEZXMVVrdG14YVVZMzFyVwpTOXU1dlE3bUhjTE9odHNYUHlJaTlxRW1kMVF5K3dmZ0VHcFJuQ2hmM1JHSzVQMXRnNFl6N2ZJMWFKVmVpRitXCjBOWXRsVThNTG41RFcrZVZzSjd4cFZOdlZTcVUxQWpSU1FZakNFL3JtM2xiQXprZThFNUc1bGxCR2p2cVV1cmEKNWtobVptVUo5SjV3Y2w0YkhUVXpXNzM5UHNUVVBvdkxXWTNWQi8xYjd2U2taQmhvV084dVl1MUxCSUtUQnQwagoxdFp5d1FsS0xTQ0ZGVlR3T0xyUWs0bXhCWGpYclVMMUxWbEpjdDdwb1NQVW9uQzFqRVBRcHdYWFNJMWpvTFBYCm5pZ0Fja0ZrNm83cGZNTEVYZVArNEZqTm5yazduWGlDbGZMalE3YkY2dzNrSXptZDNBNmdZeU1DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJ3WgpIdGtpSG4yazgveHhyOUVUTGZ0VFV3RThNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJsS1NaQ09nUmh4SlI2CjBKRWt0OCs3RjJOV0pLVzM5VzVFelRNQThrT2Q5SVF0MVRrSzZxRGJYY3NWMGNwQzRhc1ptWXVOVGNjSmVGR00KK3B5YUxWek1OQ1VXcVBzK3FIdFBJbGN1SUFzVjVVRmdBWDJBT0N3TlNDZzU5cDRBZlRYVm5ZN1VjSTJNV2tzTwo1TXYzTkxMZkRPYXlVRGJPc2NxY3haVTk3SFhsUk9hdXFOMWdmODR1STRHZldiQUFJQnRGd0VIcGxueVBvYmpGCklRRjlMNTU5VXVYSTk0aEs5Q1RFWklDYXpsbEhmRmFpNkIraWVlRmdhWEE4bndDcE8xcGJOK3VUYkJKRGNORlAKVmxyOGVnRWZRMFUwK1JzVmZSU2hOcGM0RkxOeEt5bFdCN3k4ck9qRTh4dmZCajFUa2dEWVQ3UGJ1eFBVS1ducQpTL2JtaUIrMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerLBSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJYURDZ0kvZ1JPcnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05Namt4TWpBMk1UQTFOVFUzV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSnJ1T2ZnOStzbGIxMGV3SEZXMVVrdG14YVVZMzFyVwpTOXU1dlE3bUhjTE9odHNYUHlJaTlxRW1kMVF5K3dmZ0VHcFJuQ2hmM1JHSzVQMXRnNFl6N2ZJMWFKVmVpRitXCjBOWXRsVThNTG41RFcrZVZzSjd4cFZOdlZTcVUxQWpSU1FZakNFL3JtM2xiQXprZThFNUc1bGxCR2p2cVV1cmEKNWtobVptVUo5SjV3Y2w0YkhUVXpXNzM5UHNUVVBvdkxXWTNWQi8xYjd2U2taQmhvV084dVl1MUxCSUtUQnQwagoxdFp5d1FsS0xTQ0ZGVlR3T0xyUWs0bXhCWGpYclVMMUxWbEpjdDdwb1NQVW9uQzFqRVBRcHdYWFNJMWpvTFBYCm5pZ0Fja0ZrNm83cGZNTEVYZVArNEZqTm5yazduWGlDbGZMalE3YkY2dzNrSXptZDNBNmdZeU1DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJ3WgpIdGtpSG4yazgveHhyOUVUTGZ0VFV3RThNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJsS1NaQ09nUmh4SlI2CjBKRWt0OCs3RjJOV0pLVzM5VzVFelRNQThrT2Q5SVF0MVRrSzZxRGJYY3NWMGNwQzRhc1ptWXVOVGNjSmVGR00KK3B5YUxWek1OQ1VXcVBzK3FIdFBJbGN1SUFzVjVVRmdBWDJBT0N3TlNDZzU5cDRBZlRYVm5ZN1VjSTJNV2tzTwo1TXYzTkxMZkRPYXlVRGJPc2NxY3haVTk3SFhsUk9hdXFOMWdmODR1STRHZldiQUFJQnRGd0VIcGxueVBvYmpGCklRRjlMNTU5VXVYSTk0aEs5Q1RFWklDYXpsbEhmRmFpNkIraWVlRmdhWEE4bndDcE8xcGJOK3VUYkJKRGNORlAKVmxyOGVnRWZRMFUwK1JzVmZSU2hOcGM0RkxOeEt5bFdCN3k4ck9qRTh4dmZCajFUa2dEWVQ3UGJ1eFBVS1ducQpTL2JtaUIrMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbXU0NStEMzZ5VnZYUjdBY1ZiVlNTMmJGcFJqZld0WkwyN205RHVZZHdzNkcyeGMvCklpTDJvU1ozVkRMN0IrQVFhbEdjS0YvZEVZcmsvVzJEaGpQdDhqVm9sVjZJWDViUTFpMlZUd3d1ZmtOYjU1V3cKbnZHbFUyOVZLcFRVQ05GSkJpTUlUK3ViZVZzRE9SN3dUa2JtV1VFYU8rcFM2dHJtU0dabVpRbjBubkJ5WGhzZApOVE5idmYwK3hOUStpOHRaamRVSC9WdnU5S1JrR0doWTd5NWk3VXNFZ3BNRzNTUFcxbkxCQ1VvdElJVVZWUEE0CnV0Q1RpYkVGZU5ldFF2VXRXVWx5M3VtaEk5U2ljTFdNUTlDbkJkZElqV09nczllZUtBQnlRV1RxanVsOHdzUmQKNC83Z1dNMmV1VHVkZUlLVjh1TkR0c1hyRGVRak9aM2NEcUJqSXdJREFRQUJBb0lCQUJnWjVSU3o5NVpwWGhUOQoxWHFUeVdpSFpVbW9rOTVhcGRSWmtZcUd5NnhwV2xzc3c1cDQyK3IzdytwcVA5amF4MUx5dlJzZXhwSWJERUpNClRnQ0xoWUYvUTNTeER2L253emIrUWxMWXIwYmZEYVg2Q0U3QmdwbDNJVVdOZjJxYnZBTmpZY0NsQXp1ZXArS3oKNkdnVTZYS0xDUnkyK0EwbTNsbjI3QWpkd3ByKzN5VDFWejhZc0lpN1VxTWxaenZTZnNLY1dWSzJCVkhCTnBRNgovTW52SEZQMmdKVWZGdlpReWxjdW4yaHdZSklBS3MyYTkxWjZPMDVkZWVFSVJ0dXpDaHcxM1d6Y3NvSUJENmV3CmtXc0FoSkgxeFluTFZKa0d5MEtqRXpJSWxsYnZ6dUVSd1FjRVhhd2tNT0lQYit4ZmRVVHl0cVNZd3BVY25jaHQKY0Q0ZjdORUNnWUVBeUxibXVLMDk3QmVyaUFpQ0VuQzJrZWJkblJEcmlzeS9sS3plR0x0Ung0aDNUVmNIQndLTgpJWXVOeWNjT3dsZEpmZGNkUmc2RTFxclNYd3p2SlMzVkttampDZnhJampMakY0SUJLTDE5elFIaXlKYlJ3Ukg5Cm0rSXZRdkJUM1ZWd2F3MHFuOWRwOGFIZzlERlFDNUp0WnN3djAvOWYraWRmaFRVZU9Hb1BzMXNDZ1lFQXhacncKU2MxOXEwYXozR091TVRLUTc1bWhVT0gxbWRLQlZ2ck9NdXZTbTBRMmd0TVE5T1ZFVGYxQkRraUtTZHRlZVpjOQowYXE1aHBFb25ubFFOd2JqMmhRSVFVc0k4anJhcG85aFVpOHF6N1ZOQnNRenBsSkt6Qis5emNrTW4zUTZPUHdyCmV2d3pMNGxuSVBIdGxFT1BHcG5JTm9IYVVxN3huN2xXZDI4NkFka0NnWUJyTFJkSVYrR3YxdmZXUE16UDhmWGIKTk03emx0eGZrbk5lZld4ZkFtOXB2NW9NNTBLdVlKTmg3VFg2SDl2bXRGdGU0ZVlVeVozdlR1bmtyWEJwaHU3RApwWnhPY2JPQWt2V21VTm96bWZPNTY1N2dnNEJmdXk2VDlaUk5CeTJSQzVWcTVHMzFTajZkTTFaK3JuSlNxNDdWCmpJU2hqRVVBdTlPS3V0RjNTRk0zN3dLQmdDdVFMTWtZZEV2K0drakw4T3NIcXN3bm9saWlkL0toWmNJM0tKNHgKUHd6YnpPaXFmMko5Nk1FSXcvN1NIeXFKSWhyTUxPUzhMb3BzRmZoWjVrVTdUNkFVS24yNmZRNXB5eXBORWJkOApqb09jQkk4cFVmbW95clNWaXRLRE1EVTIrbDcxdU9BMEdWU3hoZnJOV3dNRW9kZkxiMGdVK0h5aDlNS3hxVTVMClJ3NkJBb0dBRlFHUGxzNzFLdnVFSGhzU1JkT1ZiNUczV3Bkam5oSEk5MWdYN3AxbzQ0T2lpT00reFYxTFU4NEgKT3ZDamh0SnR4MURnL0ZVTFZicjcwWko0MUlJRng2RFBURDIydmpsK3RUdHN4cjcybzZ5T0Z4TTNQeEEyVTB4YgpweWhVWW5uTkVYQkNOLzBnZ2x4RWhBZ3VvWCsxNm9Id0pBL1lYTXhnV1NoR0Q3Wmx5OWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-lb-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbXU0NStEMzZ5VnZYUjdBY1ZiVlNTMmJGcFJqZld0WkwyN205RHVZZHdzNkcyeGMvCklpTDJvU1ozVkRMN0IrQVFhbEdjS0YvZEVZcmsvVzJEaGpQdDhqVm9sVjZJWDViUTFpMlZUd3d1ZmtOYjU1V3cKbnZHbFUyOVZLcFRVQ05GSkJpTUlUK3ViZVZzRE9SN3dUa2JtV1VFYU8rcFM2dHJtU0dabVpRbjBubkJ5WGhzZApOVE5idmYwK3hOUStpOHRaamRVSC9WdnU5S1JrR0doWTd5NWk3VXNFZ3BNRzNTUFcxbkxCQ1VvdElJVVZWUEE0CnV0Q1RpYkVGZU5ldFF2VXRXVWx5M3VtaEk5U2ljTFdNUTlDbkJkZElqV09nczllZUtBQnlRV1RxanVsOHdzUmQKNC83Z1dNMmV1VHVkZUlLVjh1TkR0c1hyRGVRak9aM2NEcUJqSXdJREFRQUJBb0lCQUJnWjVSU3o5NVpwWGhUOQoxWHFUeVdpSFpVbW9rOTVhcGRSWmtZcUd5NnhwV2xzc3c1cDQyK3IzdytwcVA5amF4MUx5dlJzZXhwSWJERUpNClRnQ0xoWUYvUTNTeER2L253emIrUWxMWXIwYmZEYVg2Q0U3QmdwbDNJVVdOZjJxYnZBTmpZY0NsQXp1ZXArS3oKNkdnVTZYS0xDUnkyK0EwbTNsbjI3QWpkd3ByKzN5VDFWejhZc0lpN1VxTWxaenZTZnNLY1dWSzJCVkhCTnBRNgovTW52SEZQMmdKVWZGdlpReWxjdW4yaHdZSklBS3MyYTkxWjZPMDVkZWVFSVJ0dXpDaHcxM1d6Y3NvSUJENmV3CmtXc0FoSkgxeFluTFZKa0d5MEtqRXpJSWxsYnZ6dUVSd1FjRVhhd2tNT0lQYit4ZmRVVHl0cVNZd3BVY25jaHQKY0Q0ZjdORUNnWUVBeUxibXVLMDk3QmVyaUFpQ0VuQzJrZWJkblJEcmlzeS9sS3plR0x0Ung0aDNUVmNIQndLTgpJWXVOeWNjT3dsZEpmZGNkUmc2RTFxclNYd3p2SlMzVkttampDZnhJampMakY0SUJLTDE5elFIaXlKYlJ3Ukg5Cm0rSXZRdkJUM1ZWd2F3MHFuOWRwOGFIZzlERlFDNUp0WnN3djAvOWYraWRmaFRVZU9Hb1BzMXNDZ1lFQXhacncKU2MxOXEwYXozR091TVRLUTc1bWhVT0gxbWRLQlZ2ck9NdXZTbTBRMmd0TVE5T1ZFVGYxQkRraUtTZHRlZVpjOQowYXE1aHBFb25ubFFOd2JqMmhRSVFVc0k4anJhcG85aFVpOHF6N1ZOQnNRenBsSkt6Qis5emNrTW4zUTZPUHdyCmV2d3pMNGxuSVBIdGxFT1BHcG5JTm9IYVVxN3huN2xXZDI4NkFka0NnWUJyTFJkSVYrR3YxdmZXUE16UDhmWGIKTk03emx0eGZrbk5lZld4ZkFtOXB2NW9NNTBLdVlKTmg3VFg2SDl2bXRGdGU0ZVlVeVozdlR1bmtyWEJwaHU3RApwWnhPY2JPQWt2V21VTm96bWZPNTY1N2dnNEJmdXk2VDlaUk5CeTJSQzVWcTVHMzFTajZkTTFaK3JuSlNxNDdWCmpJU2hqRVVBdTlPS3V0RjNTRk0zN3dLQmdDdVFMTWtZZEV2K0drakw4T3NIcXN3bm9saWlkL0toWmNJM0tKNHgKUHd6YnpPaXFmMko5Nk1FSXcvN1NIeXFKSWhyTUxPUzhMb3BzRmZoWjVrVTdUNkFVS24yNmZRNXB5eXBORWJkOApqb09jQkk4cFVmbW95clNWaXRLRE1EVTIrbDcxdU9BMEdWU3hoZnJOV3dNRW9kZkxiMGdVK0h5aDlNS3hxVTVMClJ3NkJBb0dBRlFHUGxzNzFLdnVFSGhzU1JkT1ZiNUczV3Bkam5oSEk5MWdYN3AxbzQ0T2lpT00reFYxTFU4NEgKT3ZDamh0SnR4MURnL0ZVTFZicjcwWko0MUlJRng2RFBURDIydmpsK3RUdHN4cjcybzZ5T0Z4TTNQeEEyVTB4YgpweWhVWW5uTkVYQkNOLzBnZ2x4RWhBZ3VvWCsxNm9Id0pBL1lYTXhnV1NoR0Q3Wmx5OWM9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-lb-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNakNDQWhxZ0F3SUJBZ0lJYURDZ0kvZ1JPcnN3RFFZSktvWklodmNOQVFFTEJRQXdOekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TRXdId1lEVlFRREV4aHJkV0psTFdGd2FYTmxjblpsY2kxc1lpMXphV2R1WlhJdwpIaGNOTVRreE1qQTVNVEExTlRVM1doY05Namt4TWpBMk1UQTFOVFUzV2pBM01SSXdFQVlEVlFRTEV3bHZjR1Z1CmMyaHBablF4SVRBZkJnTlZCQU1UR0d0MVltVXRZWEJwYzJWeWRtVnlMV3hpTFhOcFoyNWxjakNDQVNJd0RRWUoKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBSnJ1T2ZnOStzbGIxMGV3SEZXMVVrdG14YVVZMzFyVwpTOXU1dlE3bUhjTE9odHNYUHlJaTlxRW1kMVF5K3dmZ0VHcFJuQ2hmM1JHSzVQMXRnNFl6N2ZJMWFKVmVpRitXCjBOWXRsVThNTG41RFcrZVZzSjd4cFZOdlZTcVUxQWpSU1FZakNFL3JtM2xiQXprZThFNUc1bGxCR2p2cVV1cmEKNWtobVptVUo5SjV3Y2w0YkhUVXpXNzM5UHNUVVBvdkxXWTNWQi8xYjd2U2taQmhvV084dVl1MUxCSUtUQnQwagoxdFp5d1FsS0xTQ0ZGVlR3T0xyUWs0bXhCWGpYclVMMUxWbEpjdDdwb1NQVW9uQzFqRVBRcHdYWFNJMWpvTFBYCm5pZ0Fja0ZrNm83cGZNTEVYZVArNEZqTm5yazduWGlDbGZMalE3YkY2dzNrSXptZDNBNmdZeU1DQXdFQUFhTkMKTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3SFFZRFZSME9CQllFRkJ3WgpIdGtpSG4yazgveHhyOUVUTGZ0VFV3RThNQTBHQ1NxR1NJYjNEUUVCQ3dVQUE0SUJBUUJsS1NaQ09nUmh4SlI2CjBKRWt0OCs3RjJOV0pLVzM5VzVFelRNQThrT2Q5SVF0MVRrSzZxRGJYY3NWMGNwQzRhc1ptWXVOVGNjSmVGR00KK3B5YUxWek1OQ1VXcVBzK3FIdFBJbGN1SUFzVjVVRmdBWDJBT0N3TlNDZzU5cDRBZlRYVm5ZN1VjSTJNV2tzTwo1TXYzTkxMZkRPYXlVRGJPc2NxY3haVTk3SFhsUk9hdXFOMWdmODR1STRHZldiQUFJQnRGd0VIcGxueVBvYmpGCklRRjlMNTU5VXVYSTk0aEs5Q1RFWklDYXpsbEhmRmFpNkIraWVlRmdhWEE4bndDcE8xcGJOK3VUYkJKRGNORlAKVmxyOGVnRWZRMFUwK1JzVmZSU2hOcGM0RkxOeEt5bFdCN3k4ck9qRTh4dmZCajFUa2dEWVQ3UGJ1eFBVS1ducQpTL2JtaUIrMAotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerLocalhostCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-localhost-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerLocalhostServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJZXZQVnk2eHJUeHN3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERURTVNVEl4TURFd05UWXdNMW93TmpFVU1CSUdBMVVFCkNoTUxhM1ZpWlMxdFlYTjBaWEl4SGpBY0JnTlZCQU1URlhONWMzUmxiVHByZFdKbExXRndhWE5sY25abGNqQ0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMaVFTU3QycDhsR3IzQ05HZ2dORkJlQwp5VWhCeXc4SGVTMS91S0Z0di9zbVB4bjNseUJCRmgyT1oyRmg3T2NhdHBPRFp0RkgrS2ZYSUlRQWVYWmtXREF1CjJKZ3JXZ1lselh2NXJNemZ4Um5DN3RKWE1qRy9rbWFoZ1U0bFdDUG1LME1jMjFBWXEvVWtXRE96b1JQWDRzNXUKNkxMQnNIazBoV0d5blBIQkMvVFRoV0R6Q1VZS2lEWEJqakRaNjMzdmZOOWo3aGNWUkEzbExxMk5odm1ReXFWOQo1N3p3U2o1RFFnQmlKNW5DNWMxbjl0QnJSK0ZaUDh5UnNhUGZ0Ni8rejNFK3NQd1VsUnNHVDg2ZEI1RzBGRlpvClplSlQrWFFiczBZSHJNMkFkdTRaUnRZVHJtWXg0d2Q1aElxM0ozcCsxUDRrMDZyZHB1UFlRWWhtMjVoWlpMc0MKQXdFQUFhT0JwRENCb1RBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFdwpEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVFya21PMEY3NVVYdFVWemYvb2czcjR5SzNQZ3dId1lEClZSMGpCQmd3Rm9BVVFya21PMEY3NVVYdFVWemYvb2czcjR5SzNQZ3dMQVlEVlIwUkJDVXdJNElKYkc5allXeG8KYjNOMGh3Ui9BQUFCaHhBQUFBQUFBQUFBQUFBQUFBQUFBQUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWgoxQ2RmekZsZUlENmVyclRQNnlYN1Bjak9xNWs4T3h4aGJRK0J1M1ZRemJLdkhmcUJLcVhDSHE0VWphcm5URDJtClVDdnAyVWxFczNBRkZBWEU0ajBZcEhsOTRpeitVYm15L2daK2c3ZFBTcDBkYkp0VmFzdTZJaVZNYmwxbFE5ekEKZ2pQOGxWcEVvakVLUk5TemJ3T2hnQ0lvcjdicllxamxWOXRvUVFxNThtNTl0d1ZBV0JYMytoUzNmTzlrV2k2eQo2eHhGMGJWYkFoQzVaZnBNclJaMlZVNzh5OVc4TlJ3YjNBcERxa08zZGhMUkxTNE91VjdhQmpHeDFoMW5TM3kzCnRoM0RYY1pzV3c4ZTdMc0Rvc1JYZXRJZ0VKcXlzVExVT0dqblZkTS93dHdhcHdHaGxZVkxCN1Nleks1OWtZaTcKTVFyR2JaaGR4UENMcGtRbWN3N1MKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUpCSkszYW55VWF2Y0kwYUNBMFVGNExKU0VITER3ZDVMWCs0b1cyLyt5WS9HZmVYCklFRVdIWTVuWVdIczV4cTJrNE5tMFVmNHA5Y2doQUI1ZG1SWU1DN1ltQ3RhQmlYTmUvbXN6Ti9GR2NMdTBsY3kKTWIrU1pxR0JUaVZZSStZclF4emJVQmlyOVNSWU03T2hFOWZpem03b3NzR3dlVFNGWWJLYzhjRUw5Tk9GWVBNSgpSZ3FJTmNHT01ObnJmZTk4MzJQdUZ4VkVEZVV1clkyRytaREtwWDNudlBCS1BrTkNBR0lubWNMbHpXZjIwR3RICjRWay96Skd4bzkrM3IvN1BjVDZ3L0JTVkd3WlB6cDBIa2JRVVZtaGw0bFA1ZEJ1elJnZXN6WUIyN2hsRzFoT3UKWmpIakIzbUVpcmNuZW43VS9pVFRxdDJtNDloQmlHYmJtRmxrdXdJREFRQUJBb0lCQVFDWWcvdERKSG1BMVoyeQp4NWRrWWRKaG4xMVFEYmFNZytONld0b3E1RFBLaWcrSkdOWFUvSlFXOW8rdHBLdU5Tc0RuWTZXNmVkd2NicVRiCkVEMVBQWnEycm0ra1IrYkx2Nzl2bktKVVp2Sk0ySTVjV1Z3TVNqL2orY0NONEVSVzNpU1FBQytubjh1eDkwZS8KNmNmSlN4U00vSS9rOERReDVObjRJdzZZcEt1SnN6NTJBU1FRV01jN0tBMjR3VzFFbXVONU9iMUlWYzlWR3RyYwpISk9sc3F1dHQrUG54OFFyU2dMM2xxbEFrSW9qNEtkdkkxcnVySis1UnNXeDBNbUJadU12ZlFEWXVGNUJlZkFqCjQ2bGZJZXJHUnBtMmNncFczQnM5THVXZ21TQzBKOGNxVzBNUk1RVXhiNlpYYkc1N3c3N3N1Wkk1UjdKUXlWNmkKLzB2ZkZ5VGhBb0dCQU52WlF2WDUrOFU0OVFndmI2OXRZRXJKcTNsWlJuclJsa1JnSmhJdWJVTFFkZksydkxYZApjMXRhVWpFZy96OSsyNWhVNElxQ2N6ZlV0RmpzWk8zbkt0aFAxSTlaRjJyUy9iRmJaT0d4Ykkwd2hKSDdKUVhQCjAwdEtJSnJKTWV2QzBmSnVhajRBL3VFaUhNMWlBeFZONWtiZmtxa1BDU0hzcWhPcGJnVncxVEZ4QW9HQkFOYnAKcW9qMnhPbnR4bkh6SkxxUEdhL1U5dUlSTERLbDVQSVJxRlNuUW1hZEc2Yk5yWGNwQy8reHQxWkpjcS9naE5zOQpEVktjZjRkdW96Yk5iZlpkS01pb1d2T1FYa2JXZ1NQcHRqK3pYZWtqUThNZ2NWUkpJVW94YmpUb3YrUVFTamlhCjFaWlNsWHV1SGxXV3ROaSt0ejFUL1FqZVBFS084NXJlZkVhclZDTHJBb0dCQU1WWHhLK2Y4Y3diVUhoRWZIQncKTWR0d0k2Z041eUlnT0U2d0wveHFDRkhOWmRLMURiZ0NUS1pYOFNlQWd4NnY5TlpNZWpKYTNxbmpHUEFwWW4vYQozYTdHR2Z1QzhXNUdic3RoU3JEODNuL3VhVkhRcW04SkdwV2V1SjI0dEVMNDRoUkg0TDQvam9yd1lBSk1WSkF2CkdPSE5sb3lDbnFRQkdMb0ZnR2tKMjVWQkFvR0FLV25yeitybHRVSjVyRG16aVRQTU9tTHFsRlBFMVptOFRaMXoKZDZTbm1naUtiSkZUN1JOKzJXNFFxMU1LQTdSYlJiZzFHZ2RJVi92TS9lR0dZQ1JCbUxGQW5aRGphZmtwOTVhdwo1UU9XaERla2RqU0pRam01YlllcStnMGo5VG5pWTVnS3NxWUZZa2tDVlhIdU5acEN5MUdsQUJGN1FVUTAwMUl1ClZwdnJZYk1DZ1lCTnRvdXpuSU0wUTQrL2JJV1V1THRBOUllcW5ockxLRHk5L3IvY2xFcWhNYTJkSjVRZWVxNG4KT1hkQWlQei9kU0xSdGpDU3o1RzJGdzZvUFBCSnVPRzgzQ3hZcnZza21zV2lrQzR1K29UYjZ3cFJTbnFOVFREcQpxSTkxSzRsaGp2SklBazk3S0NncWdiL2ZIZHNYODV0dTMxOHlaL0lnQ044TGY0QzYwL2piSnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-localhost-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUpCSkszYW55VWF2Y0kwYUNBMFVGNExKU0VITER3ZDVMWCs0b1cyLyt5WS9HZmVYCklFRVdIWTVuWVdIczV4cTJrNE5tMFVmNHA5Y2doQUI1ZG1SWU1DN1ltQ3RhQmlYTmUvbXN6Ti9GR2NMdTBsY3kKTWIrU1pxR0JUaVZZSStZclF4emJVQmlyOVNSWU03T2hFOWZpem03b3NzR3dlVFNGWWJLYzhjRUw5Tk9GWVBNSgpSZ3FJTmNHT01ObnJmZTk4MzJQdUZ4VkVEZVV1clkyRytaREtwWDNudlBCS1BrTkNBR0lubWNMbHpXZjIwR3RICjRWay96Skd4bzkrM3IvN1BjVDZ3L0JTVkd3WlB6cDBIa2JRVVZtaGw0bFA1ZEJ1elJnZXN6WUIyN2hsRzFoT3UKWmpIakIzbUVpcmNuZW43VS9pVFRxdDJtNDloQmlHYmJtRmxrdXdJREFRQUJBb0lCQVFDWWcvdERKSG1BMVoyeQp4NWRrWWRKaG4xMVFEYmFNZytONld0b3E1RFBLaWcrSkdOWFUvSlFXOW8rdHBLdU5Tc0RuWTZXNmVkd2NicVRiCkVEMVBQWnEycm0ra1IrYkx2Nzl2bktKVVp2Sk0ySTVjV1Z3TVNqL2orY0NONEVSVzNpU1FBQytubjh1eDkwZS8KNmNmSlN4U00vSS9rOERReDVObjRJdzZZcEt1SnN6NTJBU1FRV01jN0tBMjR3VzFFbXVONU9iMUlWYzlWR3RyYwpISk9sc3F1dHQrUG54OFFyU2dMM2xxbEFrSW9qNEtkdkkxcnVySis1UnNXeDBNbUJadU12ZlFEWXVGNUJlZkFqCjQ2bGZJZXJHUnBtMmNncFczQnM5THVXZ21TQzBKOGNxVzBNUk1RVXhiNlpYYkc1N3c3N3N1Wkk1UjdKUXlWNmkKLzB2ZkZ5VGhBb0dCQU52WlF2WDUrOFU0OVFndmI2OXRZRXJKcTNsWlJuclJsa1JnSmhJdWJVTFFkZksydkxYZApjMXRhVWpFZy96OSsyNWhVNElxQ2N6ZlV0RmpzWk8zbkt0aFAxSTlaRjJyUy9iRmJaT0d4Ykkwd2hKSDdKUVhQCjAwdEtJSnJKTWV2QzBmSnVhajRBL3VFaUhNMWlBeFZONWtiZmtxa1BDU0hzcWhPcGJnVncxVEZ4QW9HQkFOYnAKcW9qMnhPbnR4bkh6SkxxUEdhL1U5dUlSTERLbDVQSVJxRlNuUW1hZEc2Yk5yWGNwQy8reHQxWkpjcS9naE5zOQpEVktjZjRkdW96Yk5iZlpkS01pb1d2T1FYa2JXZ1NQcHRqK3pYZWtqUThNZ2NWUkpJVW94YmpUb3YrUVFTamlhCjFaWlNsWHV1SGxXV3ROaSt0ejFUL1FqZVBFS084NXJlZkVhclZDTHJBb0dCQU1WWHhLK2Y4Y3diVUhoRWZIQncKTWR0d0k2Z041eUlnT0U2d0wveHFDRkhOWmRLMURiZ0NUS1pYOFNlQWd4NnY5TlpNZWpKYTNxbmpHUEFwWW4vYQozYTdHR2Z1QzhXNUdic3RoU3JEODNuL3VhVkhRcW04SkdwV2V1SjI0dEVMNDRoUkg0TDQvam9yd1lBSk1WSkF2CkdPSE5sb3lDbnFRQkdMb0ZnR2tKMjVWQkFvR0FLV25yeitybHRVSjVyRG16aVRQTU9tTHFsRlBFMVptOFRaMXoKZDZTbm1naUtiSkZUN1JOKzJXNFFxMU1LQTdSYlJiZzFHZ2RJVi92TS9lR0dZQ1JCbUxGQW5aRGphZmtwOTVhdwo1UU9XaERla2RqU0pRam01YlllcStnMGo5VG5pWTVnS3NxWUZZa2tDVlhIdU5acEN5MUdsQUJGN1FVUTAwMUl1ClZwdnJZYk1DZ1lCTnRvdXpuSU0wUTQrL2JJV1V1THRBOUllcW5ockxLRHk5L3IvY2xFcWhNYTJkSjVRZWVxNG4KT1hkQWlQei9kU0xSdGpDU3o1RzJGdzZvUFBCSnVPRzgzQ3hZcnZza21zV2lrQzR1K29UYjZ3cFJTbnFOVFREcQpxSTkxSzRsaGp2SklBazk3S0NncWdiL2ZIZHNYODV0dTMxOHlaL0lnQ044TGY0QzYwL2piSnc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-localhost-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURtekNDQW9PZ0F3SUJBZ0lJZXZQVnk2eHJUeHN3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERURTVNVEl4TURFd05UWXdNMW93TmpFVU1CSUdBMVVFCkNoTUxhM1ZpWlMxdFlYTjBaWEl4SGpBY0JnTlZCQU1URlhONWMzUmxiVHByZFdKbExXRndhWE5sY25abGNqQ0MKQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFMaVFTU3QycDhsR3IzQ05HZ2dORkJlQwp5VWhCeXc4SGVTMS91S0Z0di9zbVB4bjNseUJCRmgyT1oyRmg3T2NhdHBPRFp0RkgrS2ZYSUlRQWVYWmtXREF1CjJKZ3JXZ1lselh2NXJNemZ4Um5DN3RKWE1qRy9rbWFoZ1U0bFdDUG1LME1jMjFBWXEvVWtXRE96b1JQWDRzNXUKNkxMQnNIazBoV0d5blBIQkMvVFRoV0R6Q1VZS2lEWEJqakRaNjMzdmZOOWo3aGNWUkEzbExxMk5odm1ReXFWOQo1N3p3U2o1RFFnQmlKNW5DNWMxbjl0QnJSK0ZaUDh5UnNhUGZ0Ni8rejNFK3NQd1VsUnNHVDg2ZEI1RzBGRlpvClplSlQrWFFiczBZSHJNMkFkdTRaUnRZVHJtWXg0d2Q1aElxM0ozcCsxUDRrMDZyZHB1UFlRWWhtMjVoWlpMc0MKQXdFQUFhT0JwRENCb1RBT0JnTlZIUThCQWY4RUJBTUNCYUF3RXdZRFZSMGxCQXd3Q2dZSUt3WUJCUVVIQXdFdwpEQVlEVlIwVEFRSC9CQUl3QURBZEJnTlZIUTRFRmdRVVFya21PMEY3NVVYdFVWemYvb2czcjR5SzNQZ3dId1lEClZSMGpCQmd3Rm9BVVFya21PMEY3NVVYdFVWemYvb2czcjR5SzNQZ3dMQVlEVlIwUkJDVXdJNElKYkc5allXeG8KYjNOMGh3Ui9BQUFCaHhBQUFBQUFBQUFBQUFBQUFBQUFBQUFCTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDWgoxQ2RmekZsZUlENmVyclRQNnlYN1Bjak9xNWs4T3h4aGJRK0J1M1ZRemJLdkhmcUJLcVhDSHE0VWphcm5URDJtClVDdnAyVWxFczNBRkZBWEU0ajBZcEhsOTRpeitVYm15L2daK2c3ZFBTcDBkYkp0VmFzdTZJaVZNYmwxbFE5ekEKZ2pQOGxWcEVvakVLUk5TemJ3T2hnQ0lvcjdicllxamxWOXRvUVFxNThtNTl0d1ZBV0JYMytoUzNmTzlrV2k2eQo2eHhGMGJWYkFoQzVaZnBNclJaMlZVNzh5OVc4TlJ3YjNBcERxa08zZGhMUkxTNE91VjdhQmpHeDFoMW5TM3kzCnRoM0RYY1pzV3c4ZTdMc0Rvc1JYZXRJZ0VKcXlzVExVT0dqblZkTS93dHdhcHdHaGxZVkxCN1Nleks1OWtZaTcKTVFyR2JaaGR4UENMcGtRbWN3N1MKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQoKLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerLocalhostSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNTFKMlR3VXkzc0VWTkk5SWFWT1doOVFtMTJ6RFp6RnVIM2xOcEVNMFh0RDVBRlZ5CjNPMXc3d09QTUFpVlBaV0VKcjdqbm8vZ0pGSnJsNE5MenNIV1h4YWdvd1lTOWZUL0Q1MkFiNFk3SnhXbFVBb0YKTEpIcERFNTloQlRtMUhqV2NkaFlINjBBbzJZS2dMc0RSYk9CYXdma1F5OHIxRVVVZXF2THFLRUpwZFFxOWdrVwpEb1lyRU1lN0tDZHJTZHVQbEFPWmxLNEU2Y21VQk95OWRqcGc4NXFFNnRqbHkyR21kS3RRYzFldnpHS3A1MWQrCmF2ZjRGT1QzWlZnd2JWRW53V1NYNXU1YU4vcEpwQnNERFRLczY3T0U5RjdHM3FTOWVTcGRsclZRUURjcXBzcmIKQzdkRUJwbHFvcC9jK2lVSWg2SWhzZ1FkV2JHMWVMWHhFWVNURVFJREFRQUJBb0lCQUV3RmU4QW9jemxsdHpSWQp5bkZpK1J1V2kxVk05MExZcWRwS0lVd1VrZ2QvSWZZTUh2MmdRdmNwOGtyVTUwY2Y5aGhOcjd5U2lCVW55Umc0CkhCZk0rRWl6eFFNT29maVhGYVBxSFNXSnRiTDRtQ1dmeFdlS1pFNlpGUUx0WTViOFIyMk9yaGRxNGNUUmFpNDQKUjdFR2QwZlhoaHJXUzg4dERMZnI4Ymh2aEI0czVpWlFYZFdKaTBqSmlPTDllaVc0NHpOdVVDS1MwU29pZWJYcAoxdWhZZHM2eWRtNEdINjJvTCsrUjZVTVY4K084dDVYeVhhS3l6Z21oTTlDMTR2cktxMVN4ODhoeGxSZGJBbkVvCng4bFNkZ0lRdzJKM1E3V1NzK2hWN21sWGloZHNqdmE2c1lCS0F0bFRiQVY1ODI5WVlXcmwxRWJZRFN4eHdiK3UKRi9XNW1Na0NnWUVBODdibGdwWTBDbU9YY2FYenRaRnRraURjM293K3ZaQ2ZXdGhvbnRPVzZVcnR0OTZBV0xhUQpqbmcwOTFGRzFtSnZ4K2VJUitrRVB1UnJuZENXTUo1b1g5S2hWUUJRNDQ1YzFxcUdwdWQ3YUtQYTF1K1U5WldDClJaeWZ6elA3UGoxV1JwcDEvS1d2ZjdRZE14aTM4c1A1Z3pJbm5yeFdPd1BMdWRKQ3hXN3JSTDhDZ1lFQTh2dWsKOFBGQmpJQ0pBZ1VvUXhQd2RwWjdiMmRrYXdUSFlhY2pHTHpYdW11aktQSGJmWStUbjlKcFc5cmcwWUJoMjdjdgp6YU1QcFl4dTAxZU1jZHVocDJWOUFuTk9FaDZ3elVoU1NWZXVlcVFNY0JRRXVPalVZakZpbkVid0ltMGJpQlZBCkJKeTJLd1pkUC9lUThrRS8rcnB5YWtiQzdBMW9HN21vMC9kbURDOENnWUJYWGl1c3dyZnBPWWFqQVVENnlDV2wKaXc1aTRaZmtVU0l2YVFFb1h1WHN3Q1cwRXBta005NWlsSWs0Vi9TekNoclVhUlliNFZiYVRQeWZXSlZlM0lyQwpQem9DeE5nNm0yQ0F2Q1VGVkZxVFNwbzdEeXd4VmVXYm11aFhXV1VxRE1jUERIUmJtL0hzTDk5LzM4Nmh3c3VCCjBzc05ScXNMQVBOWnJCeXZ0bkcwOVFLQmdRQzk5dmxFR2duNk03OXBvZWlSVUxSdHNrWjhtV1BMdTJlNXMvYmYKYnp4bGxhTnc3bTJBWTlDeFljcFhNdThUTzRER1N4aUhkNVZUQTFEZDBCT1FMSHJjcVo2clhNUkxyRXpqb1VnYgo2UDRUQ2RCamkzTUpzWlhoMHVSYWM2ZG44czlVZS9DWjZuOE5jaU5UVUZTMDRVaUkyRjE5TXlkUGIwZldiVGROCnlKeXlwd0tCZ0dRdjkyMys1Tm8xMHZCbit6MGNHTmRvMTMxVmpVVDhvSFNaUmkxdGEzQ1ZSMXloNmJ0QkRaUFYKbVFxK090NHMvbmxMd3JUY281YmpFWXhML2VUTUoweG5Xb3lZSkdKRDBZMlhDNGFGY3VmcngyQ3dDZ2dsdmFyLwpiZyswSjN3R2taYXlaSGV2aWhZMy91N1VLTllhbnR3ZHFRVDhRVDl0dStpMzI3VnhGelplCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-localhost-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNTFKMlR3VXkzc0VWTkk5SWFWT1doOVFtMTJ6RFp6RnVIM2xOcEVNMFh0RDVBRlZ5CjNPMXc3d09QTUFpVlBaV0VKcjdqbm8vZ0pGSnJsNE5MenNIV1h4YWdvd1lTOWZUL0Q1MkFiNFk3SnhXbFVBb0YKTEpIcERFNTloQlRtMUhqV2NkaFlINjBBbzJZS2dMc0RSYk9CYXdma1F5OHIxRVVVZXF2THFLRUpwZFFxOWdrVwpEb1lyRU1lN0tDZHJTZHVQbEFPWmxLNEU2Y21VQk95OWRqcGc4NXFFNnRqbHkyR21kS3RRYzFldnpHS3A1MWQrCmF2ZjRGT1QzWlZnd2JWRW53V1NYNXU1YU4vcEpwQnNERFRLczY3T0U5RjdHM3FTOWVTcGRsclZRUURjcXBzcmIKQzdkRUJwbHFvcC9jK2lVSWg2SWhzZ1FkV2JHMWVMWHhFWVNURVFJREFRQUJBb0lCQUV3RmU4QW9jemxsdHpSWQp5bkZpK1J1V2kxVk05MExZcWRwS0lVd1VrZ2QvSWZZTUh2MmdRdmNwOGtyVTUwY2Y5aGhOcjd5U2lCVW55Umc0CkhCZk0rRWl6eFFNT29maVhGYVBxSFNXSnRiTDRtQ1dmeFdlS1pFNlpGUUx0WTViOFIyMk9yaGRxNGNUUmFpNDQKUjdFR2QwZlhoaHJXUzg4dERMZnI4Ymh2aEI0czVpWlFYZFdKaTBqSmlPTDllaVc0NHpOdVVDS1MwU29pZWJYcAoxdWhZZHM2eWRtNEdINjJvTCsrUjZVTVY4K084dDVYeVhhS3l6Z21oTTlDMTR2cktxMVN4ODhoeGxSZGJBbkVvCng4bFNkZ0lRdzJKM1E3V1NzK2hWN21sWGloZHNqdmE2c1lCS0F0bFRiQVY1ODI5WVlXcmwxRWJZRFN4eHdiK3UKRi9XNW1Na0NnWUVBODdibGdwWTBDbU9YY2FYenRaRnRraURjM293K3ZaQ2ZXdGhvbnRPVzZVcnR0OTZBV0xhUQpqbmcwOTFGRzFtSnZ4K2VJUitrRVB1UnJuZENXTUo1b1g5S2hWUUJRNDQ1YzFxcUdwdWQ3YUtQYTF1K1U5WldDClJaeWZ6elA3UGoxV1JwcDEvS1d2ZjdRZE14aTM4c1A1Z3pJbm5yeFdPd1BMdWRKQ3hXN3JSTDhDZ1lFQTh2dWsKOFBGQmpJQ0pBZ1VvUXhQd2RwWjdiMmRrYXdUSFlhY2pHTHpYdW11aktQSGJmWStUbjlKcFc5cmcwWUJoMjdjdgp6YU1QcFl4dTAxZU1jZHVocDJWOUFuTk9FaDZ3elVoU1NWZXVlcVFNY0JRRXVPalVZakZpbkVid0ltMGJpQlZBCkJKeTJLd1pkUC9lUThrRS8rcnB5YWtiQzdBMW9HN21vMC9kbURDOENnWUJYWGl1c3dyZnBPWWFqQVVENnlDV2wKaXc1aTRaZmtVU0l2YVFFb1h1WHN3Q1cwRXBta005NWlsSWs0Vi9TekNoclVhUlliNFZiYVRQeWZXSlZlM0lyQwpQem9DeE5nNm0yQ0F2Q1VGVkZxVFNwbzdEeXd4VmVXYm11aFhXV1VxRE1jUERIUmJtL0hzTDk5LzM4Nmh3c3VCCjBzc05ScXNMQVBOWnJCeXZ0bkcwOVFLQmdRQzk5dmxFR2duNk03OXBvZWlSVUxSdHNrWjhtV1BMdTJlNXMvYmYKYnp4bGxhTnc3bTJBWTlDeFljcFhNdThUTzRER1N4aUhkNVZUQTFEZDBCT1FMSHJjcVo2clhNUkxyRXpqb1VnYgo2UDRUQ2RCamkzTUpzWlhoMHVSYWM2ZG44czlVZS9DWjZuOE5jaU5UVUZTMDRVaUkyRjE5TXlkUGIwZldiVGROCnlKeXlwd0tCZ0dRdjkyMys1Tm8xMHZCbit6MGNHTmRvMTMxVmpVVDhvSFNaUmkxdGEzQ1ZSMXloNmJ0QkRaUFYKbVFxK090NHMvbmxMd3JUY281YmpFWXhML2VUTUoweG5Xb3lZSkdKRDBZMlhDNGFGY3VmcngyQ3dDZ2dsdmFyLwpiZyswSjN3R2taYXlaSGV2aWhZMy91N1VLTllhbnR3ZHFRVDhRVDl0dStpMzI3VnhGelplCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-localhost-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerServiceNetworkCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-service-network-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerServiceNetworkServerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRVENDQXltZ0F3SUJBZ0lJR1NyMXhGM25ibGN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRFNU1USXhNREV3TlRZd00xb3dOakVVCk1CSUdBMVVFQ2hNTGEzVmlaUzF0WVhOMFpYSXhIakFjQmdOVkJBTVRGWE41YzNSbGJUcHJkV0psTFdGd2FYTmwKY25abGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUsrRUM3dXYzZ0FXZE5Idgo2dzBXT3FGVlNvSFFKT0xsN0V6aFFHZ0loTXdjd1FnQ1dOaGgwUjQ1eFpFdGlGbGtiWlFvZXIxeEFiUk1KYnVRCmw3dldkdFVray9zdVE3Q2Y2alZlL1IvWUQrd0V0SzF0eXNQKzIvRDJrRkx2b1IrcCtnWWs1RGlJUnpCVmk2QVMKVWVLTjNabUdFQlhTRVNnSFBkZ3huN0M2Mk5ja0I1MmNPWFZaMHF1MjduT0lra3RMZUhhYWJjQVo1cHEvVjB4QQpKSTdRS2dKY3o5U1BGTzhtY3UyUEFSVGlZQnpnVE0xamJEMUtIRm82N1kyWDJ2azAxNExZTVkwQ08vdW5ZZWhMCldTUDg2QldNSGNUTC80OHBRSUx6ZVZ2Yzd4WXVQL09LanZnMGx0UGcwa29IRnRJc0hzajZ3Rm1rcTZNT0IzcHkKTHkwbmpDa0NBd0VBQWFPQ0FVTXdnZ0UvTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdncgpCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRZEV0SDRoNnhSZWRJMmlhamQ3bkJGCi9ld3RUVEFmQmdOVkhTTUVHREFXZ0JRZEV0SDRoNnhSZWRJMmlhamQ3bkJGL2V3dFRUQ0J5UVlEVlIwUkJJSEIKTUlHK2dncHJkV0psY201bGRHVnpnaEpyZFdKbGNtNWxkR1Z6TG1SbFptRjFiSFNDRm10MVltVnlibVYwWlhNdQpaR1ZtWVhWc2RDNXpkbU9DSkd0MVltVnlibVYwWlhNdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oCmJJSUpiM0JsYm5Ob2FXWjBnaEZ2Y0dWdWMyaHBablF1WkdWbVlYVnNkSUlWYjNCbGJuTm9hV1owTG1SbFptRjEKYkhRdWMzWmpnaU52Y0dWdWMyaHBablF1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSWNFckI0QQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTWNvd1B6aUhrSkgzL2M2QUlJYVNocW53VkxsdjZVQjE2c1BYClk0RFRsWDc5Y2lnWC9xZ2VyTEcvMU8zU1YvQ2lGbWFaeHAzNW02UEhYNDhDdWl0MTZYelJFU3VwdU4zVG05cEQKYlhuYUxYREdSSmJHQUFBRzVrSGJCWDN4UDFadktEUWVsRnRoZDlBTFNDeFlLZGplckozRFhyVThMSHpMSEtyMwpyWmExV1ptYTREbFUyNXkxN2xKbGhuRXpwYW04bTZTMU1KUVhGMUhCMm5xSllWYXJWZnd3YlI2cXEwQ2NuL1I4CkZsdG9YbzBnK2I0b282QU9LcG9UQnRNZEFGWmtVMEpaU0wzamEreXdMVG1HL1BJa1JqOUNjaFNHdUVBOHBPTW4KZC8xRjVvRnNBTDcwNTc3RDFhdVZReGIzV2NOc2pycVZCbUxlZ0ZoY3ZLY3c2YlJ2VEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUllaXozWWpDVEhGUXdEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRFNU1USXdPVEV3TlRVMU4xb1hEVEk1TVRJd05qRXdOVFUxTjFvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUExR2lycnkxNStKWXEyOWhPY2s2Mk5QMlF5amZNOXo0Y0tYL3lnMEs1TzA3TGlOZktXQnFIQVM1YkdSUlcKY0I0eXNNWWJsUktNV29TV3dmYm5oYzBMWG1IVkU4ZTBINlQ5RzZBUVVyNnhRenlDU0p3TnZydW5BbFhKVTJoNgp5MjdtdTdMVjZLc3VMb2dnTnVSR3RnZXBRdHREZyt2QkJuTDlZbDRZNklKSGlqdlM1YStid3ZBcFEraUhBYmxXCjRVaDc0WFEwemRMVytlcEJYVFBvc1RPeG91L0ZBZ1JkYUFUcnBPbTNrWGFLY1JXU2N1TmhndU0zTXZZb1krcXgKbEVRR2svYUxqMk1sYmVXUzY1Tk1YdHFvejNxY1l6enFrR3NwVmRpMHBhK213N05HZWNaKzk4RW95YWZlamNMUQo3QmRKdVRTbUFWMGFDM0ljTmNsbjY1ZXpJUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVSFJMUitJZXNVWG5TTm9tbzNlNXdSZjNzTFUwd0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBS1FORXVSMXFIVmJyUjNuRFVEem9YZFBGSHovVm1BMFljUEJxTkNScUhSUQpMcmt3TGIzNFRobVlub0FieUt3WGJTRE1DbmRzbXVLbUdWcEtJbDZHWTU1VG54b2V0OVh2Q1M4L1IzWmZkV2IvCmRXSTlFN1VVUExMOHpjUDVaUFkydkVON3d5Unp0SFh6ak5LTHd0QVhDdVQzTTBqeXc0bzRaNFN4YkoramFZTTMKbCtjSk54bmE1NnFkd0kxM3dkalRnRGhIRFU4M0psL1kwRS9WdmM2eHVoTWErZFBOTXJ4NTB4Vk90VVM0eVBkeApsYzdKN2tyWEcwTTJuSUUvNFNPMUFvZmdGc0E3OGlPemJvMERUT0poTnpwaTBicTg1QStJMGl4clBNUW0vaGRuCjR5ZE40Mis5WTN6WEh5UVdTK0NFY2xza2tWQVJsK0NwNnZJQ3ZzZENyMTg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjRRTHU2L2VBQlowMGUvckRSWTZvVlZLZ2RBazR1WHNUT0ZBYUFpRXpCekJDQUpZCjJHSFJIam5Ga1MySVdXUnRsQ2g2dlhFQnRFd2x1NUNYdTlaMjFTU1QreTVEc0ovcU5WNzlIOWdQN0FTMHJXM0sKdy83YjhQYVFVdStoSDZuNkJpVGtPSWhITUZXTG9CSlI0bzNkbVlZUUZkSVJLQWM5MkRHZnNMclkxeVFIblp3NQpkVm5TcTdidWM0aVNTMHQ0ZHBwdHdCbm1tcjlYVEVBa2p0QXFBbHpQMUk4VTd5Wnk3WThCRk9KZ0hPQk16V05zClBVb2NXanJ0alpmYStUVFhndGd4alFJNys2ZGg2RXRaSS96b0ZZd2R4TXYvanlsQWd2TjVXOXp2Rmk0Lzg0cU8KK0RTVzArRFNTZ2NXMGl3ZXlQckFXYVNyb3c0SGVuSXZMU2VNS1FJREFRQUJBb0lCQUJrUEpGRzJ5VjUvMWt3SApFaXM3S2tIUW1LT3lJU0lZSzhYS1AxVGJLb0t0OUUxOWNFdnNvMXZLYWMvUmpXOGQ3SnREc0VxTjhPMWFGZVVTCnZ1Yzl0cGUxOGo3aG14NkRwbi9hUVErajNKb1pEZWJaRHlNdXB4NWZSYm5ocHNLTGxUdjlWbXhQNE1JZzVKK0YKSGhYWHBYVCs5QnI1ZENPZjdRK0ovai9RWFpkUnUvRU4zTnh2TGxZYjBkVlBTMDNxbEJxWTNwajBmWjREcmJrYwpKWlc1eGF6SFpoU2RPaU9aNVA1NlIwV3plM05WM0FZaEtEeTJFNU1ncm1sTHNoRWx2Qit6cTlla0dtMENubEYvCk41UTBZRnRRREhoRWFhdmVBTE1IQ3lHd0J6NCtLQkNMWSthUUgyZkJIZTR5djNVYUxFZ1RUbWppMEZoVzU5dUUKZ0VpVjJFVUNnWUVBeHNLQldIbUJoTlcybFV2RENTcVRSZ3R2dzZzMzR3OWlxUitFaGJjcUtxWWp4VmVnM0s4cQp1d09XQVpzQVdoc1cyanBhcUhjQXNDd21SMW5BcXZaZHhjWkJwektjQi9UK2NuR3ZDb1FnUFo5b0lmNDI5ejhwCmhsV3orTVlIQ1QzRzNQSnNYQnF0UVV3cnRBdGxzSnZ3VzVzUzdCZ1lCQ2gzdFhxNkIxQjRlajhDZ1lFQTRnL2kKNEh1eGZOVEVFOW5aWWJLTUYrY2F3MnZGOUh1bVZxaVFiYnh4a1BwcFkzV3pCV3ZXMG1veW40NHByRTBaS1pTUAp0N1oyOE1IUU5ZbTMyZkYvOHo4ZjEyTlk0S0hRRE5FTG9TN1hwTTUvNnBYaTBQd0szOUo2THZQcllHODVZelE5ClowSnR3UTRiNDAzbjI4NUhVeW42SllIeVpaRDh6VzZZcTdRaVQ1Y0NnWUJNdnFPazN0MjB4YlJITjBhcWptYnAKUDljNnpTeTZIcUd3dmJ1MHljR2RVQ00xdXAwaE9QMmQwa2VrZlE0SXZMYjVNbGo0L1dJbHBCWnZyR2NwWEJGZgpJU3NPZlFza1EyUFFHcmRFcnptbnNacEtyZGJaWnVrSXRxVFVKTnBvcGhMWUV6N2wzV01TZUcvVGlDY09wMWVLCmQzazU4aCtyMDFoTm1ZS2srbHhhandLQmdHRldpODh6RTVKM250SVpYSU8zdUtEV0x1ejBhL0ZBaUxnSnJ0N0IKWkhrVGlldDhrNUFEQmlYbCtsUS9oMndjYW5nLzhyNGRBQXZjdUVWRlBuZkdoOXg2VXNDUWs0VnR4MEt0aEg5cgp4d2k4cmRHWnBtZHNEMWFlcjJPbVBiUnhUOW1LZGVJUGRXaktKWEh6YXFGM3FiaUNlNlpJMU5HczQxMmxnSEYyCmg4dVRBb0dCQU1SUHNCZzhzYWE3eUZXVW9TMFZMbFloY1ZKblM2WVUxeVh1SWVhaDZMT3FUdzkzTU1hdEo4bHcKRnNHMTdPNXdnTVdseG4rdTgxeWdxcS9qZzRSd1lsUktnZGNkQlV4Um4xQnlIaitxeXBDMS9xaDY4MzFvRUpuSAo1Y3BBVGtzUTFDS0gwanhockNUU09ZdWRaL21TWHNMUkZHM3FOaFVkU09Mc0tGMmNBZ3VVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-service-network-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjRRTHU2L2VBQlowMGUvckRSWTZvVlZLZ2RBazR1WHNUT0ZBYUFpRXpCekJDQUpZCjJHSFJIam5Ga1MySVdXUnRsQ2g2dlhFQnRFd2x1NUNYdTlaMjFTU1QreTVEc0ovcU5WNzlIOWdQN0FTMHJXM0sKdy83YjhQYVFVdStoSDZuNkJpVGtPSWhITUZXTG9CSlI0bzNkbVlZUUZkSVJLQWM5MkRHZnNMclkxeVFIblp3NQpkVm5TcTdidWM0aVNTMHQ0ZHBwdHdCbm1tcjlYVEVBa2p0QXFBbHpQMUk4VTd5Wnk3WThCRk9KZ0hPQk16V05zClBVb2NXanJ0alpmYStUVFhndGd4alFJNys2ZGg2RXRaSS96b0ZZd2R4TXYvanlsQWd2TjVXOXp2Rmk0Lzg0cU8KK0RTVzArRFNTZ2NXMGl3ZXlQckFXYVNyb3c0SGVuSXZMU2VNS1FJREFRQUJBb0lCQUJrUEpGRzJ5VjUvMWt3SApFaXM3S2tIUW1LT3lJU0lZSzhYS1AxVGJLb0t0OUUxOWNFdnNvMXZLYWMvUmpXOGQ3SnREc0VxTjhPMWFGZVVTCnZ1Yzl0cGUxOGo3aG14NkRwbi9hUVErajNKb1pEZWJaRHlNdXB4NWZSYm5ocHNLTGxUdjlWbXhQNE1JZzVKK0YKSGhYWHBYVCs5QnI1ZENPZjdRK0ovai9RWFpkUnUvRU4zTnh2TGxZYjBkVlBTMDNxbEJxWTNwajBmWjREcmJrYwpKWlc1eGF6SFpoU2RPaU9aNVA1NlIwV3plM05WM0FZaEtEeTJFNU1ncm1sTHNoRWx2Qit6cTlla0dtMENubEYvCk41UTBZRnRRREhoRWFhdmVBTE1IQ3lHd0J6NCtLQkNMWSthUUgyZkJIZTR5djNVYUxFZ1RUbWppMEZoVzU5dUUKZ0VpVjJFVUNnWUVBeHNLQldIbUJoTlcybFV2RENTcVRSZ3R2dzZzMzR3OWlxUitFaGJjcUtxWWp4VmVnM0s4cQp1d09XQVpzQVdoc1cyanBhcUhjQXNDd21SMW5BcXZaZHhjWkJwektjQi9UK2NuR3ZDb1FnUFo5b0lmNDI5ejhwCmhsV3orTVlIQ1QzRzNQSnNYQnF0UVV3cnRBdGxzSnZ3VzVzUzdCZ1lCQ2gzdFhxNkIxQjRlajhDZ1lFQTRnL2kKNEh1eGZOVEVFOW5aWWJLTUYrY2F3MnZGOUh1bVZxaVFiYnh4a1BwcFkzV3pCV3ZXMG1veW40NHByRTBaS1pTUAp0N1oyOE1IUU5ZbTMyZkYvOHo4ZjEyTlk0S0hRRE5FTG9TN1hwTTUvNnBYaTBQd0szOUo2THZQcllHODVZelE5ClowSnR3UTRiNDAzbjI4NUhVeW42SllIeVpaRDh6VzZZcTdRaVQ1Y0NnWUJNdnFPazN0MjB4YlJITjBhcWptYnAKUDljNnpTeTZIcUd3dmJ1MHljR2RVQ00xdXAwaE9QMmQwa2VrZlE0SXZMYjVNbGo0L1dJbHBCWnZyR2NwWEJGZgpJU3NPZlFza1EyUFFHcmRFcnptbnNacEtyZGJaWnVrSXRxVFVKTnBvcGhMWUV6N2wzV01TZUcvVGlDY09wMWVLCmQzazU4aCtyMDFoTm1ZS2srbHhhandLQmdHRldpODh6RTVKM250SVpYSU8zdUtEV0x1ejBhL0ZBaUxnSnJ0N0IKWkhrVGlldDhrNUFEQmlYbCtsUS9oMndjYW5nLzhyNGRBQXZjdUVWRlBuZkdoOXg2VXNDUWs0VnR4MEt0aEg5cgp4d2k4cmRHWnBtZHNEMWFlcjJPbVBiUnhUOW1LZGVJUGRXaktKWEh6YXFGM3FiaUNlNlpJMU5HczQxMmxnSEYyCmg4dVRBb0dCQU1SUHNCZzhzYWE3eUZXVW9TMFZMbFloY1ZKblM2WVUxeVh1SWVhaDZMT3FUdzkzTU1hdEo4bHcKRnNHMTdPNXdnTVdseG4rdTgxeWdxcS9qZzRSd1lsUktnZGNkQlV4Um4xQnlIaitxeXBDMS9xaDY4MzFvRUpuSAo1Y3BBVGtzUTFDS0gwanhockNUU09ZdWRaL21TWHNMUkZHM3FOaFVkU09Mc0tGMmNBZ3VVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-service-network-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVRVENDQXltZ0F3SUJBZ0lJR1NyMXhGM25ibGN3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRFNU1USXhNREV3TlRZd00xb3dOakVVCk1CSUdBMVVFQ2hNTGEzVmlaUzF0WVhOMFpYSXhIakFjQmdOVkJBTVRGWE41YzNSbGJUcHJkV0psTFdGd2FYTmwKY25abGNqQ0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUsrRUM3dXYzZ0FXZE5Idgo2dzBXT3FGVlNvSFFKT0xsN0V6aFFHZ0loTXdjd1FnQ1dOaGgwUjQ1eFpFdGlGbGtiWlFvZXIxeEFiUk1KYnVRCmw3dldkdFVray9zdVE3Q2Y2alZlL1IvWUQrd0V0SzF0eXNQKzIvRDJrRkx2b1IrcCtnWWs1RGlJUnpCVmk2QVMKVWVLTjNabUdFQlhTRVNnSFBkZ3huN0M2Mk5ja0I1MmNPWFZaMHF1MjduT0lra3RMZUhhYWJjQVo1cHEvVjB4QQpKSTdRS2dKY3o5U1BGTzhtY3UyUEFSVGlZQnpnVE0xamJEMUtIRm82N1kyWDJ2azAxNExZTVkwQ08vdW5ZZWhMCldTUDg2QldNSGNUTC80OHBRSUx6ZVZ2Yzd4WXVQL09LanZnMGx0UGcwa29IRnRJc0hzajZ3Rm1rcTZNT0IzcHkKTHkwbmpDa0NBd0VBQWFPQ0FVTXdnZ0UvTUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdncgpCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJRZEV0SDRoNnhSZWRJMmlhamQ3bkJGCi9ld3RUVEFmQmdOVkhTTUVHREFXZ0JRZEV0SDRoNnhSZWRJMmlhamQ3bkJGL2V3dFRUQ0J5UVlEVlIwUkJJSEIKTUlHK2dncHJkV0psY201bGRHVnpnaEpyZFdKbGNtNWxkR1Z6TG1SbFptRjFiSFNDRm10MVltVnlibVYwWlhNdQpaR1ZtWVhWc2RDNXpkbU9DSkd0MVltVnlibVYwWlhNdVpHVm1ZWFZzZEM1emRtTXVZMngxYzNSbGNpNXNiMk5oCmJJSUpiM0JsYm5Ob2FXWjBnaEZ2Y0dWdWMyaHBablF1WkdWbVlYVnNkSUlWYjNCbGJuTm9hV1owTG1SbFptRjEKYkhRdWMzWmpnaU52Y0dWdWMyaHBablF1WkdWbVlYVnNkQzV6ZG1NdVkyeDFjM1JsY2k1c2IyTmhiSWNFckI0QQpBVEFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBTWNvd1B6aUhrSkgzL2M2QUlJYVNocW53VkxsdjZVQjE2c1BYClk0RFRsWDc5Y2lnWC9xZ2VyTEcvMU8zU1YvQ2lGbWFaeHAzNW02UEhYNDhDdWl0MTZYelJFU3VwdU4zVG05cEQKYlhuYUxYREdSSmJHQUFBRzVrSGJCWDN4UDFadktEUWVsRnRoZDlBTFNDeFlLZGplckozRFhyVThMSHpMSEtyMwpyWmExV1ptYTREbFUyNXkxN2xKbGhuRXpwYW04bTZTMU1KUVhGMUhCMm5xSllWYXJWZnd3YlI2cXEwQ2NuL1I4CkZsdG9YbzBnK2I0b282QU9LcG9UQnRNZEFGWmtVMEpaU0wzamEreXdMVG1HL1BJa1JqOUNjaFNHdUVBOHBPTW4KZC8xRjVvRnNBTDcwNTc3RDFhdVZReGIzV2NOc2pycVZCbUxlZ0ZoY3ZLY3c2YlJ2VEE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCgotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRFREQ0NBalNnQXdJQkFnSUllaXozWWpDVEhGUXdEUVlKS29aSWh2Y05BUUVMQlFBd1JERVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMmFXTmxMVzVsCmRIZHZjbXN0YzJsbmJtVnlNQjRYRFRFNU1USXdPVEV3TlRVMU4xb1hEVEk1TVRJd05qRXdOVFUxTjFvd1JERVMKTUJBR0ExVUVDeE1KYjNCbGJuTm9hV1owTVM0d0xBWURWUVFERXlWcmRXSmxMV0Z3YVhObGNuWmxjaTF6WlhKMgphV05sTFc1bGRIZHZjbXN0YzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDCkFRRUExR2lycnkxNStKWXEyOWhPY2s2Mk5QMlF5amZNOXo0Y0tYL3lnMEs1TzA3TGlOZktXQnFIQVM1YkdSUlcKY0I0eXNNWWJsUktNV29TV3dmYm5oYzBMWG1IVkU4ZTBINlQ5RzZBUVVyNnhRenlDU0p3TnZydW5BbFhKVTJoNgp5MjdtdTdMVjZLc3VMb2dnTnVSR3RnZXBRdHREZyt2QkJuTDlZbDRZNklKSGlqdlM1YStid3ZBcFEraUhBYmxXCjRVaDc0WFEwemRMVytlcEJYVFBvc1RPeG91L0ZBZ1JkYUFUcnBPbTNrWGFLY1JXU2N1TmhndU0zTXZZb1krcXgKbEVRR2svYUxqMk1sYmVXUzY1Tk1YdHFvejNxY1l6enFrR3NwVmRpMHBhK213N05HZWNaKzk4RW95YWZlamNMUQo3QmRKdVRTbUFWMGFDM0ljTmNsbjY1ZXpJUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEClZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVSFJMUitJZXNVWG5TTm9tbzNlNXdSZjNzTFUwd0RRWUoKS29aSWh2Y05BUUVMQlFBRGdnRUJBS1FORXVSMXFIVmJyUjNuRFVEem9YZFBGSHovVm1BMFljUEJxTkNScUhSUQpMcmt3TGIzNFRobVlub0FieUt3WGJTRE1DbmRzbXVLbUdWcEtJbDZHWTU1VG54b2V0OVh2Q1M4L1IzWmZkV2IvCmRXSTlFN1VVUExMOHpjUDVaUFkydkVON3d5Unp0SFh6ak5LTHd0QVhDdVQzTTBqeXc0bzRaNFN4YkoramFZTTMKbCtjSk54bmE1NnFkd0kxM3dkalRnRGhIRFU4M0psL1kwRS9WdmM2eHVoTWErZFBOTXJ4NTB4Vk90VVM0eVBkeApsYzdKN2tyWEcwTTJuSUUvNFNPMUFvZmdGc0E3OGlPemJvMERUT0poTnpwaTBicTg1QStJMGl4clBNUW0vaGRuCjR5ZE40Mis5WTN6WEh5UVdTK0NFY2xza2tWQVJsK0NwNnZJQ3ZzZENyMTg9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeAPIServerServiceNetworkSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLCldCcUhBUzViR1JSV2NCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd04KdnJ1bkFsWEpVMmg2eTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYgp3dkFwUStpSEFibFc0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oCmd1TTNNdllvWStxeGxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWisKOThFb3lhZmVqY0xRN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJBb0lCQVFDM0dtLzlkOWR3S290UgpydHFaQVM5aTZMN2JBMVZHUVIxbnpPc1NxZjhobUNBdW04N0xPanJ0RXJmbkc3Z1R1SVI4REpzVVc4UHY5K0k1CjNJemlzOG84RjF2bVRENERGV2czV3prWEMxbWxtMUM0SlFaWVNFMkUzc3pKZ1FSeHYrMVpHcVg1aHk4dFg1MWQKbEZVOGI4aENZTitIcGtCa1BkWWQ2UDNSMlJTd25LVEhDaS80NmpTL2p4WmozVFFSUnNtM0lFWjVCSUhPb3RJeQpyMTJkelJsNDFmSk9JUm1Fb25ic2lMUzkrN3dpa2cwWUxPNFNkUk4wcHRBaWZ2ZlViay85K3V0dEUrdmUzT1pqClk4ejdzUjdYWUhWOFg2SUsvVVV4bjZYRFpPNG9LV2h5R3VpWWpmYTloUEp6YjVGS05yUHRSQ2VpRmRCaGFDMSsKUnA1WFdHZ0JBb0dCQU52QVV2dXR6djRESVQ5akx4blZvNmJGSVJybVllaXEyb2dxTC9iSkZ2ZkxRdnd2MHZDaApwSGJha0dTNlRHMXp5UzhGdVNoUGV1WkN1TVd6N2twN0IzK3VuaXBzQU9kS3k3SnhlaVEweThPWVYrRU1Cc3NoCjNqLy9SeXFlWk5wZGt0ZWEvVy9OUUxmUDI4WktnTDRaQlh6OXBHUnNlNkhDMjB2c0N0dmJZMTlCQW9HQkFQZHkKU29ibXRzRjBvSTRMejdma3RnR2tEclRaT3hnc2JnZjVsUXdZNXg1WlFicm5wYlRDODM0RUxPdGVNb0prSXhoeAoydFArem42WkNXdXduRjRxV2MxZSt6ZVNhaG14TncvemFuaUEyZ2FCVUJybUtGbWNvenR4VHhJN2V6MnBCQ3NMCi9ray9RTHpuNUFMeUJpa3pqNGJRVHNtTzFxRHlkWERFNkJWY0RUdmhBb0dBYVhwaUduM3Q2Z3pVaTVsdkJVWi8KZTlBSk9PRTJRN2ltbGs4eG9KSWJIU3VLWm9RS0N3aDdhYlUxTTdRY2RUanJhMCtpOVU5WkhXY1BTNDQzSmJieAovWDV5V3NobWtwNWJNYmE0T3VMQW40empPWmxOTlhsM05WNng2U29JSEt4bmpHZlBtRGQ4QmY2V2JoSmF3MlE5Ck55YUVIdFBYYitpWTNGTmJUdlo2TjBFQ2dZRUFzSHFXQnJLRGcyUC9vbTl3SFRLRVVKVkdXOXRXbHo0UTE2VTgKbFIwcHNPNXR2N1M0N1R2aFYyMzQ3NEVHT3hMYUtQUUM0eEduQ29seE81b0JXL09PaXJlRUtqVkZjTCtBaXVMTAplOWhDSjBPUTh5NVZkdHdOV3piTDh5L3pESjMvdUFmY3V6YmVvQnd1OVo3Um9BOEMvVjZSNHBUNkpGM29QcDVnCisrTGtHV0VDZ1lFQXZiaXVVWkpYd3lNTU1xYlQwd3dtWXVzZ1VRdEt2Nmw0KzJvK3RSWnpnVmRHNUZOYzYwODEKSEk2dlp2c2hoRTZEd0Vmc3NvV2ZoM21iMzJDMytlLzQrWkd2U2IzTENEVEJ6cXJxbmI3VnlFUkppM3VsaXhKMgozZXdQZ1lsMm1KV291UEV3Q3ZKdHNQK1lYeHZtUDN5b1ZnTERtd1BMallRTHRKNGtVM2hNL3VVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-service-network-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLCldCcUhBUzViR1JSV2NCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd04KdnJ1bkFsWEpVMmg2eTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYgp3dkFwUStpSEFibFc0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oCmd1TTNNdllvWStxeGxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWisKOThFb3lhZmVqY0xRN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJBb0lCQVFDM0dtLzlkOWR3S290UgpydHFaQVM5aTZMN2JBMVZHUVIxbnpPc1NxZjhobUNBdW04N0xPanJ0RXJmbkc3Z1R1SVI4REpzVVc4UHY5K0k1CjNJemlzOG84RjF2bVRENERGV2czV3prWEMxbWxtMUM0SlFaWVNFMkUzc3pKZ1FSeHYrMVpHcVg1aHk4dFg1MWQKbEZVOGI4aENZTitIcGtCa1BkWWQ2UDNSMlJTd25LVEhDaS80NmpTL2p4WmozVFFSUnNtM0lFWjVCSUhPb3RJeQpyMTJkelJsNDFmSk9JUm1Fb25ic2lMUzkrN3dpa2cwWUxPNFNkUk4wcHRBaWZ2ZlViay85K3V0dEUrdmUzT1pqClk4ejdzUjdYWUhWOFg2SUsvVVV4bjZYRFpPNG9LV2h5R3VpWWpmYTloUEp6YjVGS05yUHRSQ2VpRmRCaGFDMSsKUnA1WFdHZ0JBb0dCQU52QVV2dXR6djRESVQ5akx4blZvNmJGSVJybVllaXEyb2dxTC9iSkZ2ZkxRdnd2MHZDaApwSGJha0dTNlRHMXp5UzhGdVNoUGV1WkN1TVd6N2twN0IzK3VuaXBzQU9kS3k3SnhlaVEweThPWVYrRU1Cc3NoCjNqLy9SeXFlWk5wZGt0ZWEvVy9OUUxmUDI4WktnTDRaQlh6OXBHUnNlNkhDMjB2c0N0dmJZMTlCQW9HQkFQZHkKU29ibXRzRjBvSTRMejdma3RnR2tEclRaT3hnc2JnZjVsUXdZNXg1WlFicm5wYlRDODM0RUxPdGVNb0prSXhoeAoydFArem42WkNXdXduRjRxV2MxZSt6ZVNhaG14TncvemFuaUEyZ2FCVUJybUtGbWNvenR4VHhJN2V6MnBCQ3NMCi9ray9RTHpuNUFMeUJpa3pqNGJRVHNtTzFxRHlkWERFNkJWY0RUdmhBb0dBYVhwaUduM3Q2Z3pVaTVsdkJVWi8KZTlBSk9PRTJRN2ltbGs4eG9KSWJIU3VLWm9RS0N3aDdhYlUxTTdRY2RUanJhMCtpOVU5WkhXY1BTNDQzSmJieAovWDV5V3NobWtwNWJNYmE0T3VMQW40empPWmxOTlhsM05WNng2U29JSEt4bmpHZlBtRGQ4QmY2V2JoSmF3MlE5Ck55YUVIdFBYYitpWTNGTmJUdlo2TjBFQ2dZRUFzSHFXQnJLRGcyUC9vbTl3SFRLRVVKVkdXOXRXbHo0UTE2VTgKbFIwcHNPNXR2N1M0N1R2aFYyMzQ3NEVHT3hMYUtQUUM0eEduQ29seE81b0JXL09PaXJlRUtqVkZjTCtBaXVMTAplOWhDSjBPUTh5NVZkdHdOV3piTDh5L3pESjMvdUFmY3V6YmVvQnd1OVo3Um9BOEMvVjZSNHBUNkpGM29QcDVnCisrTGtHV0VDZ1lFQXZiaXVVWkpYd3lNTU1xYlQwd3dtWXVzZ1VRdEt2Nmw0KzJvK3RSWnpnVmRHNUZOYzYwODEKSEk2dlp2c2hoRTZEd0Vmc3NvV2ZoM21iMzJDMytlLzQrWkd2U2IzTENEVEJ6cXJxbmI3VnlFUkppM3VsaXhKMgozZXdQZ1lsMm1KV291UEV3Q3ZKdHNQK1lYeHZtUDN5b1ZnTERtd1BMallRTHRKNGtVM2hNL3VVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-service-network-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerToKubeletCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJTWlINlpnRDR0RVV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFYwVjhWTlcrOQpZVElFaCtZNnJxazNDNFFYUWEwQ0lFOExPSnRiUVZNS3hSbGV4N3E5K1JSRjlyeXZRNEcyTGZZaDBIK2ZUZHhSCmh4M0hZakYwZzR5c0JJdldabWVoaXQ0MGZSaE5PVmVXQ0ZDU1lLbG1vSGNTSm1aYnc4ZnFkRjNBRjJwNExFdGMKcEhwSUViZWpmS2NraXpNeUlPaW45Rk9uWmpEanhndW1vSmpRbXU1MkJvSFg3SkJLa09CM29WWW1OeFdEb3IvNwpBUlFPM1VhbnpiMlcvZkcyb29TM3ZMNHBNNVRCY05TbFBCamdvZlIveEMzbFNWUjVPQ2lZVy8ydjUwdTNzNEpJCnc5eWFHeXZaRUlyNDVLL1ArRGJBNEtwSlY4L3ZCOEFOY244TzZnY0dBYTVta1pLZ3hoSWdGYnZXZit4VzdxYmkKc2lRZkRZSEVySUNOQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBd3dXQ085UUNzTjZuZi9sWGd3aVJnS21WYWY5cE5aT2ZBcm04aW9LcFpWK3lyYkVlWDVjRnNHUlQKa0FESktjaGg5SDEvcVppRDdNUFQzZzJuWkdoYjlNa0hsWFZCU0RUSDlTODFYbmt6UGZHcDhDZXNMYXZWVko4MgowdDU1NmV6eldqcVFIU2szcUs2Q2ZUMEs2RkswcXFRNDNYTW1sRGl6Q1dQUlMzaUtPSUcxZENJbmZNQ1BmQ0FGCkhHZEFNcHJMUWFoS0lTeWJvY0lBWTU3SmhRNlVVVThnbVFWTWtHb0xwdXVRbDNuOVcwS1RIeVIrSTJNQjBsTWwKVlV2dktMQkVvVXRQOTVpa0hkTVViRkplcGpZU3dyQ25qWEMyQ2ZucUROVW44QXJRTE9TUXlsdXZmdC9URjY1RQp6RkFJM0ZuenUyci9rTDRIT2RMZ1V3U0FSRXR3NUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-to-kubelet-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJTWlINlpnRDR0RVV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFYwVjhWTlcrOQpZVElFaCtZNnJxazNDNFFYUWEwQ0lFOExPSnRiUVZNS3hSbGV4N3E5K1JSRjlyeXZRNEcyTGZZaDBIK2ZUZHhSCmh4M0hZakYwZzR5c0JJdldabWVoaXQ0MGZSaE5PVmVXQ0ZDU1lLbG1vSGNTSm1aYnc4ZnFkRjNBRjJwNExFdGMKcEhwSUViZWpmS2NraXpNeUlPaW45Rk9uWmpEanhndW1vSmpRbXU1MkJvSFg3SkJLa09CM29WWW1OeFdEb3IvNwpBUlFPM1VhbnpiMlcvZkcyb29TM3ZMNHBNNVRCY05TbFBCamdvZlIveEMzbFNWUjVPQ2lZVy8ydjUwdTNzNEpJCnc5eWFHeXZaRUlyNDVLL1ArRGJBNEtwSlY4L3ZCOEFOY244TzZnY0dBYTVta1pLZ3hoSWdGYnZXZit4VzdxYmkKc2lRZkRZSEVySUNOQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBd3dXQ085UUNzTjZuZi9sWGd3aVJnS21WYWY5cE5aT2ZBcm04aW9LcFpWK3lyYkVlWDVjRnNHUlQKa0FESktjaGg5SDEvcVppRDdNUFQzZzJuWkdoYjlNa0hsWFZCU0RUSDlTODFYbmt6UGZHcDhDZXNMYXZWVko4MgowdDU1NmV6eldqcVFIU2szcUs2Q2ZUMEs2RkswcXFRNDNYTW1sRGl6Q1dQUlMzaUtPSUcxZENJbmZNQ1BmQ0FGCkhHZEFNcHJMUWFoS0lTeWJvY0lBWTU3SmhRNlVVVThnbVFWTWtHb0xwdXVRbDNuOVcwS1RIeVIrSTJNQjBsTWwKVlV2dktMQkVvVXRQOTVpa0hkTVViRkplcGpZU3dyQ25qWEMyQ2ZucUROVW44QXJRTE9TUXlsdXZmdC9URjY1RQp6RkFJM0ZuenUyci9rTDRIT2RMZ1V3U0FSRXR3NUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerToKubeletClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiRENDQWxTZ0F3SUJBZ0lJRXVMclBMdnZRem93RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTURZeEZEQVNCZ05WCkJBb1RDMnQxWW1VdGJXRnpkR1Z5TVI0d0hBWURWUVFERXhWemVYTjBaVzA2YTNWaVpTMWhjR2x6WlhKMlpYSXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE5YbnVQdWp6Y243R0FRS3RTMndXUgpPbER3bmZyWnNsUlkrdENkNGhObEZrNVBPS0gva1BYUVdQcktwVHdpaFJsUm5JQWgrNnRlVGJ5RlRiQ1JQdDh2CnlQYkhBdU1ZTE1KTWZhN0p1aXdsbDI0bTNoTzdxc2xncnlvSnNYbVluajJmM21NcDFTTGlsc1V1eGN2aCtYTnMKQjcwdFlaLzVaWmNVOGlnZ1kxM3lmK1ZpYURHTUlaTlBFRkZzRkRKYTBjUUlQTDIzUkVqb3lTRE9BaDluWHBzOApNMkdHTXVGK2wrWHBPMkZySDY5dnJ3VUd4dmNEZnRGTnp3SWpyclplbjJPeDZXaTZYVFg0bjU1Ykc2WlZmZ3NBCkF3TmoyRUl2S1FnVHRSWkhpK0k5WWhBMDVMTzljMjdISDNTQTMzVzNlc0R4U2FnUGh1TVQ1TmdrUDh6L2M0OGwKQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTQpCZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQWZCZ05WCkhTTUVHREFXZ0JUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKSjBxdEQwd3dSaThIOG9uaUVoNlFYdjF1ZUczOVhpcnJOZjBTS2pZM3hzK0w5QjNiVjc5SjJwTk96NnpSTXgwVwo4K2Q0VlkveEhoWGc1K3dMNHNuSFJEQ0VldHhuQ2lqbW43L1BXNDFGQUZUc0dJY3VpNTYzLzE2Q1UwaVE1YXg2CkVDZFhqSUNjN0Rhc0NBWDM3NDVIc1VpYWRXQTk5dVNlNUNRc00zbGI5NS81WUtwQU5aL1VXQit4THAzTjJCVFMKR0lPbmVvNGdnV3QxelliS0Z5eEUzamZUbkwzeFhmdmpGaXZBamwyUVJBeEdiTHZYbVgwamNhcWRyOVg0OUlsRQorVmJpZUo0cUpDVUpZT3FVK1pLS1hIaTFjNi9YWGFsWDdXaDIvazVJa1c5S0tGOTVZejZ2bVNwZ2Rlc29rd1ZMCnU2WHl1cWhUcWVwU3FDQktYVUZpQ1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBelY1N2o3bzgzSit4Z0VDclV0c0ZrVHBROEozNjJiSlVXUHJRbmVJVFpSWk9UemloCi81RDEwRmo2eXFVOElvVVpVWnlBSWZ1clhrMjhoVTJ3a1Q3Zkw4ajJ4d0xqR0N6Q1RIMnV5Ym9zSlpkdUp0NFQKdTZySllLOHFDYkY1bUo0OW45NWpLZFVpNHBiRkxzWEw0Zmx6YkFlOUxXR2YrV1dYRlBJb0lHTmQ4bi9sWW1neApqQ0dUVHhCUmJCUXlXdEhFQ0R5OXQwUkk2TWtnemdJZloxNmJQRE5oaGpMaGZwZmw2VHRoYXgrdmI2OEZCc2IzCkEzN1JUYzhDSTY2MlhwOWpzZWxvdWwwMStKK2VXeHVtVlg0TEFBTURZOWhDTHlrSUU3VVdSNHZpUFdJUU5PU3oKdlhOdXh4OTBnTjkxdDNyQThVbW9ENGJqRStUWUpEL00vM09QSlFJREFRQUJBb0lCQUJvZG43emhSQWdTVHJJdQpoeHJjTzFNQ2hYUnp3b2lZZ3QxbDE4MmNDRGRjcE15eU9QZVU2WTE3SXpsTjFkM1Y2eWhUckgrbHoxOElwNmFVCkFKWVgxcTN1OG1MUVhTeWYxSDJCcGc2RkhFUVRnN0J4b1RUR1BTR01aTjRpc1lIVTdhVTgxSU5uVlM1WFdlL2UKdTFTYk1qQlVzNXZueEQ0a3l4ZWd5N1dDclZtKzY0Yk5xSjY0eGI0cTdqTm9JK1RrOEdqRUpmQ1ZzTlVDYmJpVApBb3d4a1llb0cwTUVWNGFwc2xlZVU3ZDFHYzk3ODhlcTdFUUxvVWtTSm5rdUVNTkJwSzBaUDhRemMydm5ad2EvCjQwUVdxV21CaGl1cU5LOGhIVStrbUF4SDhpY0hjd0NEMTkwU2dhUzRDUC9QdVo5SzlreHpaMmw4ZXZHM2tTbHMKUEEyQXZzRUNnWUVBN0ZHZjFDQ0NYcjU0TW5LcXB4QVMzNHlwdURPSldoVzE0SjF2di9TbVBBSXdGcFA4WTNVQQpzMThzNVdQMUVGaWRoa0gwQXhwWDE4VUxZTmFpaHk0QTNDQUt2L09JM29XNTVDOStiSzNvUldpOURydU0zc2VMClMrQWJYcVhNNjJLd3lNRzM3VDRuU2kraDIrdVpZdkpCUXFtTmcxU2d2VWhZcEFKb2p3Yyt4bmtDZ1lFQTNua0EKYVZPK0NBNlRyN1I0dlhQaHI2aFg1amk2dElCSWpkQVlvcTY5SEdpMjlsREdES2lyZ0dZSStjclA1NEVOR0M4Vgp5OU5JMkpWZ0xrRHRweUhOQ2JwYmwzZ0lSQTRlVjRBK1huUjVLSTdFTnZpRVk2dkEvRUZOcTVCTWI1c08yQUg4ClNwMnlTWmwzWmxWN1d0MHFrNzAxUEhwbFBsenk1V2RIN2h5c2t3MENnWUFJeGVyNkZBN2k5NDA4eWpiOXBzSWMKbkhzOGhHVkgrK0JacTE2WHNMeHZJK0duSk8xTXYrNDd1bi9QTUV2THhJNXNpb3hGaFRmWG9kQVBVMGlMWGpEWAorelNLOWI2U0RFTGZic2Z4dnU4TmpKcmdMaVJIclA3RjNWY0d4Mzc1Q2h2b0NCRU05SzYrdVUvMyt5SWhvejY2Cis5SnVHcmt3N2J1a3N4WXdvU002ZVFLQmdGZC9BV0ZyVlE2NEpPOXlyQlhlc0lFMFZUV3ZWQWJQZVRtRkFWdGkKRy9CRFlzbm5KSzB2M1J1SGhib3dRS3BOQUFobDVFMmdrRUxXSk5pc0lvdWI2SmNOMngzc1VGdnJyWlUrVThrMApSNzVpdjlyYXpMNmlleWo2eWdCU3BTMHpyNWZXMkJIRWlhMFdsWFlDNHB2dTVlTHJCRGYvN3plaXVNanVZTVRPCk5EVTFBb0dCQUpnSGg3SHh5MGdRTnVvelE3Z3dHeGFFaXdFRVhaTC80Nnpyem5ZTTdudEUzU2hteG5VakI1QmsKajJpOGlnNUllUHpzZ0UxQ2xFVVc1WkR4OXgyOTVIamt5REdtcFozcWhMSFF4SjFINTEvZndlY1Y5VjdyVVkxQgpranpLTnYzci9KR1VkVzBoQktQbEdITnFVZlgrclpma1JyYVViL1hUeUt3enNXTkpBWDlYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-to-kubelet-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBelY1N2o3bzgzSit4Z0VDclV0c0ZrVHBROEozNjJiSlVXUHJRbmVJVFpSWk9UemloCi81RDEwRmo2eXFVOElvVVpVWnlBSWZ1clhrMjhoVTJ3a1Q3Zkw4ajJ4d0xqR0N6Q1RIMnV5Ym9zSlpkdUp0NFQKdTZySllLOHFDYkY1bUo0OW45NWpLZFVpNHBiRkxzWEw0Zmx6YkFlOUxXR2YrV1dYRlBJb0lHTmQ4bi9sWW1neApqQ0dUVHhCUmJCUXlXdEhFQ0R5OXQwUkk2TWtnemdJZloxNmJQRE5oaGpMaGZwZmw2VHRoYXgrdmI2OEZCc2IzCkEzN1JUYzhDSTY2MlhwOWpzZWxvdWwwMStKK2VXeHVtVlg0TEFBTURZOWhDTHlrSUU3VVdSNHZpUFdJUU5PU3oKdlhOdXh4OTBnTjkxdDNyQThVbW9ENGJqRStUWUpEL00vM09QSlFJREFRQUJBb0lCQUJvZG43emhSQWdTVHJJdQpoeHJjTzFNQ2hYUnp3b2lZZ3QxbDE4MmNDRGRjcE15eU9QZVU2WTE3SXpsTjFkM1Y2eWhUckgrbHoxOElwNmFVCkFKWVgxcTN1OG1MUVhTeWYxSDJCcGc2RkhFUVRnN0J4b1RUR1BTR01aTjRpc1lIVTdhVTgxSU5uVlM1WFdlL2UKdTFTYk1qQlVzNXZueEQ0a3l4ZWd5N1dDclZtKzY0Yk5xSjY0eGI0cTdqTm9JK1RrOEdqRUpmQ1ZzTlVDYmJpVApBb3d4a1llb0cwTUVWNGFwc2xlZVU3ZDFHYzk3ODhlcTdFUUxvVWtTSm5rdUVNTkJwSzBaUDhRemMydm5ad2EvCjQwUVdxV21CaGl1cU5LOGhIVStrbUF4SDhpY0hjd0NEMTkwU2dhUzRDUC9QdVo5SzlreHpaMmw4ZXZHM2tTbHMKUEEyQXZzRUNnWUVBN0ZHZjFDQ0NYcjU0TW5LcXB4QVMzNHlwdURPSldoVzE0SjF2di9TbVBBSXdGcFA4WTNVQQpzMThzNVdQMUVGaWRoa0gwQXhwWDE4VUxZTmFpaHk0QTNDQUt2L09JM29XNTVDOStiSzNvUldpOURydU0zc2VMClMrQWJYcVhNNjJLd3lNRzM3VDRuU2kraDIrdVpZdkpCUXFtTmcxU2d2VWhZcEFKb2p3Yyt4bmtDZ1lFQTNua0EKYVZPK0NBNlRyN1I0dlhQaHI2aFg1amk2dElCSWpkQVlvcTY5SEdpMjlsREdES2lyZ0dZSStjclA1NEVOR0M4Vgp5OU5JMkpWZ0xrRHRweUhOQ2JwYmwzZ0lSQTRlVjRBK1huUjVLSTdFTnZpRVk2dkEvRUZOcTVCTWI1c08yQUg4ClNwMnlTWmwzWmxWN1d0MHFrNzAxUEhwbFBsenk1V2RIN2h5c2t3MENnWUFJeGVyNkZBN2k5NDA4eWpiOXBzSWMKbkhzOGhHVkgrK0JacTE2WHNMeHZJK0duSk8xTXYrNDd1bi9QTUV2THhJNXNpb3hGaFRmWG9kQVBVMGlMWGpEWAorelNLOWI2U0RFTGZic2Z4dnU4TmpKcmdMaVJIclA3RjNWY0d4Mzc1Q2h2b0NCRU05SzYrdVUvMyt5SWhvejY2Cis5SnVHcmt3N2J1a3N4WXdvU002ZVFLQmdGZC9BV0ZyVlE2NEpPOXlyQlhlc0lFMFZUV3ZWQWJQZVRtRkFWdGkKRy9CRFlzbm5KSzB2M1J1SGhib3dRS3BOQUFobDVFMmdrRUxXSk5pc0lvdWI2SmNOMngzc1VGdnJyWlUrVThrMApSNzVpdjlyYXpMNmlleWo2eWdCU3BTMHpyNWZXMkJIRWlhMFdsWFlDNHB2dTVlTHJCRGYvN3plaXVNanVZTVRPCk5EVTFBb0dCQUpnSGg3SHh5MGdRTnVvelE3Z3dHeGFFaXdFRVhaTC80Nnpyem5ZTTdudEUzU2hteG5VakI1QmsKajJpOGlnNUllUHpzZ0UxQ2xFVVc1WkR4OXgyOTVIamt5REdtcFozcWhMSFF4SjFINTEvZndlY1Y5VjdyVVkxQgpranpLTnYzci9KR1VkVzBoQktQbEdITnFVZlgrclpma1JyYVViL1hUeUt3enNXTkpBWDlYCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kube-apiserver-to-kubelet-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURiRENDQWxTZ0F3SUJBZ0lJRXVMclBMdnZRem93RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTURZeEZEQVNCZ05WCkJBb1RDMnQxWW1VdGJXRnpkR1Z5TVI0d0hBWURWUVFERXhWemVYTjBaVzA2YTNWaVpTMWhjR2x6WlhKMlpYSXcKZ2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRE5YbnVQdWp6Y243R0FRS3RTMndXUgpPbER3bmZyWnNsUlkrdENkNGhObEZrNVBPS0gva1BYUVdQcktwVHdpaFJsUm5JQWgrNnRlVGJ5RlRiQ1JQdDh2CnlQYkhBdU1ZTE1KTWZhN0p1aXdsbDI0bTNoTzdxc2xncnlvSnNYbVluajJmM21NcDFTTGlsc1V1eGN2aCtYTnMKQjcwdFlaLzVaWmNVOGlnZ1kxM3lmK1ZpYURHTUlaTlBFRkZzRkRKYTBjUUlQTDIzUkVqb3lTRE9BaDluWHBzOApNMkdHTXVGK2wrWHBPMkZySDY5dnJ3VUd4dmNEZnRGTnp3SWpyclplbjJPeDZXaTZYVFg0bjU1Ykc2WlZmZ3NBCkF3TmoyRUl2S1FnVHRSWkhpK0k5WWhBMDVMTzljMjdISDNTQTMzVzNlc0R4U2FnUGh1TVQ1TmdrUDh6L2M0OGwKQWdNQkFBR2pkVEJ6TUE0R0ExVWREd0VCL3dRRUF3SUZvREFUQmdOVkhTVUVEREFLQmdnckJnRUZCUWNEQWpBTQpCZ05WSFJNQkFmOEVBakFBTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQWZCZ05WCkhTTUVHREFXZ0JUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUEKSjBxdEQwd3dSaThIOG9uaUVoNlFYdjF1ZUczOVhpcnJOZjBTS2pZM3hzK0w5QjNiVjc5SjJwTk96NnpSTXgwVwo4K2Q0VlkveEhoWGc1K3dMNHNuSFJEQ0VldHhuQ2lqbW43L1BXNDFGQUZUc0dJY3VpNTYzLzE2Q1UwaVE1YXg2CkVDZFhqSUNjN0Rhc0NBWDM3NDVIc1VpYWRXQTk5dVNlNUNRc00zbGI5NS81WUtwQU5aL1VXQit4THAzTjJCVFMKR0lPbmVvNGdnV3QxelliS0Z5eEUzamZUbkwzeFhmdmpGaXZBamwyUVJBeEdiTHZYbVgwamNhcWRyOVg0OUlsRQorVmJpZUo0cUpDVUpZT3FVK1pLS1hIaTFjNi9YWGFsWDdXaDIvazVJa1c5S0tGOTVZejZ2bVNwZ2Rlc29rd1ZMCnU2WHl1cWhUcWVwU3FDQktYVUZpQ1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeAPIServerToKubeletSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJTWlINlpnRDR0RVV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFYwVjhWTlcrOQpZVElFaCtZNnJxazNDNFFYUWEwQ0lFOExPSnRiUVZNS3hSbGV4N3E5K1JSRjlyeXZRNEcyTGZZaDBIK2ZUZHhSCmh4M0hZakYwZzR5c0JJdldabWVoaXQ0MGZSaE5PVmVXQ0ZDU1lLbG1vSGNTSm1aYnc4ZnFkRjNBRjJwNExFdGMKcEhwSUViZWpmS2NraXpNeUlPaW45Rk9uWmpEanhndW1vSmpRbXU1MkJvSFg3SkJLa09CM29WWW1OeFdEb3IvNwpBUlFPM1VhbnpiMlcvZkcyb29TM3ZMNHBNNVRCY05TbFBCamdvZlIveEMzbFNWUjVPQ2lZVy8ydjUwdTNzNEpJCnc5eWFHeXZaRUlyNDVLL1ArRGJBNEtwSlY4L3ZCOEFOY244TzZnY0dBYTVta1pLZ3hoSWdGYnZXZit4VzdxYmkKc2lRZkRZSEVySUNOQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBd3dXQ085UUNzTjZuZi9sWGd3aVJnS21WYWY5cE5aT2ZBcm04aW9LcFpWK3lyYkVlWDVjRnNHUlQKa0FESktjaGg5SDEvcVppRDdNUFQzZzJuWkdoYjlNa0hsWFZCU0RUSDlTODFYbmt6UGZHcDhDZXNMYXZWVko4MgowdDU1NmV6eldqcVFIU2szcUs2Q2ZUMEs2RkswcXFRNDNYTW1sRGl6Q1dQUlMzaUtPSUcxZENJbmZNQ1BmQ0FGCkhHZEFNcHJMUWFoS0lTeWJvY0lBWTU3SmhRNlVVVThnbVFWTWtHb0xwdXVRbDNuOVcwS1RIeVIrSTJNQjBsTWwKVlV2dktMQkVvVXRQOTVpa0hkTVViRkplcGpZU3dyQ25qWEMyQ2ZucUROVW44QXJRTE9TUXlsdXZmdC9URjY1RQp6RkFJM0ZuenUyci9rTDRIT2RMZ1V3U0FSRXR3NUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMWRGZkZUVnZ2V0V5QklmbU9xNnBOd3VFRjBHdEFpQlBDemliVzBGVENzVVpYc2U2CnZma1VSZmE4cjBPQnRpMzJJZEIvbjAzY1VZY2R4Mkl4ZElPTXJBU0wxbVpub1lyZU5IMFlUVGxYbGdoUWttQ3AKWnFCM0VpWm1XOFBINm5SZHdCZHFlQ3hMWEtSNlNCRzNvM3luSklzek1pRG9wL1JUcDJZdzQ4WUxwcUNZMEpydQpkZ2FCMSt5UVNwRGdkNkZXSmpjVmc2Sy8rd0VVRHQxR3A4MjlsdjN4dHFLRXQ3eStLVE9Vd1hEVXBUd1k0S0gwCmY4UXQ1VWxVZVRnb21GdjlyK2RMdDdPQ1NNUGNtaHNyMlJDSytPU3Z6L2cyd09DcVNWZlA3d2ZBRFhKL0R1b0gKQmdHdVpwR1NvTVlTSUJXNzFuL3NWdTZtNHJJa0h3MkJ4S3lBalFJREFRQUJBb0lCQVFDUVR5Y2xZVk54TmRCVQpUb1NNeHFWZWlWODFjeFlaZ1VUWUJmU1V1cG9aZ3IyRXdyaSt6d1ZuMHdlMklwSEJLM1Fiam1VVVY3Q0ROZlpiClEyS3RpTHZBdmJERG00b0Y5WHZUWVRxdHBDNEJETXVVZjdqVmt5ZktFREMxYm9YWEw0SzJ5eGNJMUp4b2dub2wKZWcrL1A3cHZaNk8rQ1lmOUUySUNjVzQ5ek1UQVNCZmkxSEE2ZGFmcFlCc0svODNJNUtwNjFwa1E3MlM5YU9oQgpNVkhPUFFzUG5GY3RrSFhReVlKdlFOT2sxT3pEWmZPQVAvcXpGVlZjOG9nZytBUFpxYzg5cGh4aWdNVjNDWk9PCnNhQ0dFcGUzc05MdGdFVXRRcWxYdm5ETFhBZ2FHZjVOVnRJWU1FWWJnUHlzblZsOTBibnFEWXNGVGRHV2ROYzcKd2VWSnUzZ0JBb0dCQU9LbUdRQVJJalFRYUFGYk55RVI0ODRzMVNISkZyVnUwQlU0RTdMMjVpaktBckJvTDY0RgpqU0V2b29BWWtVNDB4KzNkTTZidUxnbE4wVVZnSDNEbUNjd1ZFZk9hQkpMN1VQK2lUVklQRUNCbEVoZmcwK0E4Cm9SZTdtOHVUa1o3aFFXMnRxSGdUOEZrZ1FDOUVTR2xBRnNCcUJqbTQ5aEw5dHJLMHh5NlB3NWRCQW9HQkFQR0IKNWorYzdieE9aTGxJWHgwektrWC9aVU5lb3VHVzVvNTBIRFVabVR0ZHJUSzE0MGoxNGVhaXgzZk42VEZod3JPUgpBQXJnaDdIQVRxNjVoNkNzMHlOQktiMWZsaW5yemdQenZ2STg1MG1aQVZlNVVrRGNvM1BYaWoxdnRxZFJmNWUwCk1zcWlPd09mbzI3Ym4yREQ5eER1bGRIT3hJcWNCVG5abjNMeXlZSk5Bb0dCQUpBV2lFNUNsandETWh1cW9hR2sKZmU3VkVhb283UWJySzk1UmlEUitRbFFzR1FtTk1zS3ZSTW1VUHZxd282L1VYa1lhR254RmIzNzZ1ZEFoQzl2NgpZc0FicFEzNUhHOVUxbW11QlBubUdacCtwc0lIYkt0aDRBZjJmVlV1dTZVR0QxSnExRytDUFlwcnRtSldScktpCnk5UUhrMjJlNk5HcCtqd2lNWDZvWnZBQkFvR0JBT0pXK09DVGhhZGUzVDFjMjI5MVhXQWUzTnZIM09XSjFHaWIKM3pmUTF2QnhlZm8xeDE3QXVzZTV0VEhOOUlnSWRENXdYZGJUMmJpNFg4V1hNY3BmVHI0U3V6aTFWZm5SK3RGdgpabnlHb2Nrek1iUHlobWt0bjY3WXljR01hbVhqbHE0cC94UXorUlVMVDFOOVY2Q0w2SWlnNGg2eEp6ZzB3eDBWCm5UOVExWlJkQW9HQVRYK2Z1K2paMVcwM0FHVG8rZlpDekVxU1c1YXdtWVhMYUlndVdtNWpoRW0xVDNPVzQzZU4KWnNuNmlVRVczSnd6WWttVWp4S3pQUVRLRFRpWm1SMi9sd2g3aTlhUkpYNFRIY2NmOS9Eb3haMTMyT0hMZk8vNgpaSDNCb1Qya3JQR3IxRjBXdHY3b1V0bDlUR1NqOENsa080QjhOWFdGRmw5YkFVK0pFMXZad3Q0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-apiserver-to-kubelet-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMWRGZkZUVnZ2V0V5QklmbU9xNnBOd3VFRjBHdEFpQlBDemliVzBGVENzVVpYc2U2CnZma1VSZmE4cjBPQnRpMzJJZEIvbjAzY1VZY2R4Mkl4ZElPTXJBU0wxbVpub1lyZU5IMFlUVGxYbGdoUWttQ3AKWnFCM0VpWm1XOFBINm5SZHdCZHFlQ3hMWEtSNlNCRzNvM3luSklzek1pRG9wL1JUcDJZdzQ4WUxwcUNZMEpydQpkZ2FCMSt5UVNwRGdkNkZXSmpjVmc2Sy8rd0VVRHQxR3A4MjlsdjN4dHFLRXQ3eStLVE9Vd1hEVXBUd1k0S0gwCmY4UXQ1VWxVZVRnb21GdjlyK2RMdDdPQ1NNUGNtaHNyMlJDSytPU3Z6L2cyd09DcVNWZlA3d2ZBRFhKL0R1b0gKQmdHdVpwR1NvTVlTSUJXNzFuL3NWdTZtNHJJa0h3MkJ4S3lBalFJREFRQUJBb0lCQVFDUVR5Y2xZVk54TmRCVQpUb1NNeHFWZWlWODFjeFlaZ1VUWUJmU1V1cG9aZ3IyRXdyaSt6d1ZuMHdlMklwSEJLM1Fiam1VVVY3Q0ROZlpiClEyS3RpTHZBdmJERG00b0Y5WHZUWVRxdHBDNEJETXVVZjdqVmt5ZktFREMxYm9YWEw0SzJ5eGNJMUp4b2dub2wKZWcrL1A3cHZaNk8rQ1lmOUUySUNjVzQ5ek1UQVNCZmkxSEE2ZGFmcFlCc0svODNJNUtwNjFwa1E3MlM5YU9oQgpNVkhPUFFzUG5GY3RrSFhReVlKdlFOT2sxT3pEWmZPQVAvcXpGVlZjOG9nZytBUFpxYzg5cGh4aWdNVjNDWk9PCnNhQ0dFcGUzc05MdGdFVXRRcWxYdm5ETFhBZ2FHZjVOVnRJWU1FWWJnUHlzblZsOTBibnFEWXNGVGRHV2ROYzcKd2VWSnUzZ0JBb0dCQU9LbUdRQVJJalFRYUFGYk55RVI0ODRzMVNISkZyVnUwQlU0RTdMMjVpaktBckJvTDY0RgpqU0V2b29BWWtVNDB4KzNkTTZidUxnbE4wVVZnSDNEbUNjd1ZFZk9hQkpMN1VQK2lUVklQRUNCbEVoZmcwK0E4Cm9SZTdtOHVUa1o3aFFXMnRxSGdUOEZrZ1FDOUVTR2xBRnNCcUJqbTQ5aEw5dHJLMHh5NlB3NWRCQW9HQkFQR0IKNWorYzdieE9aTGxJWHgwektrWC9aVU5lb3VHVzVvNTBIRFVabVR0ZHJUSzE0MGoxNGVhaXgzZk42VEZod3JPUgpBQXJnaDdIQVRxNjVoNkNzMHlOQktiMWZsaW5yemdQenZ2STg1MG1aQVZlNVVrRGNvM1BYaWoxdnRxZFJmNWUwCk1zcWlPd09mbzI3Ym4yREQ5eER1bGRIT3hJcWNCVG5abjNMeXlZSk5Bb0dCQUpBV2lFNUNsandETWh1cW9hR2sKZmU3VkVhb283UWJySzk1UmlEUitRbFFzR1FtTk1zS3ZSTW1VUHZxd282L1VYa1lhR254RmIzNzZ1ZEFoQzl2NgpZc0FicFEzNUhHOVUxbW11QlBubUdacCtwc0lIYkt0aDRBZjJmVlV1dTZVR0QxSnExRytDUFlwcnRtSldScktpCnk5UUhrMjJlNk5HcCtqd2lNWDZvWnZBQkFvR0JBT0pXK09DVGhhZGUzVDFjMjI5MVhXQWUzTnZIM09XSjFHaWIKM3pmUTF2QnhlZm8xeDE3QXVzZTV0VEhOOUlnSWRENXdYZGJUMmJpNFg4V1hNY3BmVHI0U3V6aTFWZm5SK3RGdgpabnlHb2Nrek1iUHlobWt0bjY3WXljR01hbVhqbHE0cC94UXorUlVMVDFOOVY2Q0w2SWlnNGg2eEp6ZzB3eDBWCm5UOVExWlJkQW9HQVRYK2Z1K2paMVcwM0FHVG8rZlpDekVxU1c1YXdtWVhMYUlndVdtNWpoRW0xVDNPVzQzZU4KWnNuNmlVRVczSnd6WWttVWp4S3pQUVRLRFRpWm1SMi9sd2g3aTlhUkpYNFRIY2NmOS9Eb3haMTMyT0hMZk8vNgpaSDNCb1Qya3JQR3IxRjBXdHY3b1V0bDlUR1NqOENsa080QjhOWFdGRmw5YkFVK0pFMXZad3Q0PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-apiserver-to-kubelet-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRakNDQWlxZ0F3SUJBZ0lJTWlINlpnRDR0RVV3RFFZSktvWklodmNOQVFFTEJRQXdQekVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Ta3dKd1lEVlFRREV5QnJkV0psTFdGd2FYTmxjblpsY2kxMGJ5MXJkV0psYkdWMApMWE5wWjI1bGNqQWVGdzB4T1RFeU1Ea3hNRFUyTURWYUZ3MHlNREV5TURneE1EVTJNRFZhTUQ4eEVqQVFCZ05WCkJBc1RDVzl3Wlc1emFHbG1kREVwTUNjR0ExVUVBeE1nYTNWaVpTMWhjR2x6WlhKMlpYSXRkRzh0YTNWaVpXeGwKZEMxemFXZHVaWEl3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRFYwVjhWTlcrOQpZVElFaCtZNnJxazNDNFFYUWEwQ0lFOExPSnRiUVZNS3hSbGV4N3E5K1JSRjlyeXZRNEcyTGZZaDBIK2ZUZHhSCmh4M0hZakYwZzR5c0JJdldabWVoaXQ0MGZSaE5PVmVXQ0ZDU1lLbG1vSGNTSm1aYnc4ZnFkRjNBRjJwNExFdGMKcEhwSUViZWpmS2NraXpNeUlPaW45Rk9uWmpEanhndW1vSmpRbXU1MkJvSFg3SkJLa09CM29WWW1OeFdEb3IvNwpBUlFPM1VhbnpiMlcvZkcyb29TM3ZMNHBNNVRCY05TbFBCamdvZlIveEMzbFNWUjVPQ2lZVy8ydjUwdTNzNEpJCnc5eWFHeXZaRUlyNDVLL1ArRGJBNEtwSlY4L3ZCOEFOY244TzZnY0dBYTVta1pLZ3hoSWdGYnZXZit4VzdxYmkKc2lRZkRZSEVySUNOQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBRApBUUgvTUIwR0ExVWREZ1FXQkJUY2szVk50RDM1ZlVjOFJMWXdBZldpSnRpZVBEQU5CZ2txaGtpRzl3MEJBUXNGCkFBT0NBUUVBd3dXQ085UUNzTjZuZi9sWGd3aVJnS21WYWY5cE5aT2ZBcm04aW9LcFpWK3lyYkVlWDVjRnNHUlQKa0FESktjaGg5SDEvcVppRDdNUFQzZzJuWkdoYjlNa0hsWFZCU0RUSDlTODFYbmt6UGZHcDhDZXNMYXZWVko4MgowdDU1NmV6eldqcVFIU2szcUs2Q2ZUMEs2RkswcXFRNDNYTW1sRGl6Q1dQUlMzaUtPSUcxZENJbmZNQ1BmQ0FGCkhHZEFNcHJMUWFoS0lTeWJvY0lBWTU3SmhRNlVVVThnbVFWTWtHb0xwdXVRbDNuOVcwS1RIeVIrSTJNQjBsTWwKVlV2dktMQkVvVXRQOTVpa0hkTVViRkplcGpZU3dyQ25qWEMyQ2ZucUROVW44QXJRTE9TUXlsdXZmdC9URjY1RQp6RkFJM0ZuenUyci9rTDRIT2RMZ1V3U0FSRXR3NUE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeControlPlaneCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJRmROMEVJcnV2Y2t3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd2tUVGVIRFBNcFZXSXJrZUljRlBwbThMZks0awpYWEtycWxiNlZheG5YZ0JrZXJubFpsYzFJMFM0bDAvaGF1ZHZ2RkRPWTAvZ20rRFBmNmk3eXpFQVozcU0wbGd3CkhIYXIyUWlRam5YRjFsc1dVK0ZlcGJNdU1nYlI4Ly9Td21UbGdneGp1WXJ5TUVKSFBuSXg5TGJrdmV3a1hFNXcKQ2RvZGRSd2ZKTkhWZXhobENMTVlQc1J4RE1lVVZqQ1lmQmU5SkNqeEVmK3gzOUpwN3RVSzZ3TmFLY3BHK1N1dApvTElHN0tyVEhtZ3JxQ1d2bWkrUWcrTXJvZnh2MWN1OWlvV0ZQcWdIRTliWk5mZzBvUFBHNWxrb1IvRlNyMWlmCjIwV1NhSjcvRSs5ZEx3ZzZaVkdzSW5ta0JGQUFKUHM2emFwRXlVOVNlaTQ4YThpOER5NnA5bkE3dFFJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpxa0xrdzdudXpleDBZVi9LMkJldlZtek5FODR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZ3eElVbDZXMWJoClRZZG5vTW9lSWpZdlRVUWV2aFI1VUFiTmFUZGora0kxOGx5L2NRVlhmVmhPNCtoM1oxMXFNUWtMMkFzdnNnT2cKRFJtQ0tJN3V0MmVFb0JKcjVneDZ5UE1NUVdXbVlWdURKSm11Z1MxNnUyTVlsZzY5anBQRFdFL0gxR1crdnZpbwo4UndCbTRyb09XZ1RQWU9WcUVMRTFreVN4bmtDWENCZEhoTWNUVGhTZ2l2MVVrL2xzZ2NpLzRGMGFkem42V3RKClVzVFdkek83V05lVllVUzgrVDhDQVRjOGVERGRCb3Y3QklxVHZVaUNyUjJGY2J3UWZzUm5RYUFTeEJLZzdTMTQKUE5DMGovYUMvWTVXM0JwdGE0V3JaVjVTbUNLelZQbEhoZGlNK1h0M3VqQnFVOFNkR1BkanpjZVhCRWdyWnNPdApCTVF6ZGM4NHpEQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlhRENnSS9nUk9yc3dEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05NVGt4TWpBNU1UQTFOVFUzV2hjTk1qa3hNakEyTVRBMU5UVTNXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFKcnVPZmc5K3NsYjEwZXdIRlcxVWt0bXhhVVkzMXJXClM5dTV2UTdtSGNMT2h0c1hQeUlpOXFFbWQxUXkrd2ZnRUdwUm5DaGYzUkdLNVAxdGc0WXo3ZkkxYUpWZWlGK1cKME5ZdGxVOE1MbjVEVytlVnNKN3hwVk52VlNxVTFBalJTUVlqQ0Uvcm0zbGJBemtlOEU1RzVsbEJHanZxVXVyYQo1a2htWm1VSjlKNXdjbDRiSFRVelc3MzlQc1RVUG92TFdZM1ZCLzFiN3ZTa1pCaG9XTzh1WXUxTEJJS1RCdDBqCjF0Wnl3UWxLTFNDRkZWVHdPTHJRazRteEJYalhyVUwxTFZsSmN0N3BvU1BVb25DMWpFUFFwd1hYU0kxam9MUFgKbmlnQWNrRms2bzdwZk1MRVhlUCs0RmpObnJrN25YaUNsZkxqUTdiRjZ3M2tJem1kM0E2Z1l5TUNBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQndaCkh0a2lIbjJrOC94eHI5RVRMZnRUVXdFOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmxLU1pDT2dSaHhKUjYKMEpFa3Q4KzdGMk5XSktXMzlXNUV6VE1BOGtPZDlJUXQxVGtLNnFEYlhjc1YwY3BDNGFzWm1ZdU5UY2NKZUZHTQorcHlhTFZ6TU5DVVdxUHMrcUh0UElsY3VJQXNWNVVGZ0FYMkFPQ3dOU0NnNTlwNEFmVFhWblk3VWNJMk1Xa3NPCjVNdjNOTExmRE9heVVEYk9zY3FjeFpVOTdIWGxST2F1cU4xZ2Y4NHVJNEdmV2JBQUlCdEZ3RUhwbG55UG9iakYKSVFGOUw1NTlVdVhJOTRoSzlDVEVaSUNhemxsSGZGYWk2QitpZWVGZ2FYQThud0NwTzFwYk4rdVRiQkpEY05GUApWbHI4ZWdFZlEwVTArUnNWZlJTaE5wYzRGTE54S3lsV0I3eThyT2pFOHh2ZkJqMVRrZ0RZVDdQYnV4UFVLV25xClMvYm1pQiswCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJRmROMEVJcnV2Y2t3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd2tUVGVIRFBNcFZXSXJrZUljRlBwbThMZks0awpYWEtycWxiNlZheG5YZ0JrZXJubFpsYzFJMFM0bDAvaGF1ZHZ2RkRPWTAvZ20rRFBmNmk3eXpFQVozcU0wbGd3CkhIYXIyUWlRam5YRjFsc1dVK0ZlcGJNdU1nYlI4Ly9Td21UbGdneGp1WXJ5TUVKSFBuSXg5TGJrdmV3a1hFNXcKQ2RvZGRSd2ZKTkhWZXhobENMTVlQc1J4RE1lVVZqQ1lmQmU5SkNqeEVmK3gzOUpwN3RVSzZ3TmFLY3BHK1N1dApvTElHN0tyVEhtZ3JxQ1d2bWkrUWcrTXJvZnh2MWN1OWlvV0ZQcWdIRTliWk5mZzBvUFBHNWxrb1IvRlNyMWlmCjIwV1NhSjcvRSs5ZEx3ZzZaVkdzSW5ta0JGQUFKUHM2emFwRXlVOVNlaTQ4YThpOER5NnA5bkE3dFFJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpxa0xrdzdudXpleDBZVi9LMkJldlZtek5FODR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZ3eElVbDZXMWJoClRZZG5vTW9lSWpZdlRVUWV2aFI1VUFiTmFUZGora0kxOGx5L2NRVlhmVmhPNCtoM1oxMXFNUWtMMkFzdnNnT2cKRFJtQ0tJN3V0MmVFb0JKcjVneDZ5UE1NUVdXbVlWdURKSm11Z1MxNnUyTVlsZzY5anBQRFdFL0gxR1crdnZpbwo4UndCbTRyb09XZ1RQWU9WcUVMRTFreVN4bmtDWENCZEhoTWNUVGhTZ2l2MVVrL2xzZ2NpLzRGMGFkem42V3RKClVzVFdkek83V05lVllVUzgrVDhDQVRjOGVERGRCb3Y3QklxVHZVaUNyUjJGY2J3UWZzUm5RYUFTeEJLZzdTMTQKUE5DMGovYUMvWTVXM0JwdGE0V3JaVjVTbUNLelZQbEhoZGlNK1h0M3VqQnFVOFNkR1BkanpjZVhCRWdyWnNPdApCTVF6ZGM4NHpEQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQotLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS0KTUlJRE1qQ0NBaHFnQXdJQkFnSUlhRENnSS9nUk9yc3dEUVlKS29aSWh2Y05BUUVMQlFBd056RVNNQkFHQTFVRQpDeE1KYjNCbGJuTm9hV1owTVNFd0h3WURWUVFERXhocmRXSmxMV0Z3YVhObGNuWmxjaTFzWWkxemFXZHVaWEl3CkhoY05NVGt4TWpBNU1UQTFOVFUzV2hjTk1qa3hNakEyTVRBMU5UVTNXakEzTVJJd0VBWURWUVFMRXdsdmNHVnUKYzJocFpuUXhJVEFmQmdOVkJBTVRHR3QxWW1VdFlYQnBjMlZ5ZG1WeUxXeGlMWE5wWjI1bGNqQ0NBU0l3RFFZSgpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFKcnVPZmc5K3NsYjEwZXdIRlcxVWt0bXhhVVkzMXJXClM5dTV2UTdtSGNMT2h0c1hQeUlpOXFFbWQxUXkrd2ZnRUdwUm5DaGYzUkdLNVAxdGc0WXo3ZkkxYUpWZWlGK1cKME5ZdGxVOE1MbjVEVytlVnNKN3hwVk52VlNxVTFBalJTUVlqQ0Uvcm0zbGJBemtlOEU1RzVsbEJHanZxVXVyYQo1a2htWm1VSjlKNXdjbDRiSFRVelc3MzlQc1RVUG92TFdZM1ZCLzFiN3ZTa1pCaG9XTzh1WXUxTEJJS1RCdDBqCjF0Wnl3UWxLTFNDRkZWVHdPTHJRazRteEJYalhyVUwxTFZsSmN0N3BvU1BVb25DMWpFUFFwd1hYU0kxam9MUFgKbmlnQWNrRms2bzdwZk1MRVhlUCs0RmpObnJrN25YaUNsZkxqUTdiRjZ3M2tJem1kM0E2Z1l5TUNBd0VBQWFOQwpNRUF3RGdZRFZSMFBBUUgvQkFRREFnS2tNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGQndaCkh0a2lIbjJrOC94eHI5RVRMZnRUVXdFOE1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQkFRQmxLU1pDT2dSaHhKUjYKMEpFa3Q4KzdGMk5XSktXMzlXNUV6VE1BOGtPZDlJUXQxVGtLNnFEYlhjc1YwY3BDNGFzWm1ZdU5UY2NKZUZHTQorcHlhTFZ6TU5DVVdxUHMrcUh0UElsY3VJQXNWNVVGZ0FYMkFPQ3dOU0NnNTlwNEFmVFhWblk3VWNJMk1Xa3NPCjVNdjNOTExmRE9heVVEYk9zY3FjeFpVOTdIWGxST2F1cU4xZ2Y4NHVJNEdmV2JBQUlCdEZ3RUhwbG55UG9iakYKSVFGOUw1NTlVdVhJOTRoSzlDVEVaSUNhemxsSGZGYWk2QitpZWVGZ2FYQThud0NwTzFwYk4rdVRiQkpEY05GUApWbHI4ZWdFZlEwVTArUnNWZlJTaE5wYzRGTE54S3lsV0I3eThyT2pFOHh2ZkJqMVRrZ0RZVDdQYnV4UFVLV25xClMvYm1pQiswCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURRRENDQWlpZ0F3SUJBZ0lJYlhyUHVxdkQ2ekl3RFFZSktvWklodmNOQVFFTEJRQXdQakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TZ3dKZ1lEVlFRREV4OXJkV0psTFdGd2FYTmxjblpsY2kxc2IyTmhiR2h2YzNRdApjMmxuYm1WeU1CNFhEVEU1TVRJd09URXdOVFUxTjFvWERUSTVNVEl3TmpFd05UVTFOMW93UGpFU01CQUdBMVVFCkN4TUpiM0JsYm5Ob2FXWjBNU2d3SmdZRFZRUURFeDlyZFdKbExXRndhWE5sY25abGNpMXNiMk5oYkdodmMzUXQKYzJsbmJtVnlNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTUxSjJUd1V5M3NFVgpOSTlJYVZPV2g5UW0xMnpEWnpGdUgzbE5wRU0wWHRENUFGVnkzTzF3N3dPUE1BaVZQWldFSnI3am5vL2dKRkpyCmw0Tkx6c0hXWHhhZ293WVM5ZlQvRDUyQWI0WTdKeFdsVUFvRkxKSHBERTU5aEJUbTFIaldjZGhZSDYwQW8yWUsKZ0xzRFJiT0Jhd2ZrUXk4cjFFVVVlcXZMcUtFSnBkUXE5Z2tXRG9ZckVNZTdLQ2RyU2R1UGxBT1psSzRFNmNtVQpCT3k5ZGpwZzg1cUU2dGpseTJHbWRLdFFjMWV2ekdLcDUxZCthdmY0Rk9UM1pWZ3diVkVud1dTWDV1NWFOL3BKCnBCc0REVEtzNjdPRTlGN0czcVM5ZVNwZGxyVlFRRGNxcHNyYkM3ZEVCcGxxb3AvYytpVUloNkloc2dRZFdiRzEKZUxYeEVZU1RFUUlEQVFBQm8wSXdRREFPQmdOVkhROEJBZjhFQkFNQ0FxUXdEd1lEVlIwVEFRSC9CQVV3QXdFQgovekFkQmdOVkhRNEVGZ1FVUXJrbU8wRjc1VVh0VVZ6Zi9vZzNyNHlLM1Bnd0RRWUpLb1pJaHZjTkFRRUxCUUFECmdnRUJBQndnSUNWQTlHRU5IMzVpNFpNeEdWdWg5QTJ1c3lOSUQzSW1ja0tIUERQVjRWSjJwbmY5cjlJM2lQRTQKQ1djMlU0dUR5N2RUbWVkWnVjdGJLMlhtLzd4dHpFNjJvcmkwZ3EwYVllN2hKTnQ1ZllyRUdmNjh2cnJyNHBzawpwRUJlS2YwWnhrNmVlYXY5Z2MrbVEveEFmZEtqTW84VXpnNmhYSGdHTk52dk9sdm9LZ1QyOTN3bG5FelhjSGRtCi9BQ1g5VGVWTHNCNFZpR1BlYlZYNXhmVG1ZODZRQ1hCOWdQNndneU1aS3BqRnFuYjc3WE9WbGo3TjNHRGUzbDIKYkw2cGpQWC8ySGVhbWRvTWZ4MXY4SGJ5NlhQd2tRR3VZNndiRVQ0T1lNV0l3UVpTZHRXbU9EaTJFSkNIemRLbwo5U0tpbUZOOFRQbG1KZXA2R0JlWXBTWGQ3R1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0KLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lJZWl6M1lqQ1RIRlF3RFFZSktvWklodmNOQVFFTEJRQXdSREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjJhV05sTFc1bApkSGR2Y21zdGMybG5ibVZ5TUI0WERURTVNVEl3T1RFd05UVTFOMW9YRFRJNU1USXdOakV3TlRVMU4xb3dSREVTCk1CQUdBMVVFQ3hNSmIzQmxibk5vYVdaME1TNHdMQVlEVlFRREV5VnJkV0psTFdGd2FYTmxjblpsY2kxelpYSjIKYVdObExXNWxkSGR2Y21zdGMybG5ibVZ5TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQwpBUUVBMUdpcnJ5MTUrSllxMjloT2NrNjJOUDJReWpmTTl6NGNLWC95ZzBLNU8wN0xpTmZLV0JxSEFTNWJHUlJXCmNCNHlzTVlibFJLTVdvU1d3ZmJuaGMwTFhtSFZFOGUwSDZUOUc2QVFVcjZ4UXp5Q1NKd052cnVuQWxYSlUyaDYKeTI3bXU3TFY2S3N1TG9nZ051Ukd0Z2VwUXR0RGcrdkJCbkw5WWw0WTZJSkhpanZTNWErYnd2QXBRK2lIQWJsVwo0VWg3NFhRMHpkTFcrZXBCWFRQb3NUT3hvdS9GQWdSZGFBVHJwT20za1hhS2NSV1NjdU5oZ3VNM012WW9ZK3F4CmxFUUdrL2FMajJNbGJlV1M2NU5NWHRxb3ozcWNZenpxa0dzcFZkaTBwYSttdzdOR2VjWis5OEVveWFmZWpjTFEKN0JkSnVUU21BVjBhQzNJY05jbG42NWV6SVFJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRApWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVUhSTFIrSWVzVVhuU05vbW8zZTV3UmYzc0xVMHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUtRTkV1UjFxSFZiclIzbkRVRHpvWGRQRkh6L1ZtQTBZY1BCcU5DUnFIUlEKTHJrd0xiMzRUaG1Zbm9BYnlLd1hiU0RNQ25kc211S21HVnBLSWw2R1k1NVRueG9ldDlYdkNTOC9SM1pmZFdiLwpkV0k5RTdVVVBMTDh6Y1A1WlBZMnZFTjd3eVJ6dEhYempOS0x3dEFYQ3VUM00wanl3NG80WjRTeGJKK2phWU0zCmwrY0pOeG5hNTZxZHdJMTN3ZGpUZ0RoSERVODNKbC9ZMEUvVnZjNnh1aE1hK2RQTk1yeDUweFZPdFVTNHlQZHgKbGM3SjdrclhHME0ybklFLzRTTzFBb2ZnRnNBNzhpT3pibzBEVE9KaE56cGkwYnE4NUErSTBpeHJQTVFtL2hkbgo0eWRONDIrOVkzelhIeVFXUytDRWNsc2trVkFSbCtDcDZ2SUN2c2RDcjE4PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.KubeControlPlaneKubeControllerManagerClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJWGFIWVkyQlZ0V3N3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3TlZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxoVkJoYkdKemtEN21ZV0w1WmdCdkFaYXBVcnZlRVJEWHdSU01SYQpUejM2Qmo2UW4rZWpBVGgvVXNIbUlhU2VkQlJkc25YbmJMQmU0V0psWHNJeWRiaUFURUJzeWhPYVhnWEFkdytzCkFvK3ptb1R6OVMwWGdRajBNUFNxdmlHWGJ2Rnpwc3cxNk91UDBvWndBMVBxK0UrS0p2NU14aHJQaXkxUE4wUEoKY1d0QmU0YXdGaW1oT1ZTdWJndlVUQTdnOExvVWg1SGVrMHJTdUFoS1M4SWIya0kwWGgxMWtXZld6TlU2VTE1RApHSmZjUWViVzZTMVdNK2VWdmJJM2VmSDdFN2t4amZEZHBNZk94QzdDZENaNEdyaENxeWNpWnpQaTdWRHZzNFB5CkxzRWhTWGhXR2E1M3FiWWZISUp0Z3E2TC84cG9MTVBhejdVNEdEcHJLS0YvOHgwQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGS3BDNU1PNTdzM3NkR0ZmeXRnWHIxWnN6UlBPTUI4R0ExVWRJd1FZTUJhQUZLcEM1TU81CjdzM3NkR0ZmeXRnWHIxWnN6UlBPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDeXVXLzJnTmZmWnYwZ0ljVmYKaUpZZFo5d0VxcWQwRm9KRmpwQzdNTVJEMmV6K1U4STNRZ1BwUzJ2N1NNM3c1UmluVnozZDhSeVMwQTVzQVVZNwpsTkt5cUVPeTVsNVBmSDNhOE5adlBlL0hMOHFqajcrdmxsd0tnMTZySFJneGxpaVNJNlFCN013WWdSdEJBaFgwCmN3emlPcXNRR05hV0hJWUM1VGt5UGdoSk5DcXZmcW5xVjVTTmozN3VwcW10dmticnZhNjRrRHYvV1dKU1h6aXoKZVBkZHdnekYzWGxCT2JuV1BGRXo0aC9SQWk1Y2pSemEveEw0ZmJ0MU1BbVV3L2h5Yi8xMDBpV1VpV3hYMXFtVwpiWG1VQzdZWHhaUkpqTjFSblJoalBmbFQrb3orMUZwRmFYS1FpYk1BcnNmNXRpdDlPU0MvVUUwdzVLOGhzWEpWCkxtU3gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUZVR0ZzWW5PUVB1WmhZdmxtQUc4QmxxbFN1OTRSRU5mQkZJeEZwUFBmb0dQcENmCjU2TUJPSDlTd2VZaHBKNTBGRjJ5ZGVkc3NGN2hZbVZld2pKMXVJQk1RR3pLRTVwZUJjQjNENndDajdPYWhQUDEKTFJlQkNQUXc5S3ErSVpkdThYT216RFhvNjQvU2huQURVK3I0VDRvbS9rekdHcytMTFU4M1E4bHhhMEY3aHJBVwpLYUU1Vks1dUM5Uk1EdUR3dWhTSGtkNlRTdEs0Q0VwTHdodmFRalJlSFhXUlo5Yk0xVHBUWGtNWWw5eEI1dGJwCkxWWXo1NVc5c2pkNThmc1R1VEdOOE4ya3g4N0VMc0owSm5nYXVFS3JKeUpuTStMdFVPK3pnL0l1d1NGSmVGWVoKcm5lcHRoOGNnbTJDcm92L3ltZ3N3OXJQdFRnWU9tc29vWC96SFFJREFRQUJBb0lCQUZPd3Jxb0tYMmFBaFcydQpKdjcwTEZJNGgrNmdSSDU2R3BBNDNMdmhjTmJudkl3Tlo3eG9nclpmQUhqdWZsbmFZME9YNHQycksrckx1VExPCmFYNXNJSXliRzRPb29QclRmRnJLTG9SY0NYR3JEcjNNY1lWK2hXUkdVaS9Ua2ExNHJyTkxXZkNmalZmZUhheFMKRVFDNXp2RjEvUXc2V1R0MC9YQ2Q1YTZPT0VPRVdxK0E0VGIyNDRpcklRRGZ5UWkzaTJwRTkvdkhRaDZCN2RsTgpKb3RZT091Wi9PRU8xeE12UUtDS3VCWHY0eWh6eHdBc3RBeWFBMEZhanMyMnE2N0xrZTk4MVg3TUVDL1p5MGN2CjBPelpoSWE1SFFPREVxZUxoQ0w4ckkwaURtOVc4QytHeXc1YjZBa1JRM2ZjbStVK1NybCt3SjlIN0prOWl4cVoKZXhiTlZrRUNnWUVBNnU5SEdiYi92VG81azV6SW9pSVE5YzVOS0t0SVU2c2dXdk5TYVFxSTJkemlKK2xIeXpzawpoaEhUL2psc0ptejV5NmYrNWxuMXYvY1hFeEZpQ0lKSzl5bU1YMStTSmgzQzZUck45dFFPb3NpQWVRa0ZRdjNZCml4ZGxJVFB2RnNDVElNNmhzZWoycytnRFQ4enZHWEpaZ1NibE1QZUdnUFlPVzdWdmsxTWNJWkVDZ1lFQXlOdzEKVEZNczEyOHdCTW9NTUhzZ3pSdkVMMms2L2JhenpCNHcvUytqc0xQQ3kxUmVCWjRIVytkeUlaNnpnY2FjT2hLRgpSdVVNU3pMQXNHeThJdk5FNTR1V0daWW81Q2xlLzlRQUh1SVVZbUhxQ0Y0YlRJRkpRTDVzNnoyd2xzZ0d4dGc1CmV4T2Y3Z0t1dnBTdDA5eGNOSWQzNnhrcDBNTktvak1vVXhsZThzMENnWUVBMThZc1oxSE1VTi9KUWVvZDI4dXUKQ0JVU2lPZkg1aENtQnVLMExnV2U2M29Udk5SbFBDTjF5QzFYcDRiVjdmVG8rRU96dVoybU9FbVl4OHFQWDRGTAptUFp3RnFpUWNyR2k4dE12bUNQcnpWYVpxSkRBWkdjQkc3N0JBMTNQbWZZRkszeWN4ZXBScTZyTVg5NjVPNFhxCjd0UHFiSzdxdWtkRHFMZGJZdFJTWWdFQ2dZQVc4TGVSb1FwRkRLamlVeVV6UUV6TndEY1c1eURhcTB3N3F0TVQKaDZaZFh4cUhXSHBvajlUdFZUQyswRDVXT3hYS3VDVEtwUXhUWmxlRmp0V3A5RGpSYlNyV2YwVHFVaU5NZXEwTQoyZXRVRlRUQ2dlVUNSdDNUN0N2S2JrQkY2RkNGMDFvMVNWZUJ1b0swdDR4bTN3c1U0TWY4Yk9KT3VvOUNtUzhvCjFvUDJuUUtCZ1FDRWdERFcxT0VZVjdOM0duK1VRM1NlckNodTRIL3JUSkQ2VkY1ejRXNWNSZ2gvdlVFVlVVT0MKZmFpZTMyMTI0blFTSU9NOFZ0NjNlMzhKbEZRRUw1R0prUzBPTHlMcDJyVFdLbU1SeElxWm5WWDBObUhNdFdObQpabVQ2V0p6RW9UN0Y4cXhidEx4dmVicG1iTy9FVFhDYmt3dDRKTUZpcHl0UTY1cXN2NmVLbEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-kube-controller-manager-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdUZVR0ZzWW5PUVB1WmhZdmxtQUc4QmxxbFN1OTRSRU5mQkZJeEZwUFBmb0dQcENmCjU2TUJPSDlTd2VZaHBKNTBGRjJ5ZGVkc3NGN2hZbVZld2pKMXVJQk1RR3pLRTVwZUJjQjNENndDajdPYWhQUDEKTFJlQkNQUXc5S3ErSVpkdThYT216RFhvNjQvU2huQURVK3I0VDRvbS9rekdHcytMTFU4M1E4bHhhMEY3aHJBVwpLYUU1Vks1dUM5Uk1EdUR3dWhTSGtkNlRTdEs0Q0VwTHdodmFRalJlSFhXUlo5Yk0xVHBUWGtNWWw5eEI1dGJwCkxWWXo1NVc5c2pkNThmc1R1VEdOOE4ya3g4N0VMc0owSm5nYXVFS3JKeUpuTStMdFVPK3pnL0l1d1NGSmVGWVoKcm5lcHRoOGNnbTJDcm92L3ltZ3N3OXJQdFRnWU9tc29vWC96SFFJREFRQUJBb0lCQUZPd3Jxb0tYMmFBaFcydQpKdjcwTEZJNGgrNmdSSDU2R3BBNDNMdmhjTmJudkl3Tlo3eG9nclpmQUhqdWZsbmFZME9YNHQycksrckx1VExPCmFYNXNJSXliRzRPb29QclRmRnJLTG9SY0NYR3JEcjNNY1lWK2hXUkdVaS9Ua2ExNHJyTkxXZkNmalZmZUhheFMKRVFDNXp2RjEvUXc2V1R0MC9YQ2Q1YTZPT0VPRVdxK0E0VGIyNDRpcklRRGZ5UWkzaTJwRTkvdkhRaDZCN2RsTgpKb3RZT091Wi9PRU8xeE12UUtDS3VCWHY0eWh6eHdBc3RBeWFBMEZhanMyMnE2N0xrZTk4MVg3TUVDL1p5MGN2CjBPelpoSWE1SFFPREVxZUxoQ0w4ckkwaURtOVc4QytHeXc1YjZBa1JRM2ZjbStVK1NybCt3SjlIN0prOWl4cVoKZXhiTlZrRUNnWUVBNnU5SEdiYi92VG81azV6SW9pSVE5YzVOS0t0SVU2c2dXdk5TYVFxSTJkemlKK2xIeXpzawpoaEhUL2psc0ptejV5NmYrNWxuMXYvY1hFeEZpQ0lKSzl5bU1YMStTSmgzQzZUck45dFFPb3NpQWVRa0ZRdjNZCml4ZGxJVFB2RnNDVElNNmhzZWoycytnRFQ4enZHWEpaZ1NibE1QZUdnUFlPVzdWdmsxTWNJWkVDZ1lFQXlOdzEKVEZNczEyOHdCTW9NTUhzZ3pSdkVMMms2L2JhenpCNHcvUytqc0xQQ3kxUmVCWjRIVytkeUlaNnpnY2FjT2hLRgpSdVVNU3pMQXNHeThJdk5FNTR1V0daWW81Q2xlLzlRQUh1SVVZbUhxQ0Y0YlRJRkpRTDVzNnoyd2xzZ0d4dGc1CmV4T2Y3Z0t1dnBTdDA5eGNOSWQzNnhrcDBNTktvak1vVXhsZThzMENnWUVBMThZc1oxSE1VTi9KUWVvZDI4dXUKQ0JVU2lPZkg1aENtQnVLMExnV2U2M29Udk5SbFBDTjF5QzFYcDRiVjdmVG8rRU96dVoybU9FbVl4OHFQWDRGTAptUFp3RnFpUWNyR2k4dE12bUNQcnpWYVpxSkRBWkdjQkc3N0JBMTNQbWZZRkszeWN4ZXBScTZyTVg5NjVPNFhxCjd0UHFiSzdxdWtkRHFMZGJZdFJTWWdFQ2dZQVc4TGVSb1FwRkRLamlVeVV6UUV6TndEY1c1eURhcTB3N3F0TVQKaDZaZFh4cUhXSHBvajlUdFZUQyswRDVXT3hYS3VDVEtwUXhUWmxlRmp0V3A5RGpSYlNyV2YwVHFVaU5NZXEwTQoyZXRVRlRUQ2dlVUNSdDNUN0N2S2JrQkY2RkNGMDFvMVNWZUJ1b0swdDR4bTN3c1U0TWY4Yk9KT3VvOUNtUzhvCjFvUDJuUUtCZ1FDRWdERFcxT0VZVjdOM0duK1VRM1NlckNodTRIL3JUSkQ2VkY1ejRXNWNSZ2gvdlVFVlVVT0MKZmFpZTMyMTI0blFTSU9NOFZ0NjNlMzhKbEZRRUw1R0prUzBPTHlMcDJyVFdLbU1SeElxWm5WWDBObUhNdFdObQpabVQ2V0p6RW9UN0Y4cXhidEx4dmVicG1iTy9FVFhDYmt3dDRKTUZpcHl0UTY1cXN2NmVLbEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-control-plane-kube-controller-manager-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJWGFIWVkyQlZ0V3N3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3TlZvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxoVkJoYkdKemtEN21ZV0w1WmdCdkFaYXBVcnZlRVJEWHdSU01SYQpUejM2Qmo2UW4rZWpBVGgvVXNIbUlhU2VkQlJkc25YbmJMQmU0V0psWHNJeWRiaUFURUJzeWhPYVhnWEFkdytzCkFvK3ptb1R6OVMwWGdRajBNUFNxdmlHWGJ2Rnpwc3cxNk91UDBvWndBMVBxK0UrS0p2NU14aHJQaXkxUE4wUEoKY1d0QmU0YXdGaW1oT1ZTdWJndlVUQTdnOExvVWg1SGVrMHJTdUFoS1M4SWIya0kwWGgxMWtXZld6TlU2VTE1RApHSmZjUWViVzZTMVdNK2VWdmJJM2VmSDdFN2t4amZEZHBNZk94QzdDZENaNEdyaENxeWNpWnpQaTdWRHZzNFB5CkxzRWhTWGhXR2E1M3FiWWZISUp0Z3E2TC84cG9MTVBhejdVNEdEcHJLS0YvOHgwQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGS3BDNU1PNTdzM3NkR0ZmeXRnWHIxWnN6UlBPTUI4R0ExVWRJd1FZTUJhQUZLcEM1TU81CjdzM3NkR0ZmeXRnWHIxWnN6UlBPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDeXVXLzJnTmZmWnYwZ0ljVmYKaUpZZFo5d0VxcWQwRm9KRmpwQzdNTVJEMmV6K1U4STNRZ1BwUzJ2N1NNM3c1UmluVnozZDhSeVMwQTVzQVVZNwpsTkt5cUVPeTVsNVBmSDNhOE5adlBlL0hMOHFqajcrdmxsd0tnMTZySFJneGxpaVNJNlFCN013WWdSdEJBaFgwCmN3emlPcXNRR05hV0hJWUM1VGt5UGdoSk5DcXZmcW5xVjVTTmozN3VwcW10dmticnZhNjRrRHYvV1dKU1h6aXoKZVBkZHdnekYzWGxCT2JuV1BGRXo0aC9SQWk1Y2pSemEveEw0ZmJ0MU1BbVV3L2h5Yi8xMDBpV1VpV3hYMXFtVwpiWG1VQzdZWHhaUkpqTjFSblJoalBmbFQrb3orMUZwRmFYS1FpYk1BcnNmNXRpdDlPU0MvVUUwdzVLOGhzWEpWCkxtU3gKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeControlPlaneKubeSchedulerClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJREY1MWdtYU16NWN3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3Tmxvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxwTE1Sc05ySkN5Z3VkMzdOeUpEUlh0T1VTVEw2ODNXTlNCcXFEWAovdjR1UFh2aElMU2NFUE5LVEhSNWFiWGR4UjR3ek9kUTZ4cXIwTWlrb3U2aFVuYUMyMUswT25nbzdsOVp1U1BPCmpZUU1ITDNlLzlQQjVrQStmNE5sci8wM1BCci9qYU52ZTMwVGtDY2RZN1YzcG5tMmx3ajNoQXhXbW4vUFNuRkYKNlJaSitmL3dUek1YOXFRTU5vd0lUVFhNbzVUQ053VVc5cU1mZUl5QjdLb2JqdVFwSVh3dVBDTDJqcVFBSUJHKwpLcUlZWmVkeis0ck5Ea2JTclZ1NldXZ1VqU21PZ0FjeWRIMUhRZFhwV1lyKytXbmE4Z2pHVVk5eVQ1V283Uld3CmxsWGpENTJXdVJBK2pDN0lvM0w4ZWd0S0FRTTZhRzNJdDloOWZDaXg1ekRVd2xVQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGS3BDNU1PNTdzM3NkR0ZmeXRnWHIxWnN6UlBPTUI4R0ExVWRJd1FZTUJhQUZLcEM1TU81CjdzM3NkR0ZmeXRnWHIxWnN6UlBPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCK2JzZDgrZVZNNThQMStQOFkKcWNqczdQQ1l6allmSy9hMmIwd2xSMHUwc0xOdU8rMENHc3ZCdWJYM3puREFyVFUzSXhOQ3hlaUxMZG43akNpYwo0SXVpQXlTT0hTSVYyQndNWHRaQzhGOVNmRkpuUE9SdVpZeklTOEY1b0ZPZnJ3K0NiK2RLeGsvVDM3SHJGYUdDCnZiL091eklqL2VRYUtIQ1QrWU9zRDI2L0ZRa0ZpcGpHekRiMU9qVTR0aGFjZ0VmR3dadVhuV2I1REhqOUlRTkEKWWEzeGtnL0xIM1VlaUxkdnJab0NIdVpoaERpK3E0QXZKeVlJdk5Ha2R1b0tGalppcEhzRHdIaWlLcnZla0l3MgpvbVh4RGMzSGdmb1IrTTdnVDQyS2J6WnZDNFEwU2ZlWk80elRWSmhJM05abVhDVHNsNkZmbEltMUYwTXRrR0xuCjNrdUwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWtzeEd3MnNrTEtDNTNmczNJa05GZTA1UkpNdnJ6ZFkxSUdxb05mKy9pNDllK0VnCnRKd1E4MHBNZEhscHRkM0ZIakRNNTFEckdxdlF5S1NpN3FGU2RvTGJVclE2ZUNqdVgxbTVJODZOaEF3Y3ZkNy8KMDhIbVFENS9nMld2L1RjOEd2K05vMjk3ZlJPUUp4MWp0WGVtZWJhWENQZUVERmFhZjg5S2NVWHBGa241Ly9CUApNeGYycEF3MmpBaE5OY3lqbE1JM0JSYjJveDk0aklIc3FodU81Q2toZkM0OEl2YU9wQUFnRWI0cW9oaGw1M1A3CmlzME9SdEt0VzdwWmFCU05LWTZBQnpKMGZVZEIxZWxaaXY3NWFkcnlDTVpSajNKUGxhanRGYkNXVmVNUG5aYTUKRUQ2TUxzaWpjdng2QzBvQkF6cG9iY2kzMkgxOEtMSG5NTlRDVlFJREFRQUJBb0lCQUhlazF2TFRBMk1pNHFPYQpCOHRUVWM0bFBzUmw2eGdTNmNBQlR2NWgrbWh3ZGhoYmE4L1M4NmZzcmRHWU1HWVcrZ1A3djMxSUlOWk9ScGExCjlkWmdVVCsvcHZBa3cvQnNDVHUvdWdIZkpGQU1IMkZxR005OUZrMW9WaWlqWkRXeUJhNHBObVFpc3lLUEwrT1AKSW54blRjbVpsTUt6aEdFUU5jV2o4ZUZ4enRMNnNhaUUrc2tWSUcwYlNIRDJuaEJxZlREank3QnN6eHBWMm9CQwpCZVltd2VBK3BkTjFYZnFwQUpjL1htTGRGOEVWd2hvbitIdVpmcXNnZGZPSUlhdTFaalFiOWlaOC9sc0piMHZSClMyK09mNnltSFl6QXBlOVNEVlBTQWt1WElvdDVEZ1VqZXE3MmFsVmpaaHMrNSs2N2ZlS1lYQ1BSR3d2LytnUlcKSy9xa3JJRUNnWUVBODA1aGdHZml6RDFjeHlGYlVvMHhFYTR2enpYVHFGdzQzeVk5aVE3SWNmZ3dqTWNZOEZhTAozZWl2eEYvbTUxU2h6d0NyRHhsVGh2T3kyNmt0QkRLTlhHOWpMWjYzaEYyd1ZkSXFMOGJCbDZLbG1veXBYaHVjCmJYRkdwN2g5OHhObVkzZDdwZ3psQXpPZ3NYc3llRVB3OWdDcUhmTVlXNHlwN3hEdlpjVlhBc1VDZ1lFQXhBTlkKOHJESmdGMldqTEhuYjE2dVpBSVU4RElWWTFPYlZUcTlYUG5mNTFmMnBYVUVwWHlOS3puTXQ1aHJvT0hmTzQ4NQptVURqNUlBVHU3cUU3cDJOTmxhSGtDUEg1YVpQeUUzeUwycjNMNUdUcHJUU2htTDJxWnBNS3VKelFSYlg4Zkp5ClVZa1VIZmpTZFBBdUlBSnI5SFRvV0RsVmlTbjZqL01WTzlpL2VsRUNnWUVBdkpsSWFSR2VNM1ZwWW81UHpOalgKYlg0WlgwUzVNZXR5eGo5Tk9kMjBzT3VUTHJ6eWJ2S1hic2Q4My9yNjhOeWdwT1krc3ZDTjE3RTJOcUdYM0lZWApIOHpVRXp2Unc1QWdMUlpCVDFHQkpUcVZwZ3hkQ1M3Yi9kWHR6L3JwM3E5dUViSS9yY0tYRHZsSkdlcUdmOFVpCmxuNkRYNzNkWnJITjFCdkxocGNHMElVQ2dZQkNmWHd6dndKclY5UFU0QmhJc0E1cUFFYkgvOFUvajBIVzFIa2QKeStsRzJaRGlLV0t0SENYcTdzMWh6Z05jYktKRDJ0N0gvTG9SYmR6RHhvNkhQc3lERFRFcEZPb2ZIWjVjclF3bApSNXlYOTBMbHZ0clhHVVRnM1dWTytzZnI0V3JaT012TW1ycEhQSHR2alhXb0NBcEV2MDk5ZGQxdEROOWc2eTFkCndyV1pNUUtCZ1FEa1B4VUdpUW54OWNmUVcvRDBrWmFBZStQU09VUG1udjNVYmxIUEkyYUVVY2F6ODQwc2RLQ0IKcit1TjRIbE1BcTBpdHNyeHNZeDdITXhwNmt4V1pPSWs5cnNScm40R2JlVmFvcXQ0bTlrV2JoRzlyZEpGZml4aApYQmxoTXN1SlFXWkRnYkw4OVpQWUNwWHphVUpHbzJQRjBNeVMrVGdCajh4NDQzUjhtS1BjcGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-kube-scheduler-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdWtzeEd3MnNrTEtDNTNmczNJa05GZTA1UkpNdnJ6ZFkxSUdxb05mKy9pNDllK0VnCnRKd1E4MHBNZEhscHRkM0ZIakRNNTFEckdxdlF5S1NpN3FGU2RvTGJVclE2ZUNqdVgxbTVJODZOaEF3Y3ZkNy8KMDhIbVFENS9nMld2L1RjOEd2K05vMjk3ZlJPUUp4MWp0WGVtZWJhWENQZUVERmFhZjg5S2NVWHBGa241Ly9CUApNeGYycEF3MmpBaE5OY3lqbE1JM0JSYjJveDk0aklIc3FodU81Q2toZkM0OEl2YU9wQUFnRWI0cW9oaGw1M1A3CmlzME9SdEt0VzdwWmFCU05LWTZBQnpKMGZVZEIxZWxaaXY3NWFkcnlDTVpSajNKUGxhanRGYkNXVmVNUG5aYTUKRUQ2TUxzaWpjdng2QzBvQkF6cG9iY2kzMkgxOEtMSG5NTlRDVlFJREFRQUJBb0lCQUhlazF2TFRBMk1pNHFPYQpCOHRUVWM0bFBzUmw2eGdTNmNBQlR2NWgrbWh3ZGhoYmE4L1M4NmZzcmRHWU1HWVcrZ1A3djMxSUlOWk9ScGExCjlkWmdVVCsvcHZBa3cvQnNDVHUvdWdIZkpGQU1IMkZxR005OUZrMW9WaWlqWkRXeUJhNHBObVFpc3lLUEwrT1AKSW54blRjbVpsTUt6aEdFUU5jV2o4ZUZ4enRMNnNhaUUrc2tWSUcwYlNIRDJuaEJxZlREank3QnN6eHBWMm9CQwpCZVltd2VBK3BkTjFYZnFwQUpjL1htTGRGOEVWd2hvbitIdVpmcXNnZGZPSUlhdTFaalFiOWlaOC9sc0piMHZSClMyK09mNnltSFl6QXBlOVNEVlBTQWt1WElvdDVEZ1VqZXE3MmFsVmpaaHMrNSs2N2ZlS1lYQ1BSR3d2LytnUlcKSy9xa3JJRUNnWUVBODA1aGdHZml6RDFjeHlGYlVvMHhFYTR2enpYVHFGdzQzeVk5aVE3SWNmZ3dqTWNZOEZhTAozZWl2eEYvbTUxU2h6d0NyRHhsVGh2T3kyNmt0QkRLTlhHOWpMWjYzaEYyd1ZkSXFMOGJCbDZLbG1veXBYaHVjCmJYRkdwN2g5OHhObVkzZDdwZ3psQXpPZ3NYc3llRVB3OWdDcUhmTVlXNHlwN3hEdlpjVlhBc1VDZ1lFQXhBTlkKOHJESmdGMldqTEhuYjE2dVpBSVU4RElWWTFPYlZUcTlYUG5mNTFmMnBYVUVwWHlOS3puTXQ1aHJvT0hmTzQ4NQptVURqNUlBVHU3cUU3cDJOTmxhSGtDUEg1YVpQeUUzeUwycjNMNUdUcHJUU2htTDJxWnBNS3VKelFSYlg4Zkp5ClVZa1VIZmpTZFBBdUlBSnI5SFRvV0RsVmlTbjZqL01WTzlpL2VsRUNnWUVBdkpsSWFSR2VNM1ZwWW81UHpOalgKYlg0WlgwUzVNZXR5eGo5Tk9kMjBzT3VUTHJ6eWJ2S1hic2Q4My9yNjhOeWdwT1krc3ZDTjE3RTJOcUdYM0lZWApIOHpVRXp2Unc1QWdMUlpCVDFHQkpUcVZwZ3hkQ1M3Yi9kWHR6L3JwM3E5dUViSS9yY0tYRHZsSkdlcUdmOFVpCmxuNkRYNzNkWnJITjFCdkxocGNHMElVQ2dZQkNmWHd6dndKclY5UFU0QmhJc0E1cUFFYkgvOFUvajBIVzFIa2QKeStsRzJaRGlLV0t0SENYcTdzMWh6Z05jYktKRDJ0N0gvTG9SYmR6RHhvNkhQc3lERFRFcEZPb2ZIWjVjclF3bApSNXlYOTBMbHZ0clhHVVRnM1dWTytzZnI0V3JaT012TW1ycEhQSHR2alhXb0NBcEV2MDk5ZGQxdEROOWc2eTFkCndyV1pNUUtCZ1FEa1B4VUdpUW54OWNmUVcvRDBrWmFBZStQU09VUG1udjNVYmxIUEkyYUVVY2F6ODQwc2RLQ0IKcit1TjRIbE1BcTBpdHNyeHNZeDdITXhwNmt4V1pPSWs5cnNScm40R2JlVmFvcXQ0bTlrV2JoRzlyZEpGZml4aApYQmxoTXN1SlFXWkRnYkw4OVpQWUNwWHphVUpHbzJQRjBNeVMrVGdCajh4NDQzUjhtS1BjcGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-control-plane-kube-scheduler-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURYekNDQWtlZ0F3SUJBZ0lJREY1MWdtYU16NWN3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3Tmxvd01ERVhNQlVHQTFVRUNoTU9jM2x6CmRHVnRPbTFoYzNSbGNuTXhGVEFUQmdOVkJBTVRESE41YzNSbGJUcGhaRzFwYmpDQ0FTSXdEUVlKS29aSWh2Y04KQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUxwTE1Sc05ySkN5Z3VkMzdOeUpEUlh0T1VTVEw2ODNXTlNCcXFEWAovdjR1UFh2aElMU2NFUE5LVEhSNWFiWGR4UjR3ek9kUTZ4cXIwTWlrb3U2aFVuYUMyMUswT25nbzdsOVp1U1BPCmpZUU1ITDNlLzlQQjVrQStmNE5sci8wM1BCci9qYU52ZTMwVGtDY2RZN1YzcG5tMmx3ajNoQXhXbW4vUFNuRkYKNlJaSitmL3dUek1YOXFRTU5vd0lUVFhNbzVUQ053VVc5cU1mZUl5QjdLb2JqdVFwSVh3dVBDTDJqcVFBSUJHKwpLcUlZWmVkeis0ck5Ea2JTclZ1NldXZ1VqU21PZ0FjeWRIMUhRZFhwV1lyKytXbmE4Z2pHVVk5eVQ1V283Uld3CmxsWGpENTJXdVJBK2pDN0lvM0w4ZWd0S0FRTTZhRzNJdDloOWZDaXg1ekRVd2xVQ0F3RUFBYU4xTUhNd0RnWUQKVlIwUEFRSC9CQVFEQWdXZ01CTUdBMVVkSlFRTU1Bb0dDQ3NHQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBdwpIUVlEVlIwT0JCWUVGS3BDNU1PNTdzM3NkR0ZmeXRnWHIxWnN6UlBPTUI4R0ExVWRJd1FZTUJhQUZLcEM1TU81CjdzM3NkR0ZmeXRnWHIxWnN6UlBPTUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCK2JzZDgrZVZNNThQMStQOFkKcWNqczdQQ1l6allmSy9hMmIwd2xSMHUwc0xOdU8rMENHc3ZCdWJYM3puREFyVFUzSXhOQ3hlaUxMZG43akNpYwo0SXVpQXlTT0hTSVYyQndNWHRaQzhGOVNmRkpuUE9SdVpZeklTOEY1b0ZPZnJ3K0NiK2RLeGsvVDM3SHJGYUdDCnZiL091eklqL2VRYUtIQ1QrWU9zRDI2L0ZRa0ZpcGpHekRiMU9qVTR0aGFjZ0VmR3dadVhuV2I1REhqOUlRTkEKWWEzeGtnL0xIM1VlaUxkdnJab0NIdVpoaERpK3E0QXZKeVlJdk5Ha2R1b0tGalppcEhzRHdIaWlLcnZla0l3MgpvbVh4RGMzSGdmb1IrTTdnVDQyS2J6WnZDNFEwU2ZlWk80elRWSmhJM05abVhDVHNsNkZmbEltMUYwTXRrR0xuCjNrdUwKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeControlPlaneSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJRmROMEVJcnV2Y2t3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd2tUVGVIRFBNcFZXSXJrZUljRlBwbThMZks0awpYWEtycWxiNlZheG5YZ0JrZXJubFpsYzFJMFM0bDAvaGF1ZHZ2RkRPWTAvZ20rRFBmNmk3eXpFQVozcU0wbGd3CkhIYXIyUWlRam5YRjFsc1dVK0ZlcGJNdU1nYlI4Ly9Td21UbGdneGp1WXJ5TUVKSFBuSXg5TGJrdmV3a1hFNXcKQ2RvZGRSd2ZKTkhWZXhobENMTVlQc1J4RE1lVVZqQ1lmQmU5SkNqeEVmK3gzOUpwN3RVSzZ3TmFLY3BHK1N1dApvTElHN0tyVEhtZ3JxQ1d2bWkrUWcrTXJvZnh2MWN1OWlvV0ZQcWdIRTliWk5mZzBvUFBHNWxrb1IvRlNyMWlmCjIwV1NhSjcvRSs5ZEx3ZzZaVkdzSW5ta0JGQUFKUHM2emFwRXlVOVNlaTQ4YThpOER5NnA5bkE3dFFJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpxa0xrdzdudXpleDBZVi9LMkJldlZtek5FODR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZ3eElVbDZXMWJoClRZZG5vTW9lSWpZdlRVUWV2aFI1VUFiTmFUZGora0kxOGx5L2NRVlhmVmhPNCtoM1oxMXFNUWtMMkFzdnNnT2cKRFJtQ0tJN3V0MmVFb0JKcjVneDZ5UE1NUVdXbVlWdURKSm11Z1MxNnUyTVlsZzY5anBQRFdFL0gxR1crdnZpbwo4UndCbTRyb09XZ1RQWU9WcUVMRTFreVN4bmtDWENCZEhoTWNUVGhTZ2l2MVVrL2xzZ2NpLzRGMGFkem42V3RKClVzVFdkek83V05lVllVUzgrVDhDQVRjOGVERGRCb3Y3QklxVHZVaUNyUjJGY2J3UWZzUm5RYUFTeEJLZzdTMTQKUE5DMGovYUMvWTVXM0JwdGE0V3JaVjVTbUNLelZQbEhoZGlNK1h0M3VqQnFVOFNkR1BkanpjZVhCRWdyWnNPdApCTVF6ZGM4NHpEQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd2tUVGVIRFBNcFZXSXJrZUljRlBwbThMZks0a1hYS3JxbGI2VmF4blhnQmtlcm5sClpsYzFJMFM0bDAvaGF1ZHZ2RkRPWTAvZ20rRFBmNmk3eXpFQVozcU0wbGd3SEhhcjJRaVFqblhGMWxzV1UrRmUKcGJNdU1nYlI4Ly9Td21UbGdneGp1WXJ5TUVKSFBuSXg5TGJrdmV3a1hFNXdDZG9kZFJ3ZkpOSFZleGhsQ0xNWQpQc1J4RE1lVVZqQ1lmQmU5SkNqeEVmK3gzOUpwN3RVSzZ3TmFLY3BHK1N1dG9MSUc3S3JUSG1ncnFDV3ZtaStRCmcrTXJvZnh2MWN1OWlvV0ZQcWdIRTliWk5mZzBvUFBHNWxrb1IvRlNyMWlmMjBXU2FKNy9FKzlkTHdnNlpWR3MKSW5ta0JGQUFKUHM2emFwRXlVOVNlaTQ4YThpOER5NnA5bkE3dFFJREFRQUJBb0lCQVFDSmJSalB0YlhOU2JreQpQUlFrdXRSMm4wMVgrUFMrcW5UbnZqbSt5NFFnQ2xVS1FHRVlZWTYwa1ZPbnJwbCsvNU9hZXV0VmM5Y25UZ1JiCmdXaS9sNzE2ZGtZU010SnVBRUVXK2lrUXJoMnl3cUxyMlowVHlNcGdGMVVFcjY5UFZ3TElXYTFlUHYyT3lBUVEKRjhaaEg5UjJ5Z3I2eFg0YWFoSzJtcHNwZDhyMkZSRTRielBVUFlEYVkvMktmeHhWRWd4cTlTTlJiVnlId2ZSWApVWm9icStwdHgrYzU3a25KRlVaamFCcDFrN2JTV3dJSzBBYWZSejZSNkdYajNBZ3dZcjVnbm9jT3h6L0lTdGZUClRLZ1JUcUZ4ZmtVWThmNlhISTZ5bFY5WXFzcDBJWDdxRnNFSXlYVVpheW9KcktFZFdjemp5a1hQY0VybVlBblUKV1pNaEtwcU5Bb0dCQVBtS1JCN1hsajJvdWZsOEVrZXJzQ3pLVVpTZkZYWmx6S21TNmowYlRKc253RHZ3bisrdAowbDdJRXg4dmtyWnVhNHdaT1NQR1R2TS9lK0M4NEdzWW9BZGZDSldQVHBHRytTaWw1K04yb0VVdVpUMzIvMnRrClZML0dTcUdwYXoxSXdFNjZiWXhsNlF0WTZ6UEt3UHRSaThySi8yLzByZjdGUFZhUzV1VWcwTWcvQW9HQkFNZE0KUlRkZmFNcjlPeVRzaS85dWU1OUd6SG5aaStRbHZVSnovakJkUzNkb1NxZVVaVSt1SWFRRkZQN0FMYkNiZ1FkNApXKy9Jd0NBbC9QREVXTFJxMkdyTWgxZWFFT1RSR2Z0ZFVSVERldFA2N2hCQWNMVnBPVG9OZXpZMGVRSWw1NE9HCjhndEF3QjVKNkxKcXhIVFRpcjRta1BPTzN2cFhOTm5RRlc4c3lCOExBb0dCQUxWUnBsWFN5TFJjMldWU3BlVzEKOXZsVXVScUl6WXVPUkx3aXFGbG1jSzk4bnMzdTlnZXVBZUlrOXQvK0xWaXB1ek85VUN1U2VPTi9DWUF2UGRJVAp2cFFjbFp3MjJSd2RPd1l5SnVDODNZL25PbUZnREEvNGd5d2w1U3k2Y2RYQit4bzVsRWdqOU1YdUFsbEx4aFhYCkZ3QnU3bEJuTmRhZGN3aHBEYVVIeHl6NUFvR0JBSTBDRU1NQjFXSXgwMFBudlpIbmVMNFQySjZwNWtsd3pqeVQKVnhpZkdjTU5YaXk5V1FVTVhpN3ZqWkJGSnM2YTU2c0NaSUgrVnJrb1I1T09TSGkyVkJNVVRQb1ZQcmkyblp4MAp4T1pjL0syNUQvRWR0dUVUNXZLRkVWVWp3UzVjNVRYeEo1WUFwUzJJKzRRbytJRDBIMmswWGtDRktJeVZZUVp2CkxJc3hjeEpMQW9HQUVTZmZScTUrL0JqQTU3ZVZRY0c1K0hxZlIxTGYvMlJHR3FUbUhIUmVVZ0RENFhPV2wrRVcKbTl5TVFrOHdXU3BlcG1IMmFQTmhBSG9aeitUUmJ5RDhyK1B5T1VFSG1rRzU3SlBuZWxaNFdrZ1cxQk5rYkhRUApjQXkwNE0rZi9jNkt3aHB3MVloVkxLWGk5M2s5b1V0MElmVXlWUEk3N0p1RExXdVpxaVVqT2hRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kube-control-plane-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBd2tUVGVIRFBNcFZXSXJrZUljRlBwbThMZks0a1hYS3JxbGI2VmF4blhnQmtlcm5sClpsYzFJMFM0bDAvaGF1ZHZ2RkRPWTAvZ20rRFBmNmk3eXpFQVozcU0wbGd3SEhhcjJRaVFqblhGMWxzV1UrRmUKcGJNdU1nYlI4Ly9Td21UbGdneGp1WXJ5TUVKSFBuSXg5TGJrdmV3a1hFNXdDZG9kZFJ3ZkpOSFZleGhsQ0xNWQpQc1J4RE1lVVZqQ1lmQmU5SkNqeEVmK3gzOUpwN3RVSzZ3TmFLY3BHK1N1dG9MSUc3S3JUSG1ncnFDV3ZtaStRCmcrTXJvZnh2MWN1OWlvV0ZQcWdIRTliWk5mZzBvUFBHNWxrb1IvRlNyMWlmMjBXU2FKNy9FKzlkTHdnNlpWR3MKSW5ta0JGQUFKUHM2emFwRXlVOVNlaTQ4YThpOER5NnA5bkE3dFFJREFRQUJBb0lCQVFDSmJSalB0YlhOU2JreQpQUlFrdXRSMm4wMVgrUFMrcW5UbnZqbSt5NFFnQ2xVS1FHRVlZWTYwa1ZPbnJwbCsvNU9hZXV0VmM5Y25UZ1JiCmdXaS9sNzE2ZGtZU010SnVBRUVXK2lrUXJoMnl3cUxyMlowVHlNcGdGMVVFcjY5UFZ3TElXYTFlUHYyT3lBUVEKRjhaaEg5UjJ5Z3I2eFg0YWFoSzJtcHNwZDhyMkZSRTRielBVUFlEYVkvMktmeHhWRWd4cTlTTlJiVnlId2ZSWApVWm9icStwdHgrYzU3a25KRlVaamFCcDFrN2JTV3dJSzBBYWZSejZSNkdYajNBZ3dZcjVnbm9jT3h6L0lTdGZUClRLZ1JUcUZ4ZmtVWThmNlhISTZ5bFY5WXFzcDBJWDdxRnNFSXlYVVpheW9KcktFZFdjemp5a1hQY0VybVlBblUKV1pNaEtwcU5Bb0dCQVBtS1JCN1hsajJvdWZsOEVrZXJzQ3pLVVpTZkZYWmx6S21TNmowYlRKc253RHZ3bisrdAowbDdJRXg4dmtyWnVhNHdaT1NQR1R2TS9lK0M4NEdzWW9BZGZDSldQVHBHRytTaWw1K04yb0VVdVpUMzIvMnRrClZML0dTcUdwYXoxSXdFNjZiWXhsNlF0WTZ6UEt3UHRSaThySi8yLzByZjdGUFZhUzV1VWcwTWcvQW9HQkFNZE0KUlRkZmFNcjlPeVRzaS85dWU1OUd6SG5aaStRbHZVSnovakJkUzNkb1NxZVVaVSt1SWFRRkZQN0FMYkNiZ1FkNApXKy9Jd0NBbC9QREVXTFJxMkdyTWgxZWFFT1RSR2Z0ZFVSVERldFA2N2hCQWNMVnBPVG9OZXpZMGVRSWw1NE9HCjhndEF3QjVKNkxKcXhIVFRpcjRta1BPTzN2cFhOTm5RRlc4c3lCOExBb0dCQUxWUnBsWFN5TFJjMldWU3BlVzEKOXZsVXVScUl6WXVPUkx3aXFGbG1jSzk4bnMzdTlnZXVBZUlrOXQvK0xWaXB1ek85VUN1U2VPTi9DWUF2UGRJVAp2cFFjbFp3MjJSd2RPd1l5SnVDODNZL25PbUZnREEvNGd5d2w1U3k2Y2RYQit4bzVsRWdqOU1YdUFsbEx4aFhYCkZ3QnU3bEJuTmRhZGN3aHBEYVVIeHl6NUFvR0JBSTBDRU1NQjFXSXgwMFBudlpIbmVMNFQySjZwNWtsd3pqeVQKVnhpZkdjTU5YaXk5V1FVTVhpN3ZqWkJGSnM2YTU2c0NaSUgrVnJrb1I1T09TSGkyVkJNVVRQb1ZQcmkyblp4MAp4T1pjL0syNUQvRWR0dUVUNXZLRkVWVWp3UzVjNVRYeEo1WUFwUzJJKzRRbytJRDBIMmswWGtDRktJeVZZUVp2CkxJc3hjeEpMQW9HQUVTZmZScTUrL0JqQTU3ZVZRY0c1K0hxZlIxTGYvMlJHR3FUbUhIUmVVZ0RENFhPV2wrRVcKbTl5TVFrOHdXU3BlcG1IMmFQTmhBSG9aeitUUmJ5RDhyK1B5T1VFSG1rRzU3SlBuZWxaNFdrZ1cxQk5rYkhRUApjQXkwNE0rZi9jNkt3aHB3MVloVkxLWGk5M2s5b1V0MElmVXlWUEk3N0p1RExXdVpxaVVqT2hRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kube-control-plane-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURORENDQWh5Z0F3SUJBZ0lJRmROMEVJcnV2Y2t3RFFZSktvWklodmNOQVFFTEJRQXdPREVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1TSXdJQVlEVlFRREV4bHJkV0psTFdOdmJuUnliMnd0Y0d4aGJtVXRjMmxuYm1WeQpNQjRYRFRFNU1USXdPVEV3TlRZd05Gb1hEVEl3TVRJd09ERXdOVFl3TkZvd09ERVNNQkFHQTFVRUN4TUpiM0JsCmJuTm9hV1owTVNJd0lBWURWUVFERXhscmRXSmxMV052Ym5SeWIyd3RjR3hoYm1VdGMybG5ibVZ5TUlJQklqQU4KQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBd2tUVGVIRFBNcFZXSXJrZUljRlBwbThMZks0awpYWEtycWxiNlZheG5YZ0JrZXJubFpsYzFJMFM0bDAvaGF1ZHZ2RkRPWTAvZ20rRFBmNmk3eXpFQVozcU0wbGd3CkhIYXIyUWlRam5YRjFsc1dVK0ZlcGJNdU1nYlI4Ly9Td21UbGdneGp1WXJ5TUVKSFBuSXg5TGJrdmV3a1hFNXcKQ2RvZGRSd2ZKTkhWZXhobENMTVlQc1J4RE1lVVZqQ1lmQmU5SkNqeEVmK3gzOUpwN3RVSzZ3TmFLY3BHK1N1dApvTElHN0tyVEhtZ3JxQ1d2bWkrUWcrTXJvZnh2MWN1OWlvV0ZQcWdIRTliWk5mZzBvUFBHNWxrb1IvRlNyMWlmCjIwV1NhSjcvRSs5ZEx3ZzZaVkdzSW5ta0JGQUFKUHM2emFwRXlVOVNlaTQ4YThpOER5NnA5bkE3dFFJREFRQUIKbzBJd1FEQU9CZ05WSFE4QkFmOEVCQU1DQXFRd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBZEJnTlZIUTRFRmdRVQpxa0xrdzdudXpleDBZVi9LMkJldlZtek5FODR3RFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUZ3eElVbDZXMWJoClRZZG5vTW9lSWpZdlRVUWV2aFI1VUFiTmFUZGora0kxOGx5L2NRVlhmVmhPNCtoM1oxMXFNUWtMMkFzdnNnT2cKRFJtQ0tJN3V0MmVFb0JKcjVneDZ5UE1NUVdXbVlWdURKSm11Z1MxNnUyTVlsZzY5anBQRFdFL0gxR1crdnZpbwo4UndCbTRyb09XZ1RQWU9WcUVMRTFreVN4bmtDWENCZEhoTWNUVGhTZ2l2MVVrL2xzZ2NpLzRGMGFkem42V3RKClVzVFdkek83V05lVllVUzgrVDhDQVRjOGVERGRCb3Y3QklxVHZVaUNyUjJGY2J3UWZzUm5RYUFTeEJLZzdTMTQKUE5DMGovYUMvWTVXM0JwdGE0V3JaVjVTbUNLelZQbEhoZGlNK1h0M3VqQnFVOFNkR1BkanpjZVhCRWdyWnNPdApCTVF6ZGM4NHpEQT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo="
            }
        ]
    },
    "*tls.KubeletBootstrapCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJU2VVUk1ZNFF2VVF3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMU5UaGFGdzB5T1RFeU1EWXhNRFUxTlRoYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNwpnNnpsOGxnT0dYTXZrbzNiWUdURlU1L09QeVBCMCtQcUJKOHJiVGY3WE9FV3VTeWpOOWt4T0JMNFF5VEJPakxOCnltU3FaOUltUml6SnlhZ1NJbWZ1ZERLS3ROeEhZNUtmSHdwU3NUUlZRK2w2eExNWFNGNUk0dE0vVENYSndGZ1YKWkR6ZTQwbzdGMTQ5Y0d2UndoVVdJYzVaV2J2MXpTWEd0OWwvbUt1citHV3pCMnZLSEJPL0tZQUNYd1ptWHllcgpmUm9OaHNkcXA4ZCtSeUtrcVJqUFhIeUt6bG1rSEJ2WmRmWlVlaUZBYmc2Zm1YMkdHb1FYMUxjQTlFWUw0UHloCkFpQVptRUtzU3lNaWtHSkozakl4UHhWSVNudkRaS0RjajhyZmlrRmh5bFFVNGpWbWJ1VTI0NnZCbHYrejBIdUkKK0pCNTEyVjU2VitxN09UMDNaSlBBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNJUEM5cWhYM0RpS0pUdjI1dXFsdGRNangycFRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFzNzRiZjZQMHlYZHlSb0tRdDhENU5DcStvOUxjQUpWQ2hPc0Q2V2xmM2FlK1pIMDkKQytBdkx4L0UzckxqMERQK1A5Z0JmWVVVTnAyb1pINE5JZFlMVWxHZEVuem5heWdOWTFnNXBZOTlraFdhcmE4YQpZWTBwaUNzVzFSZlhPd3FUbElFMUY4eTA4eHdWcFBHbW55RVQyZTJXa3NsR0JBSDhRZGRhakJNdXIxc0ZSSWJ5CmRSQURqaGM1NnhoV2ZJVUJlbXRWMzltbit6OTd0bDFWZzdheEN4T1llRWxWaGhsQTY0ZldSejhvY1JBYU1aajcKN0Y5eDEwVEI2YUxFbmg3R29EMXdXK0JyU2FMb0RzYW5jTXl6OE92cUJxSTdJVWk5SmRJdWxJM2w2cUdqK2h0MApXc1U1ZDM4akFBMUtwQnZicHlzV2tISGdLUXJZZkp3aUZCVzg3dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kubelet-bootstrap-kubeconfig-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJU2VVUk1ZNFF2VVF3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMU5UaGFGdzB5T1RFeU1EWXhNRFUxTlRoYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNwpnNnpsOGxnT0dYTXZrbzNiWUdURlU1L09QeVBCMCtQcUJKOHJiVGY3WE9FV3VTeWpOOWt4T0JMNFF5VEJPakxOCnltU3FaOUltUml6SnlhZ1NJbWZ1ZERLS3ROeEhZNUtmSHdwU3NUUlZRK2w2eExNWFNGNUk0dE0vVENYSndGZ1YKWkR6ZTQwbzdGMTQ5Y0d2UndoVVdJYzVaV2J2MXpTWEd0OWwvbUt1citHV3pCMnZLSEJPL0tZQUNYd1ptWHllcgpmUm9OaHNkcXA4ZCtSeUtrcVJqUFhIeUt6bG1rSEJ2WmRmWlVlaUZBYmc2Zm1YMkdHb1FYMUxjQTlFWUw0UHloCkFpQVptRUtzU3lNaWtHSkozakl4UHhWSVNudkRaS0RjajhyZmlrRmh5bFFVNGpWbWJ1VTI0NnZCbHYrejBIdUkKK0pCNTEyVjU2VitxN09UMDNaSlBBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNJUEM5cWhYM0RpS0pUdjI1dXFsdGRNangycFRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFzNzRiZjZQMHlYZHlSb0tRdDhENU5DcStvOUxjQUpWQ2hPc0Q2V2xmM2FlK1pIMDkKQytBdkx4L0UzckxqMERQK1A5Z0JmWVVVTnAyb1pINE5JZFlMVWxHZEVuem5heWdOWTFnNXBZOTlraFdhcmE4YQpZWTBwaUNzVzFSZlhPd3FUbElFMUY4eTA4eHdWcFBHbW55RVQyZTJXa3NsR0JBSDhRZGRhakJNdXIxc0ZSSWJ5CmRSQURqaGM1NnhoV2ZJVUJlbXRWMzltbit6OTd0bDFWZzdheEN4T1llRWxWaGhsQTY0ZldSejhvY1JBYU1aajcKN0Y5eDEwVEI2YUxFbmg3R29EMXdXK0JyU2FMb0RzYW5jTXl6OE92cUJxSTdJVWk5SmRJdWxJM2w2cUdqK2h0MApXc1U1ZDM4akFBMUtwQnZicHlzV2tISGdLUXJZZkp3aUZCVzg3dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletBootstrapCertSigner": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJU2VVUk1ZNFF2VVF3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMU5UaGFGdzB5T1RFeU1EWXhNRFUxTlRoYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNwpnNnpsOGxnT0dYTXZrbzNiWUdURlU1L09QeVBCMCtQcUJKOHJiVGY3WE9FV3VTeWpOOWt4T0JMNFF5VEJPakxOCnltU3FaOUltUml6SnlhZ1NJbWZ1ZERLS3ROeEhZNUtmSHdwU3NUUlZRK2w2eExNWFNGNUk0dE0vVENYSndGZ1YKWkR6ZTQwbzdGMTQ5Y0d2UndoVVdJYzVaV2J2MXpTWEd0OWwvbUt1citHV3pCMnZLSEJPL0tZQUNYd1ptWHllcgpmUm9OaHNkcXA4ZCtSeUtrcVJqUFhIeUt6bG1rSEJ2WmRmWlVlaUZBYmc2Zm1YMkdHb1FYMUxjQTlFWUw0UHloCkFpQVptRUtzU3lNaWtHSkozakl4UHhWSVNudkRaS0RjajhyZmlrRmh5bFFVNGpWbWJ1VTI0NnZCbHYrejBIdUkKK0pCNTEyVjU2VitxN09UMDNaSlBBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNJUEM5cWhYM0RpS0pUdjI1dXFsdGRNangycFRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFzNzRiZjZQMHlYZHlSb0tRdDhENU5DcStvOUxjQUpWQ2hPc0Q2V2xmM2FlK1pIMDkKQytBdkx4L0UzckxqMERQK1A5Z0JmWVVVTnAyb1pINE5JZFlMVWxHZEVuem5heWdOWTFnNXBZOTlraFdhcmE4YQpZWTBwaUNzVzFSZlhPd3FUbElFMUY4eTA4eHdWcFBHbW55RVQyZTJXa3NsR0JBSDhRZGRhakJNdXIxc0ZSSWJ5CmRSQURqaGM1NnhoV2ZJVUJlbXRWMzltbit6OTd0bDFWZzdheEN4T1llRWxWaGhsQTY0ZldSejhvY1JBYU1aajcKN0Y5eDEwVEI2YUxFbmg3R29EMXdXK0JyU2FMb0RzYW5jTXl6OE92cUJxSTdJVWk5SmRJdWxJM2w2cUdqK2h0MApXc1U1ZDM4akFBMUtwQnZicHlzV2tISGdLUXJZZkp3aUZCVzg3dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdTRPczVmSllEaGx6TDVLTjIyQmt4Vk9memo4andkUGo2Z1NmSzIwMysxemhGcmtzCm96ZlpNVGdTK0VNa3dUb3l6Y3BrcW1mU0prWXN5Y21vRWlKbjduUXlpclRjUjJPU254OEtVckUwVlVQcGVzU3oKRjBoZVNPTFRQMHdseWNCWUZXUTgzdU5LT3hkZVBYQnIwY0lWRmlIT1dWbTc5YzBseHJmWmY1aXJxL2hsc3dkcgp5aHdUdnltQUFsOEdabDhucTMwYURZYkhhcWZIZmtjaXBLa1l6MXg4aXM1WnBCd2IyWFgyVkhvaFFHNE9uNWw5CmhocUVGOVMzQVBSR0MrRDhvUUlnR1poQ3JFc2pJcEJpU2Q0eU1UOFZTRXA3dzJTZzNJL0szNHBCWWNwVUZPSTEKWm03bE51T3J3WmIvczlCN2lQaVFlZGRsZWVsZnF1ems5TjJTVHdJREFRQUJBb0lCQUZWdzdFbGlvYWpiQTljNwphaFA1MmpEbnA3dHNuYmhsK2tYWmtVVlNZTjNTTm1ZS1BrS280ZmhCV3JOd3RNQ3U2aE5IRTVOcDl5R2xmQ2IrCkVlMGhiRVlGQURxZnFuZUU4WHc3d3BKbldEYzUySnN1SVlTTVh4bks4UUs0aWNkaU0wQ2NDZmh0akpkY1VINmkKU1I2czFycmM4STlhQ2dFNFZ1d3pQWkdjV1N6a0c0Wm40bVRQS3ppWlFCTzhMVWpRUVEyeTdIaU5kN0ZLV3QxQwpLSXZGOE5CL0N0bDQ5bkRVWkxBV0dEekVOajRwcEFxbi8zSzFVbm1GSW9GZ052VDBneUtkOENyRXNnYnJqcDhFCmZXRjZRVzRGU3hMWXhPbzdTOFczcmFIeHRaTVlHTm5aWW1kUUZKSHV4UWxSWDdJbnN1Rm9WdGtTek5hZUVIT1AKWWY5ay9GRUNnWUVBOHZyQ25DUnlHZHphTjJ3UTcwYzZSWEtyYUdWZ1REcGRDM2JIbVdpWjBWWDhNNWRRRzdCYgpxV3Q1SmJBZnJZNlpORzJWN2Y4SEV2eU1YVDVHdEdWYUxZRmoxUzlMTlRFVHdjZ3hnT21vK1NPVFNqM3VMTjRXCmlMQTk3c2FhS2VlWjViK24xWnErVGdUOHRrdDRQTXdaTHhmZCtRc01ISUt0R1JNUU4yZmJxQzBDZ1lFQXhaQUkKaFVPTE4zMXIyLzc1OHN5R0VOTHNZMXVQemR1Z2VsMTl6bGxPU0xSeGx5WEQ5TnpOeWxTb0tpc3FNaHdadVdTMgpnZm9EVlA5eERjMGwweXV6VmRPSXpYU09JVnMxakxXS2d5bFBub1N3YmlDckU2cWROREtIK2dVRk9Ca3V1K3E4CkxrN0RabmVhdlJZTTJrdXlZdGR2WkNOczRlaXdOR2V2T3BtNGxlc0NnWUFxMUVpNWZUTWZtKzViRnBGbG5BaUoKZFUwQmVkMGZrcW9UK3p2enJweHVhZG1xdm1GQWdEV29CMm16V3ZnNmY0aEIxWTg0QkZ3YTNLbGhSamp3VTIweAoyRHpndHhWcXF0dndySGtOWUNLSXg5eU9tWndDREtPc05HUzJVZ3VhbDFocFJ2OHVoN2hEeUYxRFJNcE03UzBEClFCSEFkRklPTkhxT2tPMnExb1BCZ1FLQmdCUEwzZjYwaVBPemZxWlp3MlAvK0lNaEQ0elpOT3kwMER6U3QzT0EKNFdaSnBvUTF4WS80dkNwRkYyQzZXSTBTNGNVQkFZUytyNnpKdCtOaEppUWw0ZDk4eGQySWkyRnVTVXhqT0pEeQpCOGRqbG1aQ29jSGp1OExxT1ZQbFF1T2ZLbDZzSTlVa0VWSm9NN28weG03dFhOK29wTUhOQnZFUUp1L3BYOWFvClpxV25Bb0dCQUphS2lxZnl4NDJyOUQxUE52VkUvWXBHSmM0cDZpWTJMR0diT09iTVdSR1JUUERxZlRLL1p5OVgKMWJwUERObjNjaGdJa1FteFNxMEc3bmx3d3QxODZxT1VDeGEvaDZBUExPKzZkamk0SC94VCtyY2ZhMkZZOGxPVQo3cXJaMEdYQitzaG9hc0VRL3dZUFJiYlhDNDNEd1FTSCs4eUZHVXNnZXBIZk0vNFNKTG9sCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kubelet-bootstrap-kubeconfig-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdTRPczVmSllEaGx6TDVLTjIyQmt4Vk9memo4andkUGo2Z1NmSzIwMysxemhGcmtzCm96ZlpNVGdTK0VNa3dUb3l6Y3BrcW1mU0prWXN5Y21vRWlKbjduUXlpclRjUjJPU254OEtVckUwVlVQcGVzU3oKRjBoZVNPTFRQMHdseWNCWUZXUTgzdU5LT3hkZVBYQnIwY0lWRmlIT1dWbTc5YzBseHJmWmY1aXJxL2hsc3dkcgp5aHdUdnltQUFsOEdabDhucTMwYURZYkhhcWZIZmtjaXBLa1l6MXg4aXM1WnBCd2IyWFgyVkhvaFFHNE9uNWw5CmhocUVGOVMzQVBSR0MrRDhvUUlnR1poQ3JFc2pJcEJpU2Q0eU1UOFZTRXA3dzJTZzNJL0szNHBCWWNwVUZPSTEKWm03bE51T3J3WmIvczlCN2lQaVFlZGRsZWVsZnF1ems5TjJTVHdJREFRQUJBb0lCQUZWdzdFbGlvYWpiQTljNwphaFA1MmpEbnA3dHNuYmhsK2tYWmtVVlNZTjNTTm1ZS1BrS280ZmhCV3JOd3RNQ3U2aE5IRTVOcDl5R2xmQ2IrCkVlMGhiRVlGQURxZnFuZUU4WHc3d3BKbldEYzUySnN1SVlTTVh4bks4UUs0aWNkaU0wQ2NDZmh0akpkY1VINmkKU1I2czFycmM4STlhQ2dFNFZ1d3pQWkdjV1N6a0c0Wm40bVRQS3ppWlFCTzhMVWpRUVEyeTdIaU5kN0ZLV3QxQwpLSXZGOE5CL0N0bDQ5bkRVWkxBV0dEekVOajRwcEFxbi8zSzFVbm1GSW9GZ052VDBneUtkOENyRXNnYnJqcDhFCmZXRjZRVzRGU3hMWXhPbzdTOFczcmFIeHRaTVlHTm5aWW1kUUZKSHV4UWxSWDdJbnN1Rm9WdGtTek5hZUVIT1AKWWY5ay9GRUNnWUVBOHZyQ25DUnlHZHphTjJ3UTcwYzZSWEtyYUdWZ1REcGRDM2JIbVdpWjBWWDhNNWRRRzdCYgpxV3Q1SmJBZnJZNlpORzJWN2Y4SEV2eU1YVDVHdEdWYUxZRmoxUzlMTlRFVHdjZ3hnT21vK1NPVFNqM3VMTjRXCmlMQTk3c2FhS2VlWjViK24xWnErVGdUOHRrdDRQTXdaTHhmZCtRc01ISUt0R1JNUU4yZmJxQzBDZ1lFQXhaQUkKaFVPTE4zMXIyLzc1OHN5R0VOTHNZMXVQemR1Z2VsMTl6bGxPU0xSeGx5WEQ5TnpOeWxTb0tpc3FNaHdadVdTMgpnZm9EVlA5eERjMGwweXV6VmRPSXpYU09JVnMxakxXS2d5bFBub1N3YmlDckU2cWROREtIK2dVRk9Ca3V1K3E4CkxrN0RabmVhdlJZTTJrdXlZdGR2WkNOczRlaXdOR2V2T3BtNGxlc0NnWUFxMUVpNWZUTWZtKzViRnBGbG5BaUoKZFUwQmVkMGZrcW9UK3p2enJweHVhZG1xdm1GQWdEV29CMm16V3ZnNmY0aEIxWTg0QkZ3YTNLbGhSamp3VTIweAoyRHpndHhWcXF0dndySGtOWUNLSXg5eU9tWndDREtPc05HUzJVZ3VhbDFocFJ2OHVoN2hEeUYxRFJNcE03UzBEClFCSEFkRklPTkhxT2tPMnExb1BCZ1FLQmdCUEwzZjYwaVBPemZxWlp3MlAvK0lNaEQ0elpOT3kwMER6U3QzT0EKNFdaSnBvUTF4WS80dkNwRkYyQzZXSTBTNGNVQkFZUytyNnpKdCtOaEppUWw0ZDk4eGQySWkyRnVTVXhqT0pEeQpCOGRqbG1aQ29jSGp1OExxT1ZQbFF1T2ZLbDZzSTlVa0VWSm9NN28weG03dFhOK29wTUhOQnZFUUp1L3BYOWFvClpxV25Bb0dCQUphS2lxZnl4NDJyOUQxUE52VkUvWXBHSmM0cDZpWTJMR0diT09iTVdSR1JUUERxZlRLL1p5OVgKMWJwUERObjNjaGdJa1FteFNxMEc3bmx3d3QxODZxT1VDeGEvaDZBUExPKzZkamk0SC94VCtyY2ZhMkZZOGxPVQo3cXJaMEdYQitzaG9hc0VRL3dZUFJiYlhDNDNEd1FTSCs4eUZHVXNnZXBIZk0vNFNKTG9sCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kubelet-bootstrap-kubeconfig-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lJU2VVUk1ZNFF2VVF3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMU5UaGFGdzB5T1RFeU1EWXhNRFUxTlRoYU1FSXhFakFRCkJnTlZCQXNUQ1c5d1pXNXphR2xtZERFc01Db0dBMVVFQXhNamEzVmlaV3hsZEMxaWIyOTBjM1J5WVhBdGEzVmkKWldOdmJtWnBaeTF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDNwpnNnpsOGxnT0dYTXZrbzNiWUdURlU1L09QeVBCMCtQcUJKOHJiVGY3WE9FV3VTeWpOOWt4T0JMNFF5VEJPakxOCnltU3FaOUltUml6SnlhZ1NJbWZ1ZERLS3ROeEhZNUtmSHdwU3NUUlZRK2w2eExNWFNGNUk0dE0vVENYSndGZ1YKWkR6ZTQwbzdGMTQ5Y0d2UndoVVdJYzVaV2J2MXpTWEd0OWwvbUt1citHV3pCMnZLSEJPL0tZQUNYd1ptWHllcgpmUm9OaHNkcXA4ZCtSeUtrcVJqUFhIeUt6bG1rSEJ2WmRmWlVlaUZBYmc2Zm1YMkdHb1FYMUxjQTlFWUw0UHloCkFpQVptRUtzU3lNaWtHSkozakl4UHhWSVNudkRaS0RjajhyZmlrRmh5bFFVNGpWbWJ1VTI0NnZCbHYrejBIdUkKK0pCNTEyVjU2VitxN09UMDNaSlBBZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVBCZ05WSFJNQgpBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlNJUEM5cWhYM0RpS0pUdjI1dXFsdGRNangycFRBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFzNzRiZjZQMHlYZHlSb0tRdDhENU5DcStvOUxjQUpWQ2hPc0Q2V2xmM2FlK1pIMDkKQytBdkx4L0UzckxqMERQK1A5Z0JmWVVVTnAyb1pINE5JZFlMVWxHZEVuem5heWdOWTFnNXBZOTlraFdhcmE4YQpZWTBwaUNzVzFSZlhPd3FUbElFMUY4eTA4eHdWcFBHbW55RVQyZTJXa3NsR0JBSDhRZGRhakJNdXIxc0ZSSWJ5CmRSQURqaGM1NnhoV2ZJVUJlbXRWMzltbit6OTd0bDFWZzdheEN4T1llRWxWaGhsQTY0ZldSejhvY1JBYU1aajcKN0Y5eDEwVEI2YUxFbmg3R29EMXdXK0JyU2FMb0RzYW5jTXl6OE92cUJxSTdJVWk5SmRJdWxJM2w2cUdqK2h0MApXc1U1ZDM4akFBMUtwQnZicHlzV2tISGdLUXJZZkp3aUZCVzg3dz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletCSRSignerCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVytIenQ0dVJxb1F3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHhPVEV5TURreApNRFUyTURSYUZ3MHhPVEV5TVRBeE1EVTJNRFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFNYZ2I5cit2L3VPR1Nyd1BkVlV6d2Q5S2pCT0dIMTYzRDhaY1FwUk5lbnlBVzFteXZmMCtqQzhPNApEaG5rd1N6dU5LZ3JVWXlrV3B5Y0tyV29hQ2RRaFpTY3VLVURId1pmYml5aWpCRVdqTHc5aTBLQzJrd1ZNUjlNCnlaaFRwaUpNNkU4Ymt5dDhSazVwMzlIOUErMkxTVWxubEUyYlY3TmsyVDB3K2o0akY0S3IzeDZpQkFhd0hJcnMKY1NHYlk1N1cxL3BUSnRuL0hDWkhGV2ZyY0xPcUMyZGE0UnVTUnBlWE92WEtPa08rYkFzaGl6NGZTZ2pwa3VkbQoxMUNHVnhva1RFeitvanU2QnBjZXpzY1FsNklKdVhBa0xCbTFRWWpkYjRMWEdDM3ZxYjhTdnJDQ1FGa09tTGcxCm5Lb1NLZWtLblhxZEVyeGI0RS9FcVdHb0Z0Sm5BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFpVE9QNTNOa0tBT2FFS3ZoMXJJL0FqOXloUnpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFBRDhsaDgwR0NrbXRSZnlpOEYyS3ptNnNldlVaODM1RnluZmZZVjVWCjJBOXh6OFNtMHJVcE9FQXFvUjBkakgyM2NHLzVrQlNWK0FOOFpBa1RMeXhxb2djMEp1TTlUNmsyeUt5MHM4a3UKckNDa1VOQTZyWlJCSDAzWkhGMTNyc3lrUWJ3bWFEMnAwYWhFSWc4eml1dmNyVVJ1Ym5pYnRVdVlrcXVyemNocwpJVndMbVB0S3JQVHIrekJHYXBnOEk3RWtnQ2lHdkdKbGZVUDVLR3lLQlppUUVENVlVUXJkaS95ZENmYVMzQVRrClFzSlB4V28vcjZPTXZRZVpMRkhGYXd0TGZ3OFJOSW5zUW84TnBpRXVuZ05TOHBzY0NkM1BoemNqRFJQQ1Z2dkwKeXZLbUp2SzdIS3BtbG1VNXdXRVd3UGtkQjJBODVHN1BTTFJYd1l4RzRPNkpOdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMGw0Ry9hL3IvN2poa3E4RDNWVk04SGZTb3dUaGg5ZXR3L0dYRUtVVFhwOGdGdFpzCnIzOVBvd3ZEdUE0WjVNRXM3alNvSzFHTXBGcWNuQ3ExcUdnblVJV1VuTGlsQXg4R1gyNHNvb3dSRm95OFBZdEMKZ3RwTUZURWZUTW1ZVTZZaVRPaFBHNU1yZkVaT2FkL1IvUVB0aTBsSlo1Uk5tMWV6Wk5rOU1QbytJeGVDcTk4ZQpvZ1FHc0J5SzdIRWhtMk9lMXRmNlV5YloveHdtUnhWbjYzQ3pxZ3RuV3VFYmtrYVhsenIxeWpwRHZtd0xJWXMrCkgwb0k2WkxuWnRkUWhsY2FKRXhNL3FJN3VnYVhIczdIRUplaUNibHdKQ3dadFVHSTNXK0MxeGd0NzZtL0VyNncKZ2tCWkRwaTROWnlxRWlucENwMTZuUks4VytCUHhLbGhxQmJTWndJREFRQUJBb0lCQUZnZVF0ZHBKWFlNdjVCdAo5elJ6VXJNM3ZlZkRWNlZMVnVKSkJIcFlhM0NyUHduUjc5emplenhVNVRybnpUamhJaXoxcWF2YmtRb1hXcHFmCjJWQWRzTG90K2o1YnFlTlF6NTZSeStpYXUxMnl2ZmNacWxhZGtsa2VKbnBIeDZMaWFHUEd1N3hWUFZYbExWdDAKQWNYMkt6NjVDQ0ozSUxyOVZZdmM0NkRzY2JMSWwyOUNxQ0lFbnd5cndBSG8yVkpIdTFQOHY4V3g0VUJiRm9tegoySzdjQlRUYnpWMXJFQWJYeGZJcmMwdFk3VXBzWnM2aGtNeng4RHpMTGZSWmVWT0JjUEVyNWFSM3pocklBQktnCklJTGV3QjNGN0U2dFhTcW9GdG9WQ0hQMG5hR2hjenBjbkFQTnRNZDZVZ1doQWhkWVNTa2VzTDBjMHRVcUlTRGUKVXJXeVZBRUNnWUVBK1N5bGQ3RlJvdkpUMWxVc3d3dHE0NlhJMElVVkJ5eHZWcEFTQzhMMXVDZStxTDRtUlNnbApBQk9LL0xZaHVNb1JhZkZBVm52ZlBqYnVxM1ZVSnA5RTl0OENkWkhDVlc4TUlvYWViRGF2SkVYK0VjMDhIQU8xCjRNRk1UQndvekExekw4Vml1aTZEdmx4cXM2NVM4clcxTGNEYkptbEF3N0QzeWJlRzNCSWkzSUVDZ1lFQTJDRSsKU0h5U0FJSGpsKzJKa2g4RFQxR0N3MGNZOVRzNlYrNjRJMUtmMzN6RkR2SytOL0N0OHk3czZQQXNLRXhWR1BrQwpJbzBmWlAwUU84eHdwWUswUHV5S1dNaU1VZjdUajRuNXBFVVZDZWE5TFVoV1JlaXo1QklIcVdLK2s4V21GVXB6Cmc3dXVEU0E2UFJQMStpQ2p1Z3RIMEVUYU55cVZEeEduU0J6YzJ1Y0NnWUF4Q2VwZXpoVUUvckFsUklvVXNOQ08Ka1BnZW9iSnJ3UUVBaGtZbTdtMnhtcERaWU9MalJXMVN3SVhnQ25CRWovQXhhM3VBQ2N6N3o0L1ZTcmdQQ2RWbQp5S2tSUG1pQ3ErSTFnVXo0ZXlLby91VnIxM3AzQVB2d2lkcGNPRWFITWpaek5tT2h4TG5FNHlkVXlZQWxxRUZLCkNlU1hnS3R3V0FuTU4wUmhWMmhwQVFLQmdRRER0b2JCK1J2MUhhbk5JQ3JkaVB2a1RibU52OG9YOTRSRHNFWksKcGoxamtZYVluTFFueitpVk9EOE1TTUNUMVZ1Uis1czFVbm5GWjJ2VjJyRi9EemJOYkVGeldGZkl3R3N2cGcvTAo4MHF6NXFBVWExYkVnNDZ5enFqbGVDZC9oUkY2WWlyc2RYMk5JVXZibDBHOU9PVktTWURFVmpVTWs2RGJQbTh1CjNBUWFyUUtCZ0JDSzNkWVI3dEdmNGdHVTRPSytEWTJ2RjNJUDFqQmVCQmNLZDlaMHg1WjNOUWswWVpsTXNZVG4KNlNPSFJydXprMmJkRXYyVm42QWdvV09hVlNEbS9nNS9xSFVnek5vRUZwbCs2N3NnNDV5S2pXV01CSlpMM3ZISwpYVUVWejhzV054V2wzL0t0K3JEK3gvOVE3Yy9YZnF6UWpob0NSZ0RzQjI4dUZyemhBdUNHCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/kubelet-signer.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMGw0Ry9hL3IvN2poa3E4RDNWVk04SGZTb3dUaGg5ZXR3L0dYRUtVVFhwOGdGdFpzCnIzOVBvd3ZEdUE0WjVNRXM3alNvSzFHTXBGcWNuQ3ExcUdnblVJV1VuTGlsQXg4R1gyNHNvb3dSRm95OFBZdEMKZ3RwTUZURWZUTW1ZVTZZaVRPaFBHNU1yZkVaT2FkL1IvUVB0aTBsSlo1Uk5tMWV6Wk5rOU1QbytJeGVDcTk4ZQpvZ1FHc0J5SzdIRWhtMk9lMXRmNlV5YloveHdtUnhWbjYzQ3pxZ3RuV3VFYmtrYVhsenIxeWpwRHZtd0xJWXMrCkgwb0k2WkxuWnRkUWhsY2FKRXhNL3FJN3VnYVhIczdIRUplaUNibHdKQ3dadFVHSTNXK0MxeGd0NzZtL0VyNncKZ2tCWkRwaTROWnlxRWlucENwMTZuUks4VytCUHhLbGhxQmJTWndJREFRQUJBb0lCQUZnZVF0ZHBKWFlNdjVCdAo5elJ6VXJNM3ZlZkRWNlZMVnVKSkJIcFlhM0NyUHduUjc5emplenhVNVRybnpUamhJaXoxcWF2YmtRb1hXcHFmCjJWQWRzTG90K2o1YnFlTlF6NTZSeStpYXUxMnl2ZmNacWxhZGtsa2VKbnBIeDZMaWFHUEd1N3hWUFZYbExWdDAKQWNYMkt6NjVDQ0ozSUxyOVZZdmM0NkRzY2JMSWwyOUNxQ0lFbnd5cndBSG8yVkpIdTFQOHY4V3g0VUJiRm9tegoySzdjQlRUYnpWMXJFQWJYeGZJcmMwdFk3VXBzWnM2aGtNeng4RHpMTGZSWmVWT0JjUEVyNWFSM3pocklBQktnCklJTGV3QjNGN0U2dFhTcW9GdG9WQ0hQMG5hR2hjenBjbkFQTnRNZDZVZ1doQWhkWVNTa2VzTDBjMHRVcUlTRGUKVXJXeVZBRUNnWUVBK1N5bGQ3RlJvdkpUMWxVc3d3dHE0NlhJMElVVkJ5eHZWcEFTQzhMMXVDZStxTDRtUlNnbApBQk9LL0xZaHVNb1JhZkZBVm52ZlBqYnVxM1ZVSnA5RTl0OENkWkhDVlc4TUlvYWViRGF2SkVYK0VjMDhIQU8xCjRNRk1UQndvekExekw4Vml1aTZEdmx4cXM2NVM4clcxTGNEYkptbEF3N0QzeWJlRzNCSWkzSUVDZ1lFQTJDRSsKU0h5U0FJSGpsKzJKa2g4RFQxR0N3MGNZOVRzNlYrNjRJMUtmMzN6RkR2SytOL0N0OHk3czZQQXNLRXhWR1BrQwpJbzBmWlAwUU84eHdwWUswUHV5S1dNaU1VZjdUajRuNXBFVVZDZWE5TFVoV1JlaXo1QklIcVdLK2s4V21GVXB6Cmc3dXVEU0E2UFJQMStpQ2p1Z3RIMEVUYU55cVZEeEduU0J6YzJ1Y0NnWUF4Q2VwZXpoVUUvckFsUklvVXNOQ08Ka1BnZW9iSnJ3UUVBaGtZbTdtMnhtcERaWU9MalJXMVN3SVhnQ25CRWovQXhhM3VBQ2N6N3o0L1ZTcmdQQ2RWbQp5S2tSUG1pQ3ErSTFnVXo0ZXlLby91VnIxM3AzQVB2d2lkcGNPRWFITWpaek5tT2h4TG5FNHlkVXlZQWxxRUZLCkNlU1hnS3R3V0FuTU4wUmhWMmhwQVFLQmdRRER0b2JCK1J2MUhhbk5JQ3JkaVB2a1RibU52OG9YOTRSRHNFWksKcGoxamtZYVluTFFueitpVk9EOE1TTUNUMVZ1Uis1czFVbm5GWjJ2VjJyRi9EemJOYkVGeldGZkl3R3N2cGcvTAo4MHF6NXFBVWExYkVnNDZ5enFqbGVDZC9oUkY2WWlyc2RYMk5JVXZibDBHOU9PVktTWURFVmpVTWs2RGJQbTh1CjNBUWFyUUtCZ0JDSzNkWVI3dEdmNGdHVTRPSytEWTJ2RjNJUDFqQmVCQmNLZDlaMHg1WjNOUWswWVpsTXNZVG4KNlNPSFJydXprMmJkRXYyVm42QWdvV09hVlNEbS9nNS9xSFVnek5vRUZwbCs2N3NnNDV5S2pXV01CSlpMM3ZISwpYVUVWejhzV054V2wzL0t0K3JEK3gvOVE3Yy9YZnF6UWpob0NSZ0RzQjI4dUZyemhBdUNHCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/kubelet-signer.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVytIenQ0dVJxb1F3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHhPVEV5TURreApNRFUyTURSYUZ3MHhPVEV5TVRBeE1EVTJNRFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFNYZ2I5cit2L3VPR1Nyd1BkVlV6d2Q5S2pCT0dIMTYzRDhaY1FwUk5lbnlBVzFteXZmMCtqQzhPNApEaG5rd1N6dU5LZ3JVWXlrV3B5Y0tyV29hQ2RRaFpTY3VLVURId1pmYml5aWpCRVdqTHc5aTBLQzJrd1ZNUjlNCnlaaFRwaUpNNkU4Ymt5dDhSazVwMzlIOUErMkxTVWxubEUyYlY3TmsyVDB3K2o0akY0S3IzeDZpQkFhd0hJcnMKY1NHYlk1N1cxL3BUSnRuL0hDWkhGV2ZyY0xPcUMyZGE0UnVTUnBlWE92WEtPa08rYkFzaGl6NGZTZ2pwa3VkbQoxMUNHVnhva1RFeitvanU2QnBjZXpzY1FsNklKdVhBa0xCbTFRWWpkYjRMWEdDM3ZxYjhTdnJDQ1FGa09tTGcxCm5Lb1NLZWtLblhxZEVyeGI0RS9FcVdHb0Z0Sm5BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFpVE9QNTNOa0tBT2FFS3ZoMXJJL0FqOXloUnpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFBRDhsaDgwR0NrbXRSZnlpOEYyS3ptNnNldlVaODM1RnluZmZZVjVWCjJBOXh6OFNtMHJVcE9FQXFvUjBkakgyM2NHLzVrQlNWK0FOOFpBa1RMeXhxb2djMEp1TTlUNmsyeUt5MHM4a3UKckNDa1VOQTZyWlJCSDAzWkhGMTNyc3lrUWJ3bWFEMnAwYWhFSWc4eml1dmNyVVJ1Ym5pYnRVdVlrcXVyemNocwpJVndMbVB0S3JQVHIrekJHYXBnOEk3RWtnQ2lHdkdKbGZVUDVLR3lLQlppUUVENVlVUXJkaS95ZENmYVMzQVRrClFzSlB4V28vcjZPTXZRZVpMRkhGYXd0TGZ3OFJOSW5zUW84TnBpRXVuZ05TOHBzY0NkM1BoemNqRFJQQ1Z2dkwKeXZLbUp2SzdIS3BtbG1VNXdXRVd3UGtkQjJBODVHN1BTTFJYd1l4RzRPNkpOdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletClientCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVytIenQ0dVJxb1F3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHhPVEV5TURreApNRFUyTURSYUZ3MHhPVEV5TVRBeE1EVTJNRFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFNYZ2I5cit2L3VPR1Nyd1BkVlV6d2Q5S2pCT0dIMTYzRDhaY1FwUk5lbnlBVzFteXZmMCtqQzhPNApEaG5rd1N6dU5LZ3JVWXlrV3B5Y0tyV29hQ2RRaFpTY3VLVURId1pmYml5aWpCRVdqTHc5aTBLQzJrd1ZNUjlNCnlaaFRwaUpNNkU4Ymt5dDhSazVwMzlIOUErMkxTVWxubEUyYlY3TmsyVDB3K2o0akY0S3IzeDZpQkFhd0hJcnMKY1NHYlk1N1cxL3BUSnRuL0hDWkhGV2ZyY0xPcUMyZGE0UnVTUnBlWE92WEtPa08rYkFzaGl6NGZTZ2pwa3VkbQoxMUNHVnhva1RFeitvanU2QnBjZXpzY1FsNklKdVhBa0xCbTFRWWpkYjRMWEdDM3ZxYjhTdnJDQ1FGa09tTGcxCm5Lb1NLZWtLblhxZEVyeGI0RS9FcVdHb0Z0Sm5BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFpVE9QNTNOa0tBT2FFS3ZoMXJJL0FqOXloUnpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFBRDhsaDgwR0NrbXRSZnlpOEYyS3ptNnNldlVaODM1RnluZmZZVjVWCjJBOXh6OFNtMHJVcE9FQXFvUjBkakgyM2NHLzVrQlNWK0FOOFpBa1RMeXhxb2djMEp1TTlUNmsyeUt5MHM4a3UKckNDa1VOQTZyWlJCSDAzWkhGMTNyc3lrUWJ3bWFEMnAwYWhFSWc4eml1dmNyVVJ1Ym5pYnRVdVlrcXVyemNocwpJVndMbVB0S3JQVHIrekJHYXBnOEk3RWtnQ2lHdkdKbGZVUDVLR3lLQlppUUVENVlVUXJkaS95ZENmYVMzQVRrClFzSlB4V28vcjZPTXZRZVpMRkhGYXd0TGZ3OFJOSW5zUW84TnBpRXVuZ05TOHBzY0NkM1BoemNqRFJQQ1Z2dkwKeXZLbUp2SzdIS3BtbG1VNXdXRVd3UGtkQjJBODVHN1BTTFJYd1l4RzRPNkpOdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kubelet-client-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVytIenQ0dVJxb1F3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHhPVEV5TURreApNRFUyTURSYUZ3MHhPVEV5TVRBeE1EVTJNRFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFNYZ2I5cit2L3VPR1Nyd1BkVlV6d2Q5S2pCT0dIMTYzRDhaY1FwUk5lbnlBVzFteXZmMCtqQzhPNApEaG5rd1N6dU5LZ3JVWXlrV3B5Y0tyV29hQ2RRaFpTY3VLVURId1pmYml5aWpCRVdqTHc5aTBLQzJrd1ZNUjlNCnlaaFRwaUpNNkU4Ymt5dDhSazVwMzlIOUErMkxTVWxubEUyYlY3TmsyVDB3K2o0akY0S3IzeDZpQkFhd0hJcnMKY1NHYlk1N1cxL3BUSnRuL0hDWkhGV2ZyY0xPcUMyZGE0UnVTUnBlWE92WEtPa08rYkFzaGl6NGZTZ2pwa3VkbQoxMUNHVnhva1RFeitvanU2QnBjZXpzY1FsNklKdVhBa0xCbTFRWWpkYjRMWEdDM3ZxYjhTdnJDQ1FGa09tTGcxCm5Lb1NLZWtLblhxZEVyeGI0RS9FcVdHb0Z0Sm5BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFpVE9QNTNOa0tBT2FFS3ZoMXJJL0FqOXloUnpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFBRDhsaDgwR0NrbXRSZnlpOEYyS3ptNnNldlVaODM1RnluZmZZVjVWCjJBOXh6OFNtMHJVcE9FQXFvUjBkakgyM2NHLzVrQlNWK0FOOFpBa1RMeXhxb2djMEp1TTlUNmsyeUt5MHM4a3UKckNDa1VOQTZyWlJCSDAzWkhGMTNyc3lrUWJ3bWFEMnAwYWhFSWc4eml1dmNyVVJ1Ym5pYnRVdVlrcXVyemNocwpJVndMbVB0S3JQVHIrekJHYXBnOEk3RWtnQ2lHdkdKbGZVUDVLR3lLQlppUUVENVlVUXJkaS95ZENmYVMzQVRrClFzSlB4V28vcjZPTXZRZVpMRkhGYXd0TGZ3OFJOSW5zUW84TnBpRXVuZ05TOHBzY0NkM1BoemNqRFJQQ1Z2dkwKeXZLbUp2SzdIS3BtbG1VNXdXRVd3UGtkQjJBODVHN1BTTFJYd1l4RzRPNkpOdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletClientCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQwVENDQXJtZ0F3SUJBZ0lJV1lVOElFRHpaU0V3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMU5UaGFGdzB4T1RFeU1UQXhNRFUxTlRoYU1JR1hNVUV3ClB3WURWUVFLRXpoemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpPbTl3Wlc1emFHbG1kQzF0WVdOb2FXNWwKTFdOdmJtWnBaeTF2Y0dWeVlYUnZjakZTTUZBR0ExVUVBeE5KYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1MApPbTl3Wlc1emFHbG1kQzF0WVdOb2FXNWxMV052Ym1acFp5MXZjR1Z5WVhSdmNqcHViMlJsTFdKdmIzUnpkSEpoCmNIQmxjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNVVBNQ0JBWHVrTjNGa3kKVXBzaGJQbzlmeUs5akI0TERLdlZxODlNdTgzTi9sTnl0RWpBcEl4NmJhZWY3cU1QMnVrck5oN2U2dTZrSmRzNwpyai8rRnlHNmZYTDI5bFVwdWw4TWhOUTdQR29rSHFLR1FJeTk5VXc4M1VwZ0JEc1NVY3ZERHREMEgrbXFncENXCmJaak85WE5LYTNSQkY3UXJMWlVLSCtCajloTmQvSldSaVl5S2JSTHVhTFUyUVNwN3ZqdmRnUW1NV3hJNU4rNlQKNllKa0lRMzhhVVcxVlRzM2p4eitmUXZvNlJUQk1vcUZsTkhMNjFibno4K1d0bWFJbnlDalJ1ZDdoaVBIT2FWKwpDNHlxTHNCSnRZQWt2V1YrMFdhd2VzNm8yZnBmQUF0Yy9xVG5NTUcwZ2lpd2Z1SisyU3Q1WVNVY1llOVcrcVpZCmhzbmUyVWtDQXdFQUFhTjFNSE13RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUYKQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRklnOEwycUZmY09Jb2xPL2JtNnFXMTB5UEhhbApNQjhHQTFVZEl3UVlNQmFBRklnOEwycUZmY09Jb2xPL2JtNnFXMTB5UEhhbE1BMEdDU3FHU0liM0RRRUJDd1VBCkE0SUJBUUFPbWNuVjJ3aUlreHlXN3kra0pZUGhMQkZCUTRkaUJURHJPRklmYWJtbUx2YmkzdVV3VkNZNXIyeEQKOXcySDliZ05tL3dsbFJjell5YXMxSXdQRWYwTTNmaVlkRDc0QklEYVhnT1hjZVFta3QwSEhvTW9KU0NzTjF1NgpjMU5VSnBVVFFoK21GUkJzcHFmM0tJNHBRZlZBaWpzNCtFYk82RTBqR3Y1QXFRRlROWHhRMllYaEdwT3RwL0J0CjBjVHZpMU9LQ2NDRHBiK0pIcUpMRUtxUGE4bkFZWnA3b3ZwNVM4T3JpaVk4MTNFd2g4dXhBUGZHL2J0SzZNVnMKT0FtTUNMRzU5L1RHNnJoZjM3L3lSNVVFMEpNSjRkZ3JrejVjMlRNQ2JRTlNIVGNUdGorQ0tPRTUyQjNKRGhTRQo3M3BMR0xaZGdseWtVSit4Q0g0OHNYNE1wT3ViCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFE4d0lFQmU2UTNjV1RKU215RnMrajEvSXIyTUhnc01xOVdyejB5N3pjMytVM0swClNNQ2tqSHB0cDUvdW93L2E2U3MySHQ3cTdxUWwyenV1UC80WElicDljdmIyVlNtNlh3eUUxRHM4YWlRZW9vWkEKakwzMVREemRTbUFFT3hKUnk4TU8wUFFmNmFxQ2tKWnRtTTcxYzBwcmRFRVh0Q3N0bFFvZjRHUDJFMTM4bFpHSgpqSXB0RXU1b3RUWkJLbnUrTzkyQkNZeGJFamszN3BQcGdtUWhEZnhwUmJWVk96ZVBIUDU5QytqcEZNRXlpb1dVCjBjdnJWdWZQejVhMlpvaWZJS05HNTN1R0k4YzVwWDRMaktvdXdFbTFnQ1M5Wlg3UlpyQjZ6cWpaK2w4QUMxeisKcE9jd3diU0NLTEIrNG43WkszbGhKUnhoNzFiNnBsaUd5ZDdaU1FJREFRQUJBb0lCQVFDTFRRbEFRMERVanEvTgpmZjFYSEhIbEU4UGowd3BSMG8zS2l1bEJTWVVaSHgxQjhEdnhrZnpBTVd1Q3ExUU9nUTdHOVh6MHBiQjlzaHZ3CnRtZWZaUWNGR01mRmxUN2RSUG95WnE4Zk9DQ2xCNU9BWUZjUkp0ZFlaVTRwWFdhZ08zc0hCNFJad2JrdGZSTi8KRWxlM1JkWE5BamFqbjhBWjVNdjhKNFFSSTVpNFp1QUFWV3dwRktXODlPaEVYQ1dVVEVHcmIzQmhpSzFaNjhCaQpzK1Q4MkxTdXJaQ0NtUEVha1dRSEV3cWl4QytYRWRlRU1HMWtZSm01T3NGRHc1ODZaRDZHVmhIcWdyNS9aOFgrCllvUjdtNVNHcks4WUdCbzFRR1cwUnBoaDJFVU8zL3FnQldscENYbys3NGNzQnFrblpEK2Y1K0VZZ1RKWUp4QVkKT0dRZitSK0JBb0dCQU1Vd0VhNWxlN2dpaitWaGtTMkNLVkgxSUNtM09jRjZjczdiWHJwOGR6Qk0rWHJxTkpMagpvbWRrMVlnL0pmNDNOWkd4RE9qK2lLT2pJSHkySi9lYzlsVTRuTFhSU0ZJWlg5OFpQZm9RNi9OQXpTWnNLUGZECkxlVS8rV0FIQWpUYll0SWR4MzZuczRUMFducHF1UG82ZFNsQXNxTEM3RVJLWU0xbWxQNUxMblFOQW9HQkFQL1YKVDkzOWRHTnB5amNtNGlqVWVXRlFsMjlkVXdFRmsvVkRNVUJDZFAvcmtlWkVTVmtSSmRuVExPR1ZCZ0tLeUd1TQpIRG9DMXhLd1F2VGI5V0crWGpWV0I4SkpEbFJYL3VoMkF2V0MwTmUySG4vdTJyeXN2QVMvbWhSU3crcHhESHU3ClJ0bEFLS1ZCM3NyN2p2dys3ZGV1RldHdUtwTUJXSEpOdXZveEtuOHRBb0dCQUpxY09DRGYzWVBoUmFaN085UE0KN1EwZ0FCbjFXa25EOHVVU3lGRzhhYy9yYXVuZlhWMlhNcTJUT0lKZDBUSmtvNUlhbXA3TmhPR1pkRTJVbmYzZQppcDhEaG94aERpMmhTN1NvSEJwSXpsaXJCTEFOdW9tWjloQjhldEc2YlJaNHRpRTl6RUFZeWYrRGdMWGZuQzVIClM3b095b0lvQ0F6N3JLOGdzYzQ1c0xDNUFvR0FMY1V2RmNzN29IR1QwUXd1MkJrellocTJEU0dJTVIyYlcvemEKZWVHcDV3TnhSZDRmdFVTaEhmaHZCaWpRTzNJeTZ6TFU5ZmYrSElUV1pkSlljMVZJcTRncHVUT3kwWm93cTh3NQpPVTFmS2NpV2FsTUVaVThPRUZkckxJbW1MWEp1UmxDNkd6SWtVM1NXZElCUEU0ZjZxMlNreEtZUlRkMm13a1J2CjJFVWxrajBDZ1lCUDdwdVFPS0t0K0JNendMd3M2bVhDOWxBdG5nQ2dFNWhwWHpoR2JZeW1VazNlQ0YxaWYzUmsKc25NRlFqeU5lRjBzeWNnSC9CYmpmMkZUVWNYQVpPRGt2Wllnb1dyWnYzWElyODFIQjFHNzBYRlRONlZWY2VMegpSeEI2cDVOMzF3RU1KOC8wMGs4cFVrZjREWTFhOVlSUnplK0FZMFNDcDdOUzEvWmwyM3BPaEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/kubelet-client.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeFE4d0lFQmU2UTNjV1RKU215RnMrajEvSXIyTUhnc01xOVdyejB5N3pjMytVM0swClNNQ2tqSHB0cDUvdW93L2E2U3MySHQ3cTdxUWwyenV1UC80WElicDljdmIyVlNtNlh3eUUxRHM4YWlRZW9vWkEKakwzMVREemRTbUFFT3hKUnk4TU8wUFFmNmFxQ2tKWnRtTTcxYzBwcmRFRVh0Q3N0bFFvZjRHUDJFMTM4bFpHSgpqSXB0RXU1b3RUWkJLbnUrTzkyQkNZeGJFamszN3BQcGdtUWhEZnhwUmJWVk96ZVBIUDU5QytqcEZNRXlpb1dVCjBjdnJWdWZQejVhMlpvaWZJS05HNTN1R0k4YzVwWDRMaktvdXdFbTFnQ1M5Wlg3UlpyQjZ6cWpaK2w4QUMxeisKcE9jd3diU0NLTEIrNG43WkszbGhKUnhoNzFiNnBsaUd5ZDdaU1FJREFRQUJBb0lCQVFDTFRRbEFRMERVanEvTgpmZjFYSEhIbEU4UGowd3BSMG8zS2l1bEJTWVVaSHgxQjhEdnhrZnpBTVd1Q3ExUU9nUTdHOVh6MHBiQjlzaHZ3CnRtZWZaUWNGR01mRmxUN2RSUG95WnE4Zk9DQ2xCNU9BWUZjUkp0ZFlaVTRwWFdhZ08zc0hCNFJad2JrdGZSTi8KRWxlM1JkWE5BamFqbjhBWjVNdjhKNFFSSTVpNFp1QUFWV3dwRktXODlPaEVYQ1dVVEVHcmIzQmhpSzFaNjhCaQpzK1Q4MkxTdXJaQ0NtUEVha1dRSEV3cWl4QytYRWRlRU1HMWtZSm01T3NGRHc1ODZaRDZHVmhIcWdyNS9aOFgrCllvUjdtNVNHcks4WUdCbzFRR1cwUnBoaDJFVU8zL3FnQldscENYbys3NGNzQnFrblpEK2Y1K0VZZ1RKWUp4QVkKT0dRZitSK0JBb0dCQU1Vd0VhNWxlN2dpaitWaGtTMkNLVkgxSUNtM09jRjZjczdiWHJwOGR6Qk0rWHJxTkpMagpvbWRrMVlnL0pmNDNOWkd4RE9qK2lLT2pJSHkySi9lYzlsVTRuTFhSU0ZJWlg5OFpQZm9RNi9OQXpTWnNLUGZECkxlVS8rV0FIQWpUYll0SWR4MzZuczRUMFducHF1UG82ZFNsQXNxTEM3RVJLWU0xbWxQNUxMblFOQW9HQkFQL1YKVDkzOWRHTnB5amNtNGlqVWVXRlFsMjlkVXdFRmsvVkRNVUJDZFAvcmtlWkVTVmtSSmRuVExPR1ZCZ0tLeUd1TQpIRG9DMXhLd1F2VGI5V0crWGpWV0I4SkpEbFJYL3VoMkF2V0MwTmUySG4vdTJyeXN2QVMvbWhSU3crcHhESHU3ClJ0bEFLS1ZCM3NyN2p2dys3ZGV1RldHdUtwTUJXSEpOdXZveEtuOHRBb0dCQUpxY09DRGYzWVBoUmFaN085UE0KN1EwZ0FCbjFXa25EOHVVU3lGRzhhYy9yYXVuZlhWMlhNcTJUT0lKZDBUSmtvNUlhbXA3TmhPR1pkRTJVbmYzZQppcDhEaG94aERpMmhTN1NvSEJwSXpsaXJCTEFOdW9tWjloQjhldEc2YlJaNHRpRTl6RUFZeWYrRGdMWGZuQzVIClM3b095b0lvQ0F6N3JLOGdzYzQ1c0xDNUFvR0FMY1V2RmNzN29IR1QwUXd1MkJrellocTJEU0dJTVIyYlcvemEKZWVHcDV3TnhSZDRmdFVTaEhmaHZCaWpRTzNJeTZ6TFU5ZmYrSElUV1pkSlljMVZJcTRncHVUT3kwWm93cTh3NQpPVTFmS2NpV2FsTUVaVThPRUZkckxJbW1MWEp1UmxDNkd6SWtVM1NXZElCUEU0ZjZxMlNreEtZUlRkMm13a1J2CjJFVWxrajBDZ1lCUDdwdVFPS0t0K0JNendMd3M2bVhDOWxBdG5nQ2dFNWhwWHpoR2JZeW1VazNlQ0YxaWYzUmsKc25NRlFqeU5lRjBzeWNnSC9CYmpmMkZUVWNYQVpPRGt2Wllnb1dyWnYzWElyODFIQjFHNzBYRlRONlZWY2VMegpSeEI2cDVOMzF3RU1KOC8wMGs4cFVrZjREWTFhOVlSUnplK0FZMFNDcDdOUzEvWmwyM3BPaEE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/kubelet-client.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUQwVENDQXJtZ0F3SUJBZ0lJV1lVOElFRHpaU0V3RFFZSktvWklodmNOQVFFTEJRQXdRakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1Td3dLZ1lEVlFRREV5TnJkV0psYkdWMExXSnZiM1J6ZEhKaGNDMXJkV0psWTI5dQpabWxuTFhOcFoyNWxjakFlRncweE9URXlNRGt4TURVMU5UaGFGdzB4T1RFeU1UQXhNRFUxTlRoYU1JR1hNVUV3ClB3WURWUVFLRXpoemVYTjBaVzA2YzJWeWRtbGpaV0ZqWTI5MWJuUnpPbTl3Wlc1emFHbG1kQzF0WVdOb2FXNWwKTFdOdmJtWnBaeTF2Y0dWeVlYUnZjakZTTUZBR0ExVUVBeE5KYzNsemRHVnRPbk5sY25acFkyVmhZMk52ZFc1MApPbTl3Wlc1emFHbG1kQzF0WVdOb2FXNWxMV052Ym1acFp5MXZjR1Z5WVhSdmNqcHViMlJsTFdKdmIzUnpkSEpoCmNIQmxjakNDQVNJd0RRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNVVBNQ0JBWHVrTjNGa3kKVXBzaGJQbzlmeUs5akI0TERLdlZxODlNdTgzTi9sTnl0RWpBcEl4NmJhZWY3cU1QMnVrck5oN2U2dTZrSmRzNwpyai8rRnlHNmZYTDI5bFVwdWw4TWhOUTdQR29rSHFLR1FJeTk5VXc4M1VwZ0JEc1NVY3ZERHREMEgrbXFncENXCmJaak85WE5LYTNSQkY3UXJMWlVLSCtCajloTmQvSldSaVl5S2JSTHVhTFUyUVNwN3ZqdmRnUW1NV3hJNU4rNlQKNllKa0lRMzhhVVcxVlRzM2p4eitmUXZvNlJUQk1vcUZsTkhMNjFibno4K1d0bWFJbnlDalJ1ZDdoaVBIT2FWKwpDNHlxTHNCSnRZQWt2V1YrMFdhd2VzNm8yZnBmQUF0Yy9xVG5NTUcwZ2lpd2Z1SisyU3Q1WVNVY1llOVcrcVpZCmhzbmUyVWtDQXdFQUFhTjFNSE13RGdZRFZSMFBBUUgvQkFRREFnV2dNQk1HQTFVZEpRUU1NQW9HQ0NzR0FRVUYKQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SFFZRFZSME9CQllFRklnOEwycUZmY09Jb2xPL2JtNnFXMTB5UEhhbApNQjhHQTFVZEl3UVlNQmFBRklnOEwycUZmY09Jb2xPL2JtNnFXMTB5UEhhbE1BMEdDU3FHU0liM0RRRUJDd1VBCkE0SUJBUUFPbWNuVjJ3aUlreHlXN3kra0pZUGhMQkZCUTRkaUJURHJPRklmYWJtbUx2YmkzdVV3VkNZNXIyeEQKOXcySDliZ05tL3dsbFJjell5YXMxSXdQRWYwTTNmaVlkRDc0QklEYVhnT1hjZVFta3QwSEhvTW9KU0NzTjF1NgpjMU5VSnBVVFFoK21GUkJzcHFmM0tJNHBRZlZBaWpzNCtFYk82RTBqR3Y1QXFRRlROWHhRMllYaEdwT3RwL0J0CjBjVHZpMU9LQ2NDRHBiK0pIcUpMRUtxUGE4bkFZWnA3b3ZwNVM4T3JpaVk4MTNFd2g4dXhBUGZHL2J0SzZNVnMKT0FtTUNMRzU5L1RHNnJoZjM3L3lSNVVFMEpNSjRkZ3JrejVjMlRNQ2JRTlNIVGNUdGorQ0tPRTUyQjNKRGhTRQo3M3BMR0xaZGdseWtVSit4Q0g0OHNYNE1wT3ViCi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.KubeletServingCABundle": {
        "BundleRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVytIenQ0dVJxb1F3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHhPVEV5TURreApNRFUyTURSYUZ3MHhPVEV5TVRBeE1EVTJNRFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFNYZ2I5cit2L3VPR1Nyd1BkVlV6d2Q5S2pCT0dIMTYzRDhaY1FwUk5lbnlBVzFteXZmMCtqQzhPNApEaG5rd1N6dU5LZ3JVWXlrV3B5Y0tyV29hQ2RRaFpTY3VLVURId1pmYml5aWpCRVdqTHc5aTBLQzJrd1ZNUjlNCnlaaFRwaUpNNkU4Ymt5dDhSazVwMzlIOUErMkxTVWxubEUyYlY3TmsyVDB3K2o0akY0S3IzeDZpQkFhd0hJcnMKY1NHYlk1N1cxL3BUSnRuL0hDWkhGV2ZyY0xPcUMyZGE0UnVTUnBlWE92WEtPa08rYkFzaGl6NGZTZ2pwa3VkbQoxMUNHVnhva1RFeitvanU2QnBjZXpzY1FsNklKdVhBa0xCbTFRWWpkYjRMWEdDM3ZxYjhTdnJDQ1FGa09tTGcxCm5Lb1NLZWtLblhxZEVyeGI0RS9FcVdHb0Z0Sm5BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFpVE9QNTNOa0tBT2FFS3ZoMXJJL0FqOXloUnpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFBRDhsaDgwR0NrbXRSZnlpOEYyS3ptNnNldlVaODM1RnluZmZZVjVWCjJBOXh6OFNtMHJVcE9FQXFvUjBkakgyM2NHLzVrQlNWK0FOOFpBa1RMeXhxb2djMEp1TTlUNmsyeUt5MHM4a3UKckNDa1VOQTZyWlJCSDAzWkhGMTNyc3lrUWJ3bWFEMnAwYWhFSWc4eml1dmNyVVJ1Ym5pYnRVdVlrcXVyemNocwpJVndMbVB0S3JQVHIrekJHYXBnOEk3RWtnQ2lHdkdKbGZVUDVLR3lLQlppUUVENVlVUXJkaS95ZENmYVMzQVRrClFzSlB4V28vcjZPTXZRZVpMRkhGYXd0TGZ3OFJOSW5zUW84TnBpRXVuZ05TOHBzY0NkM1BoemNqRFJQQ1Z2dkwKeXZLbUp2SzdIS3BtbG1VNXdXRVd3UGtkQjJBODVHN1BTTFJYd1l4RzRPNkpOdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/kubelet-serving-ca-bundle.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURIakNDQWdhZ0F3SUJBZ0lJVytIenQ0dVJxb1F3RFFZSktvWklodmNOQVFFTEJRQXdMVEVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SY3dGUVlEVlFRREV3NXJkV0psYkdWMExYTnBaMjVsY2pBZUZ3MHhPVEV5TURreApNRFUyTURSYUZ3MHhPVEV5TVRBeE1EVTJNRFJhTUMweEVqQVFCZ05WQkFzVENXOXdaVzV6YUdsbWRERVhNQlVHCkExVUVBeE1PYTNWaVpXeGxkQzF6YVdkdVpYSXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRRFNYZ2I5cit2L3VPR1Nyd1BkVlV6d2Q5S2pCT0dIMTYzRDhaY1FwUk5lbnlBVzFteXZmMCtqQzhPNApEaG5rd1N6dU5LZ3JVWXlrV3B5Y0tyV29hQ2RRaFpTY3VLVURId1pmYml5aWpCRVdqTHc5aTBLQzJrd1ZNUjlNCnlaaFRwaUpNNkU4Ymt5dDhSazVwMzlIOUErMkxTVWxubEUyYlY3TmsyVDB3K2o0akY0S3IzeDZpQkFhd0hJcnMKY1NHYlk1N1cxL3BUSnRuL0hDWkhGV2ZyY0xPcUMyZGE0UnVTUnBlWE92WEtPa08rYkFzaGl6NGZTZ2pwa3VkbQoxMUNHVnhva1RFeitvanU2QnBjZXpzY1FsNklKdVhBa0xCbTFRWWpkYjRMWEdDM3ZxYjhTdnJDQ1FGa09tTGcxCm5Lb1NLZWtLblhxZEVyeGI0RS9FcVdHb0Z0Sm5BZ01CQUFHalFqQkFNQTRHQTFVZER3RUIvd1FFQXdJQ3BEQVAKQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlFpVE9QNTNOa0tBT2FFS3ZoMXJJL0FqOXloUnpBTgpCZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFBRDhsaDgwR0NrbXRSZnlpOEYyS3ptNnNldlVaODM1RnluZmZZVjVWCjJBOXh6OFNtMHJVcE9FQXFvUjBkakgyM2NHLzVrQlNWK0FOOFpBa1RMeXhxb2djMEp1TTlUNmsyeUt5MHM4a3UKckNDa1VOQTZyWlJCSDAzWkhGMTNyc3lrUWJ3bWFEMnAwYWhFSWc4eml1dmNyVVJ1Ym5pYnRVdVlrcXVyemNocwpJVndMbVB0S3JQVHIrekJHYXBnOEk3RWtnQ2lHdkdKbGZVUDVLR3lLQlppUUVENVlVUXJkaS95ZENmYVMzQVRrClFzSlB4V28vcjZPTXZRZVpMRkhGYXd0TGZ3OFJOSW5zUW84TnBpRXVuZ05TOHBzY0NkM1BoemNqRFJQQ1Z2dkwKeXZLbUp2SzdIS3BtbG1VNXdXRVd3UGtkQjJBODVHN1BTTFJYd1l4RzRPNkpOdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K"
            }
        ]
    },
    "*tls.MCSCertKey": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURmekNDQW1lZ0F3SUJBZ0lJQVl5Y2VrcTNSbTB3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU1TVRJd09URXdOVFUxT0ZvWApEVEk1TVRJd05qRXdOVFl3TVZvd056RTFNRE1HQTFVRUF4TXNZWEJwTFdsdWRDNWpiSFZ6ZEdWeUxUTTBNMll1CmMyRnVaR0p2ZURFMk5qTXViM0JsYm5Sc1l5NWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUURKeFRFVUxmclc3RmhuTEpjN0hZU1pROTk1QjRtSFlUMzR2bnpTN290clI4bWU5d0RFVFQzWQpzMytJdEl6UGlxUWtqU3ZKQ3UwZHFkNC9jL21PZXZXaU5yc2hoQTB5Rnl4SkRLZURMM3JJOWhKTzNJeVlsdmFkCmlFMWNsR1R1RWpGTHpsYlVhNWlGbmFUb3l3MldWTFRqeEZxdkNzNkZqZTZzdjFmUlR2NlZ2c1UvNUhzeVlDeGUKcDg1LzZxRFZqYXRRUnFXQ0Nmc3ZCODk5dmxwWlZPakl3eDZjbDF4SXZtZ0ZYSVJMVzZ5TE5XZGU1YXU2UkpmQgovWkludnlYd203dEFYZ3g0d3pRdW5nVUhiQkVudExiRnh0RWk5bVhUY3Z1dzlFSU9YL0JWYmJSMHdEUGwwS0ZZClNCTkZuOThOMzhEUGhKTlAxY0pDSHhGeS9xZ3ovOHZaQWdNQkFBR2pnWjh3Z1p3d0V3WURWUjBsQkF3d0NnWUkKS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVRU0xEZ1NDQ0NsbE5VbmZaQnh0Mgp0UDNNS2Rnd0h3WURWUjBqQkJnd0ZvQVVRU0xEZ1NDQ0NsbE5VbmZaQnh0MnRQM01LZGd3TndZRFZSMFJCREF3CkxvSXNZWEJwTFdsdWRDNWpiSFZ6ZEdWeUxUTTBNMll1YzJGdVpHSnZlREUyTmpNdWIzQmxiblJzWXk1amIyMHcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUNQMC9XUEdqUmlOcmV5TkRSeDBQb1k5WjBrMm41OE9qRTQ4RE9GUworK3k4VVROV1BLWHk1WU5kaTRwNmQvT0NwK1FxM1UxOWNYV29rMkkrZVljTXUrd0xEWUtMWHg4UFgySzRXRE9HCmtobnRncy91TGIrVUx0cmkwYmd2ZTZTQlBNN0ZmWTQ2T2ptVkFkZDhiR0Y1ZzQ0RFpHTFphTGEzaUVEd1hnRmkKVE1pQUh6Z0FSdHE4elhsY2p4eGJDNkRJSm5va3Y1Uk1QME1SVUdrNndQWk9obGNZTlFkVXZOeXZBM1RmaW5UbQpseDV2ZjM0b1cvbGZBTzBKUmhMYzRRQ3YyaGtNdjgzZWZ1eWIvT0w2MGg2OW5JMnhvazY5dndFNXNiNjRmbE1MCkJKQnlZRDN6QURPbi8rSk10QTZRUXovMGt0VDErTUFtc0doTldoc3JLWk1HQ1ZJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeWNVeEZDMzYxdXhZWnl5WE94MkVtVVBmZVFlSmgyRTkrTDU4MHU2TGEwZkpudmNBCnhFMDkyTE4vaUxTTXo0cWtKSTByeVFydEhhbmVQM1A1am5yMW9qYTdJWVFOTWhjc1NReW5neTk2eVBZU1R0eU0KbUpiMm5ZaE5YSlJrN2hJeFM4NVcxR3VZaFoyazZNc05sbFMwNDhSYXJ3ck9oWTN1ckw5WDBVNytsYjdGUCtSNwpNbUFzWHFmT2YrcWcxWTJyVUVhbGdnbjdMd2ZQZmI1YVdWVG95TU1lbkpkY1NMNW9CVnlFUzF1c2l6Vm5YdVdyCnVrU1h3ZjJTSjc4bDhKdTdRRjRNZU1NMExwNEZCMndSSjdTMnhjYlJJdlpsMDNMN3NQUkNEbC93VlcyMGRNQXoKNWRDaFdFZ1RSWi9mRGQvQXo0U1RUOVhDUWg4UmN2Nm9NLy9MMlFJREFRQUJBb0lCQUYwWUxLTGc3Q0dKL3Vmcgp2UU03aFZpcDVrd1RYRE1vZk0xdUptMjBQb09MSmMzQXJZdmxENm9TZDc5OWZwS3Jwenh1SGt1dVRPVW80VEJwCnREVTNLbXBqMGtlT2hBQWVqUUpQWW1LMjMzSWxoeUQzeGE4SnlGTzY5ZWJIV1NJM0pxT1JXcUs3MmkyY0pPQjcKLzVMakZtc1l4N2FIeCszN0pLcHp4bkwrZlp4ZERHR0R5VStCSWtCVEVXcktuZDN1aG5KQThoZTJSRDh6ZjRVVAo1eGZFQ2ZhMGE1ZTdHS0lXTGNZWXFZQjhmbGMvWmZwb2c3eEQybVBNNU1iYlFDWGp6eFdSWjk5elNlM3N5Z29ICkxWRDM5dGVhTk9SeEt5cVU1Q09zV3RkdWFTMzR5Z1NsT0ljT2ZxOVNnUjRPaHBReEJ0cUxKMHRrWFlrcFR5SmsKY29NWURtRUNnWUVBMERVcE9YRllRYnFWTUhSSFRGUkNudjA1Tm1oZU9iWU9xWU9VUmY0Mmxia1N4bnlZR0FiSgpnY2djbExEU1kzQkZ5VTBTRkh2UjJFMnB5NThIT2MzOXp2OXBLMXRHaWI1T0VzeGRPc0FRd095WjNNZ0l0YjByCithcVAxSi81eWpYakhiUW1hclV2ckxUTXhjWEVud3lUTjBwaG96cE9yYm5WMmhGSUlKZzh1KzBDZ1lFQStCWEEKeFJIL1luNFphTSsyMUtDZFdtQTdJYVZ0YVViSnR2c1p2UVdSRThNTXdpZHNzbjU3blQzYkNpQjg3MVVJZHJoMApGMWp2RTVQQ2ZiNTZkMmsxU2lwdXNnQ09oSWlyL1o2R2I2aC9WbGx5TkIzcnRjZEZSbE5DeTZVREcwUXU1bjNUCmR1Vjl4YnpSdlJRcmVGVTREcUQ1SWgxUnhQUlM5NFAwSitCOFNoMENnWUVBelFsOUptZDdiWWNzQWtLUU1CZk8KWDdtcFRPNHMxSko0RC9GVzVESzdXR2lnbDd6OUhyUVlYdWxOVkJScHE2bFY0QzQ0dnRsTXhzRjhrOXh4QmpqWQpXSy9ueHQybE1tS3BpaE9kUUEwQ3NxcU52d0Z5cWw2MzNxOWI0eDBEcFdHNTNuZVpXWDVDaThhazNhS3J4YUZoCm5KSndZb2s2RUJVeEJ3WDd6TFYvSWVVQ2dZQm9oT21wWFhMR01UQk5XeTNCR1VZU0hIYnRMd0FRbVpWRWRUZ2IKemV1WWN0VytPdFB0dzZJYTFrT2hXWnlwVEo3N1BhMFRaUkdjb3VVUEN5QVhqUWk1alhVRG8zNW4waGo4Q2p6RApjQzd0MTFOcEo2MzE4TlY3MG5wU3g5dXVNaVM4VVFpMWoreFVVYi9mdEU2NExOY29PcU9idnRTRGNSZy9WYVdZCjQxZ1o5UUtCZ0NvWGpneThxTFJFeURMRlBpNzdsVlAxV0FPR1NQWHc0aDdMdlRnQ0RMbm9CTXFiZURLL3hPc0YKQ1VCUTdzSm9GL3lrVkYzTkFMVUVveDBIZWs2czNYLzcxcWEyOFBNVzU4eTBaUHRGRXhoWFlrUXFpL3k2b3RSeQplSDhlV3graTd6VlRrcHJRb3VLSU42NWlUSVd4MDlrSjg2QzlEN3h0NDg1QlhMZHR0dkpwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
        "FileList": [
            {
                "Filename": "tls/machine-config-server.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeWNVeEZDMzYxdXhZWnl5WE94MkVtVVBmZVFlSmgyRTkrTDU4MHU2TGEwZkpudmNBCnhFMDkyTE4vaUxTTXo0cWtKSTByeVFydEhhbmVQM1A1am5yMW9qYTdJWVFOTWhjc1NReW5neTk2eVBZU1R0eU0KbUpiMm5ZaE5YSlJrN2hJeFM4NVcxR3VZaFoyazZNc05sbFMwNDhSYXJ3ck9oWTN1ckw5WDBVNytsYjdGUCtSNwpNbUFzWHFmT2YrcWcxWTJyVUVhbGdnbjdMd2ZQZmI1YVdWVG95TU1lbkpkY1NMNW9CVnlFUzF1c2l6Vm5YdVdyCnVrU1h3ZjJTSjc4bDhKdTdRRjRNZU1NMExwNEZCMndSSjdTMnhjYlJJdlpsMDNMN3NQUkNEbC93VlcyMGRNQXoKNWRDaFdFZ1RSWi9mRGQvQXo0U1RUOVhDUWg4UmN2Nm9NLy9MMlFJREFRQUJBb0lCQUYwWUxLTGc3Q0dKL3Vmcgp2UU03aFZpcDVrd1RYRE1vZk0xdUptMjBQb09MSmMzQXJZdmxENm9TZDc5OWZwS3Jwenh1SGt1dVRPVW80VEJwCnREVTNLbXBqMGtlT2hBQWVqUUpQWW1LMjMzSWxoeUQzeGE4SnlGTzY5ZWJIV1NJM0pxT1JXcUs3MmkyY0pPQjcKLzVMakZtc1l4N2FIeCszN0pLcHp4bkwrZlp4ZERHR0R5VStCSWtCVEVXcktuZDN1aG5KQThoZTJSRDh6ZjRVVAo1eGZFQ2ZhMGE1ZTdHS0lXTGNZWXFZQjhmbGMvWmZwb2c3eEQybVBNNU1iYlFDWGp6eFdSWjk5elNlM3N5Z29ICkxWRDM5dGVhTk9SeEt5cVU1Q09zV3RkdWFTMzR5Z1NsT0ljT2ZxOVNnUjRPaHBReEJ0cUxKMHRrWFlrcFR5SmsKY29NWURtRUNnWUVBMERVcE9YRllRYnFWTUhSSFRGUkNudjA1Tm1oZU9iWU9xWU9VUmY0Mmxia1N4bnlZR0FiSgpnY2djbExEU1kzQkZ5VTBTRkh2UjJFMnB5NThIT2MzOXp2OXBLMXRHaWI1T0VzeGRPc0FRd095WjNNZ0l0YjByCithcVAxSi81eWpYakhiUW1hclV2ckxUTXhjWEVud3lUTjBwaG96cE9yYm5WMmhGSUlKZzh1KzBDZ1lFQStCWEEKeFJIL1luNFphTSsyMUtDZFdtQTdJYVZ0YVViSnR2c1p2UVdSRThNTXdpZHNzbjU3blQzYkNpQjg3MVVJZHJoMApGMWp2RTVQQ2ZiNTZkMmsxU2lwdXNnQ09oSWlyL1o2R2I2aC9WbGx5TkIzcnRjZEZSbE5DeTZVREcwUXU1bjNUCmR1Vjl4YnpSdlJRcmVGVTREcUQ1SWgxUnhQUlM5NFAwSitCOFNoMENnWUVBelFsOUptZDdiWWNzQWtLUU1CZk8KWDdtcFRPNHMxSko0RC9GVzVESzdXR2lnbDd6OUhyUVlYdWxOVkJScHE2bFY0QzQ0dnRsTXhzRjhrOXh4QmpqWQpXSy9ueHQybE1tS3BpaE9kUUEwQ3NxcU52d0Z5cWw2MzNxOWI0eDBEcFdHNTNuZVpXWDVDaThhazNhS3J4YUZoCm5KSndZb2s2RUJVeEJ3WDd6TFYvSWVVQ2dZQm9oT21wWFhMR01UQk5XeTNCR1VZU0hIYnRMd0FRbVpWRWRUZ2IKemV1WWN0VytPdFB0dzZJYTFrT2hXWnlwVEo3N1BhMFRaUkdjb3VVUEN5QVhqUWk1alhVRG8zNW4waGo4Q2p6RApjQzd0MTFOcEo2MzE4TlY3MG5wU3g5dXVNaVM4VVFpMWoreFVVYi9mdEU2NExOY29PcU9idnRTRGNSZy9WYVdZCjQxZ1o5UUtCZ0NvWGpneThxTFJFeURMRlBpNzdsVlAxV0FPR1NQWHc0aDdMdlRnQ0RMbm9CTXFiZURLL3hPc0YKQ1VCUTdzSm9GL3lrVkYzTkFMVUVveDBIZWs2czNYLzcxcWEyOFBNVzU4eTBaUHRGRXhoWFlrUXFpL3k2b3RSeQplSDhlV3graTd6VlRrcHJRb3VLSU42NWlUSVd4MDlrSjg2QzlEN3h0NDg1QlhMZHR0dkpwCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg=="
            },
            {
                "Filename": "tls/machine-config-server.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURmekNDQW1lZ0F3SUJBZ0lJQVl5Y2VrcTNSbTB3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU1TVRJd09URXdOVFUxT0ZvWApEVEk1TVRJd05qRXdOVFl3TVZvd056RTFNRE1HQTFVRUF4TXNZWEJwTFdsdWRDNWpiSFZ6ZEdWeUxUTTBNMll1CmMyRnVaR0p2ZURFMk5qTXViM0JsYm5Sc1l5NWpiMjB3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXcKZ2dFS0FvSUJBUURKeFRFVUxmclc3RmhuTEpjN0hZU1pROTk1QjRtSFlUMzR2bnpTN290clI4bWU5d0RFVFQzWQpzMytJdEl6UGlxUWtqU3ZKQ3UwZHFkNC9jL21PZXZXaU5yc2hoQTB5Rnl4SkRLZURMM3JJOWhKTzNJeVlsdmFkCmlFMWNsR1R1RWpGTHpsYlVhNWlGbmFUb3l3MldWTFRqeEZxdkNzNkZqZTZzdjFmUlR2NlZ2c1UvNUhzeVlDeGUKcDg1LzZxRFZqYXRRUnFXQ0Nmc3ZCODk5dmxwWlZPakl3eDZjbDF4SXZtZ0ZYSVJMVzZ5TE5XZGU1YXU2UkpmQgovWkludnlYd203dEFYZ3g0d3pRdW5nVUhiQkVudExiRnh0RWk5bVhUY3Z1dzlFSU9YL0JWYmJSMHdEUGwwS0ZZClNCTkZuOThOMzhEUGhKTlAxY0pDSHhGeS9xZ3ovOHZaQWdNQkFBR2pnWjh3Z1p3d0V3WURWUjBsQkF3d0NnWUkKS3dZQkJRVUhBd0V3REFZRFZSMFRBUUgvQkFJd0FEQWRCZ05WSFE0RUZnUVVRU0xEZ1NDQ0NsbE5VbmZaQnh0Mgp0UDNNS2Rnd0h3WURWUjBqQkJnd0ZvQVVRU0xEZ1NDQ0NsbE5VbmZaQnh0MnRQM01LZGd3TndZRFZSMFJCREF3CkxvSXNZWEJwTFdsdWRDNWpiSFZ6ZEdWeUxUTTBNMll1YzJGdVpHSnZlREUyTmpNdWIzQmxiblJzWXk1amIyMHcKRFFZSktvWklodmNOQVFFTEJRQURnZ0VCQUNQMC9XUEdqUmlOcmV5TkRSeDBQb1k5WjBrMm41OE9qRTQ4RE9GUworK3k4VVROV1BLWHk1WU5kaTRwNmQvT0NwK1FxM1UxOWNYV29rMkkrZVljTXUrd0xEWUtMWHg4UFgySzRXRE9HCmtobnRncy91TGIrVUx0cmkwYmd2ZTZTQlBNN0ZmWTQ2T2ptVkFkZDhiR0Y1ZzQ0RFpHTFphTGEzaUVEd1hnRmkKVE1pQUh6Z0FSdHE4elhsY2p4eGJDNkRJSm5va3Y1Uk1QME1SVUdrNndQWk9obGNZTlFkVXZOeXZBM1RmaW5UbQpseDV2ZjM0b1cvbGZBTzBKUmhMYzRRQ3YyaGtNdjgzZWZ1eWIvT0w2MGg2OW5JMnhvazY5dndFNXNiNjRmbE1MCkJKQnlZRDN6QURPbi8rSk10QTZRUXovMGt0VDErTUFtc0doTldoc3JLWk1HQ1ZJPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.RootCA": {
        "CertRaw": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJU3VKUFBLNC96Lzh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU1TVRJd09URXdOVFUxT0ZvWApEVEk1TVRJd05qRXdOVFUxT0Zvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0Q1dWQysrQ3VHb0gKRGFOcVEyUVhlZ01GUmlCZjlYc3V6T3lyTFNJOEZyKzVFMW51cEV6SnZZNDg2dEpYTTZuQWkrajVtWjUwMENkZgpDMmtmQU1Vc2h6NFZZNXZYUGxvcWh4VkRtWkhyU3pzVk5MNFVPV25GdUNwZGZMb3ZoODF0c1Q5V0txQTFhMlY1Cm1jV0FiNFltcGlJSmZSaFk3TVBhVDcyS3pnakFtR0JSV3FYQktlaTdBTXFHRnRJTjQ4eTZhU3ExbFBhTU53cnoKR3EzOWFCdFM2aW1mNGlnd0hxMXE1QmpwSW45Qi81c0tHaFNXeUxrQXRldll6UjhzQUFkcGdnMjRsWnlsUm5xOQpqWDJCdndodldsMzRBK3dsWnZqL2Jrak94SmFaSUZjKzQyWk1lK1VTMmFKcU5oUGNCdklyQU4rSjdPcmFteVcxCjcvTVFmZjhVZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVFTTERnU0NDQ2xsTlVuZlpCeHQydFAzTUtkZ3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdpK2d0NGRXUlJBZVJNd3hlVzdCWUJ2aEhEb3NsZzBGcmV5K2pubENHN1JDTy9OWXM0TStvdFYzZWxVCjBjL3FLeDVjWUZHTDFtVGFhUDFmemlHdGdNamlnZVljL3NiN01ISCtDa3Z5OHNmMi9OdmJna040RUtodDhUTWIKN2tRWVJuTFFPQmYwTmZqNWpyZEdYVUthTk5zeHUzM1FsMmw3N3F2elkzMkswTG11SEMreWUvUXdKb2R1STdoUwpjZnYyOGs1clZKa2NKMCtLN0graUc1bHJmWVdTUmNyT2c5RXAwbi9CU1h1ejZMb2RuczZZY2Zxanhnc3Nra012Ck5hT1BIRUVYRzc2RUc3UGt1dEx1WDRJeTV3N2wvUzBvSng5ekgxNkFIbzVSY3JvQStzVzdINnBzbS9rMkg3b2MKZDFFQkZ6SVdCWUhPZXZlRUFSeXVhNXNJYmJ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
        "KeyRaw": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNENXVkMrK0N1R29IRGFOcVEyUVhlZ01GUmlCZjlYc3V6T3lyTFNJOEZyKzVFMW51CnBFekp2WTQ4NnRKWE02bkFpK2o1bVo1MDBDZGZDMmtmQU1Vc2h6NFZZNXZYUGxvcWh4VkRtWkhyU3pzVk5MNFUKT1duRnVDcGRmTG92aDgxdHNUOVdLcUExYTJWNW1jV0FiNFltcGlJSmZSaFk3TVBhVDcyS3pnakFtR0JSV3FYQgpLZWk3QU1xR0Z0SU40OHk2YVNxMWxQYU1Od3J6R3EzOWFCdFM2aW1mNGlnd0hxMXE1QmpwSW45Qi81c0tHaFNXCnlMa0F0ZXZZelI4c0FBZHBnZzI0bFp5bFJucTlqWDJCdndodldsMzRBK3dsWnZqL2Jrak94SmFaSUZjKzQyWk0KZStVUzJhSnFOaFBjQnZJckFOK0o3T3JhbXlXMTcvTVFmZjhVZ3dJREFRQUJBb0lCQVFEV1NqZlBYR0R0Njdmbwppd1dwZmdTUHlsbDliTEF3NFY2aDNkWGM1WERyRXNwZXZNalEzUFMyTzBqeityb1JrMFdZdk5mN3pLakM1QkVTCnVLSkNPejlSNE1IVUpBWkkveXpQVGozOWtLcVJsdCswTjlEZi9zWmZSbWx3T0JQKzBoLy9wNXk2VGNZa2NiUXEKbGM0dlVPS2NTOGdraDJWa25lMlY5SkRDWDAyNW5mbTlCK1hDQXpQTmFvZ3BNQ3Y0UUZITFhFaVdOM05pN200agpaNXExWkhTU3N1czFiZXhsVk1vdytSMmFLYmRBaFkwVDNFUU1Yck9CZHdac0p0QzJGQU5WYjkzZU50d2FHSy9jCmdvY1dOMjV2Z1dPM05Wd0dBWjhFSm5UL2Y5OHg0dlhudGJEODQ2dVB5K1JVUXRreUowTmkzYkNwNmExbkFJWU4KRlh0cG1FK3BBb0dCQVBHL1hpak9ld1JhRTQ2MmRCeVFPbStTUC9NcWJ4UWN6dlZPR2FJNzVzeFkrdWYxeE5NdgpKci80ZnlWYy9aaUx2MkxWS2NRWDRLRXVPQmtranRxNDBPOUdBaE92M24zZlJxQ0FyNzJHK01QbDR2djlwZjlTCjNCaGhKeDJWaXJSb3Y4VlhQUHpqMlNxWWxVS0lpRnQzQWtmSkM2eXVTbWdNRTFkQWNBQlpPU2xIQW9HQkFPMWMKa2o2ckxDOWkxYmZoRGRlN0dSU3cyazlaRDl0bFNkTnIwOFc5Z3B4ZFZiMGwxYnN6SEErb2lMSWFZNXJHY1Q4dQpHS2VRNHZiWWJLaThhNHFKdHlzWS93QlBhWi9NSjJraTM4RU5zVmM3dUdMUGFyZGY1Um9OVVUveTBDblRsVldyCnZSVGszTG5VSGNGZkN0MXZHdkUyTGtEekdCRnhkamRLa0htVlRaamxBb0dCQUlyaFY2UzF5bkpibFRTOW1NTDQKRUxvY0dPVUhrYnpLT0JNeEJRVHd5TXpJcVl3czR5QTN6RmtvMTFLTnM1cTVYZi9YV2lFdlhucjZaSHY5UnB4Ywo1SnN4YXV3SWN4ZDQ5OGdwWmN6S0I0dnpPNDFzMExwM3piMnJ3cDc2VkM4RXBuY21nUUQvbkxrZDQxSFB3aFpaCnJsT3pLaVBRRlNybEZROWhFM2IveXhqdEFvR0FEa1lEMFZydnhFVzRQbDk5T3B6WXJFTGFUZTA0SStSYVpTbFYKeWMxVW5seUtmRjViRk8vRTN6Z3VTQytJRDlXaEY4Q0k0UUs0YzBtZWR5TWxnR1k1cXBETlBOS0pzbjlQVzJZcQplR3gvWHBTTHlQMWFHSDdld3d0TCtYZkxoc2hmY1pCclJXZGgwcGJyMXlZRS9EM2pLK0FyTmVLb2J0d1kxTWhhCkdjV2RyZlVDZ1lFQTNMcUZIQVdINC94TldFNUYrOEphcnlTVXVlYlNTckZYVG9RNHlrWVU5aDIyamt5Ympvb3cKbk14c2NSLzMybEdCdHlpN3lxOFhQYlVWQ3AvSElsYkRPVkdhOFdlQnhlTXZWYTM5R3pFZ1A0WjZoRXJFVkh6dgp0ckJaTHp1SHRPMVo2Ui90ZDJWZFR4QkQvZmlpeHF6V0NuZ3lxQ0IrVmQ4RTM5VmNaa1B4UTBVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "FileList": [
            {
                "Filename": "tls/root-ca.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBNENXVkMrK0N1R29IRGFOcVEyUVhlZ01GUmlCZjlYc3V6T3lyTFNJOEZyKzVFMW51CnBFekp2WTQ4NnRKWE02bkFpK2o1bVo1MDBDZGZDMmtmQU1Vc2h6NFZZNXZYUGxvcWh4VkRtWkhyU3pzVk5MNFUKT1duRnVDcGRmTG92aDgxdHNUOVdLcUExYTJWNW1jV0FiNFltcGlJSmZSaFk3TVBhVDcyS3pnakFtR0JSV3FYQgpLZWk3QU1xR0Z0SU40OHk2YVNxMWxQYU1Od3J6R3EzOWFCdFM2aW1mNGlnd0hxMXE1QmpwSW45Qi81c0tHaFNXCnlMa0F0ZXZZelI4c0FBZHBnZzI0bFp5bFJucTlqWDJCdndodldsMzRBK3dsWnZqL2Jrak94SmFaSUZjKzQyWk0KZStVUzJhSnFOaFBjQnZJckFOK0o3T3JhbXlXMTcvTVFmZjhVZ3dJREFRQUJBb0lCQVFEV1NqZlBYR0R0Njdmbwppd1dwZmdTUHlsbDliTEF3NFY2aDNkWGM1WERyRXNwZXZNalEzUFMyTzBqeityb1JrMFdZdk5mN3pLakM1QkVTCnVLSkNPejlSNE1IVUpBWkkveXpQVGozOWtLcVJsdCswTjlEZi9zWmZSbWx3T0JQKzBoLy9wNXk2VGNZa2NiUXEKbGM0dlVPS2NTOGdraDJWa25lMlY5SkRDWDAyNW5mbTlCK1hDQXpQTmFvZ3BNQ3Y0UUZITFhFaVdOM05pN200agpaNXExWkhTU3N1czFiZXhsVk1vdytSMmFLYmRBaFkwVDNFUU1Yck9CZHdac0p0QzJGQU5WYjkzZU50d2FHSy9jCmdvY1dOMjV2Z1dPM05Wd0dBWjhFSm5UL2Y5OHg0dlhudGJEODQ2dVB5K1JVUXRreUowTmkzYkNwNmExbkFJWU4KRlh0cG1FK3BBb0dCQVBHL1hpak9ld1JhRTQ2MmRCeVFPbStTUC9NcWJ4UWN6dlZPR2FJNzVzeFkrdWYxeE5NdgpKci80ZnlWYy9aaUx2MkxWS2NRWDRLRXVPQmtranRxNDBPOUdBaE92M24zZlJxQ0FyNzJHK01QbDR2djlwZjlTCjNCaGhKeDJWaXJSb3Y4VlhQUHpqMlNxWWxVS0lpRnQzQWtmSkM2eXVTbWdNRTFkQWNBQlpPU2xIQW9HQkFPMWMKa2o2ckxDOWkxYmZoRGRlN0dSU3cyazlaRDl0bFNkTnIwOFc5Z3B4ZFZiMGwxYnN6SEErb2lMSWFZNXJHY1Q4dQpHS2VRNHZiWWJLaThhNHFKdHlzWS93QlBhWi9NSjJraTM4RU5zVmM3dUdMUGFyZGY1Um9OVVUveTBDblRsVldyCnZSVGszTG5VSGNGZkN0MXZHdkUyTGtEekdCRnhkamRLa0htVlRaamxBb0dCQUlyaFY2UzF5bkpibFRTOW1NTDQKRUxvY0dPVUhrYnpLT0JNeEJRVHd5TXpJcVl3czR5QTN6RmtvMTFLTnM1cTVYZi9YV2lFdlhucjZaSHY5UnB4Ywo1SnN4YXV3SWN4ZDQ5OGdwWmN6S0I0dnpPNDFzMExwM3piMnJ3cDc2VkM4RXBuY21nUUQvbkxrZDQxSFB3aFpaCnJsT3pLaVBRRlNybEZROWhFM2IveXhqdEFvR0FEa1lEMFZydnhFVzRQbDk5T3B6WXJFTGFUZTA0SStSYVpTbFYKeWMxVW5seUtmRjViRk8vRTN6Z3VTQytJRDlXaEY4Q0k0UUs0YzBtZWR5TWxnR1k1cXBETlBOS0pzbjlQVzJZcQplR3gvWHBTTHlQMWFHSDdld3d0TCtYZkxoc2hmY1pCclJXZGgwcGJyMXlZRS9EM2pLK0FyTmVLb2J0d1kxTWhhCkdjV2RyZlVDZ1lFQTNMcUZIQVdINC94TldFNUYrOEphcnlTVXVlYlNTckZYVG9RNHlrWVU5aDIyamt5Ympvb3cKbk14c2NSLzMybEdCdHlpN3lxOFhQYlVWQ3AvSElsYkRPVkdhOFdlQnhlTXZWYTM5R3pFZ1A0WjZoRXJFVkh6dgp0ckJaTHp1SHRPMVo2Ui90ZDJWZFR4QkQvZmlpeHF6V0NuZ3lxQ0IrVmQ4RTM5VmNaa1B4UTBVPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/root-ca.crt",
                "Data": "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lJU3VKUFBLNC96Lzh3RFFZSktvWklodmNOQVFFTEJRQXdKakVTTUJBR0ExVUUKQ3hNSmIzQmxibk5vYVdaME1SQXdEZ1lEVlFRREV3ZHliMjkwTFdOaE1CNFhEVEU1TVRJd09URXdOVFUxT0ZvWApEVEk1TVRJd05qRXdOVFUxT0Zvd0pqRVNNQkFHQTFVRUN4TUpiM0JsYm5Ob2FXWjBNUkF3RGdZRFZRUURFd2R5CmIyOTBMV05oTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0Q1dWQysrQ3VHb0gKRGFOcVEyUVhlZ01GUmlCZjlYc3V6T3lyTFNJOEZyKzVFMW51cEV6SnZZNDg2dEpYTTZuQWkrajVtWjUwMENkZgpDMmtmQU1Vc2h6NFZZNXZYUGxvcWh4VkRtWkhyU3pzVk5MNFVPV25GdUNwZGZMb3ZoODF0c1Q5V0txQTFhMlY1Cm1jV0FiNFltcGlJSmZSaFk3TVBhVDcyS3pnakFtR0JSV3FYQktlaTdBTXFHRnRJTjQ4eTZhU3ExbFBhTU53cnoKR3EzOWFCdFM2aW1mNGlnd0hxMXE1QmpwSW45Qi81c0tHaFNXeUxrQXRldll6UjhzQUFkcGdnMjRsWnlsUm5xOQpqWDJCdndodldsMzRBK3dsWnZqL2Jrak94SmFaSUZjKzQyWk1lK1VTMmFKcU5oUGNCdklyQU4rSjdPcmFteVcxCjcvTVFmZjhVZ3dJREFRQUJvMEl3UURBT0JnTlZIUThCQWY4RUJBTUNBcVF3RHdZRFZSMFRBUUgvQkFVd0F3RUIKL3pBZEJnTlZIUTRFRmdRVVFTTERnU0NDQ2xsTlVuZlpCeHQydFAzTUtkZ3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdpK2d0NGRXUlJBZVJNd3hlVzdCWUJ2aEhEb3NsZzBGcmV5K2pubENHN1JDTy9OWXM0TStvdFYzZWxVCjBjL3FLeDVjWUZHTDFtVGFhUDFmemlHdGdNamlnZVljL3NiN01ISCtDa3Z5OHNmMi9OdmJna040RUtodDhUTWIKN2tRWVJuTFFPQmYwTmZqNWpyZEdYVUthTk5zeHUzM1FsMmw3N3F2elkzMkswTG11SEMreWUvUXdKb2R1STdoUwpjZnYyOGs1clZKa2NKMCtLN0graUc1bHJmWVdTUmNyT2c5RXAwbi9CU1h1ejZMb2RuczZZY2Zxanhnc3Nra012Ck5hT1BIRUVYRzc2RUc3UGt1dEx1WDRJeTV3N2wvUzBvSng5ekgxNkFIbzVSY3JvQStzVzdINnBzbS9rMkg3b2MKZDFFQkZ6SVdCWUhPZXZlRUFSeXVhNXNJYmJ3PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg=="
            }
        ]
    },
    "*tls.ServiceAccountKeyPair": {
        "Pvt": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM3hJWGdjS3N6WWc0VDVVblhlQzFCUnZlN2NvUFlJdzF2emdmYzVyTXNKMk9meU81ClFYYk9jMWZ5OFVhUEc1aW01azdvQkM1VzRuNTZUMXVybzFhUnlrNkF5TlRaUFhlSVhoSThQa2FYKzlkWHQ3WlkKSmRnWHh6T2JweldPZDg2d0xpc05lUHQwZmJYbkNjaWNuWEVCeWtER2RVV244b0g4ZXRmcG4vWWJIaDYyL1NqZApaZFlxWHFoZ292R1lnS2UvUk1tTjlxQ1k5N1hRblZ4aHZwY0tnN2ZXMWo1WFV5TlNSdHRwQ0JKdnQ5RUhyVjl2CmtWSWFTQ0tJbm9VdEV3N2phQmpSZVpVdEVUdXRmK1Z3dG5DY09VUUVaRDZRbTN2ajMyOHVWWVMvbVJJYnVBTkgKd25sdnYzampmeHVpV05mZUhXbG5vOS9PemhmeEVLTFZXa2hoY3dJREFRQUJBb0lCQVFDdlhTaXZzUnhxSTdtcApEcWU1RElzaWJndXVRbGdlWFh0dlRTNmtra0J5WkJwKzV0V2Zta2VvczY1Z2NValZ1QWNWTFZrRzJHc2plYXlyCnNIUlpYeGdUdysxSWROUW5sMDNVTGwrLzBYMXYxWlcyN2htVC9yS0t2bzZTUCs4MVRuNkFmUVlGWXlEc0p0RnYKaG85ZzBsTkc3ZTlXaUNFRTY1MVI4V1ZQaElsQy9naUw0M2xNWTB2Y201L1FXbWZrdlFwZ0REZWVrb2xyQ25QVQpRdXFadzc4MFMwR1RhSHI4TTJ0ckdGalNxVlhWUmo0TytqRERUK3NsZEtHSDlPNVVPWDQwQUdvalBCSk5wTEcvCjFBOHVaMUl2L3JJVzBQckYxdi9oelBGRGFHU29DT0VpcithQy92SkhLTU9YWmF3alAxVDQ4U3Fucm9lVnpYSkgKdmU5UjhpOFJBb0dCQVBiKzNoL2hFQjg2ZVMwd0dwd1ppZlY1R09venh3d2xRYkxobWNKdzkwT3pVN0YrSDNrawptM0JkUUF4cUt6Z0hadTRlWGoyS2VvMUNaTTIxSjRjWVFYdG1Ydk1VcHZzNStVbTJSWUF6K05EUUU0WVhrTDk3CjFBSTFTL3FUR1hROVdBL0Yyb3FjUlZwOUlHcTBuZkVHTC9LTjFPVmFqMktZcG82NTJWTmc3Q2twQW9HQkFPY3oKOE1TNVlzSitCMWE2UHZwTTNjT2I2QmY3eURhOUtHR3huRExvemZLQ2h1MnZVdFhLZkdxUUx3YkNrbytSOGZKTQpkS1hicGo0aW1LbWZQa09CblBGbklkZFhHZUlTaUdFSVFnN2JhR2N5bGx2NkpxcVErTE9CUjVCYmJuZ1p4SUZYCmtya3dpQXBSTmxFMVZiWHQ3TlQrOTFFRUcyeHpXWURocjJ2RGoxMDdBb0dCQUxUbTlzbGlqZXhSWjI4eFRFd0kKYUlMaHJ0M2FEbTlXMmtlcDlIUDFTU1RNc3YvTTRFQmFEMzY4emF4S0ZsMXpEbkJZemExRlAzMDJvNTRHa0d6aAoxeFFLWm9Dakg2bmhURFF3eTdhYVdpS1dRN1p5akJHeklCUjk5S2dTRlJLTjIzR3g5OTZObGo0d1p3M0FPKzNNCkdsSU1qMkZzY3BoRU5ibFRaVmtzSTh3QkFvR0JBTXhpWnpLUks5UUJjMTFnMGJHVlorbTNGa3ExWXIyNUpFeVEKcFNPQUdDZU02ZGlPUjYwRkRrMXAzcGljUXRHMlUrczlXVlVSd25sbFBnMmMzMzd2d3B6STdlcWViaHdqQS9xNwpRU0kvSmFFczRDeTVDNXQzQXRRMHNkM1VaZWkzNXJYc2c2RkFYTks2RGtsbDI3b3pkVXlwaEZwVFJpYnVKYTVBClZFSHdvL2puQW9HQUdBNDd4SWxIVVZYRHJYbVNtVlkrbVBlYVNDRGQwTElEUnE4bzFOSXcycGdxTldHdlJrVWMKYXV6aVd5bG1IdkJsUWdmSUYzdEE2Sm9ocFdnSWpMaVJrb3Z0T1kwUFZ5RjVYb3diMlBCeUc4NzZuT1pPeFY3LwpjTkdOVkFuK0YrMWkyREYvU00xc3IwYW9qcEozV0Z4alV6cUFpZzk5cGp4QTc1RjdrODl0OXVNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=",
        "Pub": "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBM3hJWGdjS3N6WWc0VDVVblhlQzEKQlJ2ZTdjb1BZSXcxdnpnZmM1ck1zSjJPZnlPNVFYYk9jMWZ5OFVhUEc1aW01azdvQkM1VzRuNTZUMXVybzFhUgp5azZBeU5UWlBYZUlYaEk4UGthWCs5ZFh0N1pZSmRnWHh6T2JweldPZDg2d0xpc05lUHQwZmJYbkNjaWNuWEVCCnlrREdkVVduOG9IOGV0ZnBuL1liSGg2Mi9TamRaZFlxWHFoZ292R1lnS2UvUk1tTjlxQ1k5N1hRblZ4aHZwY0sKZzdmVzFqNVhVeU5TUnR0cENCSnZ0OUVIclY5dmtWSWFTQ0tJbm9VdEV3N2phQmpSZVpVdEVUdXRmK1Z3dG5DYwpPVVFFWkQ2UW0zdmozMjh1VllTL21SSWJ1QU5Id25sdnYzampmeHVpV05mZUhXbG5vOS9PemhmeEVLTFZXa2hoCmN3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K",
        "FileList": [
            {
                "Filename": "tls/service-account.key",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM3hJWGdjS3N6WWc0VDVVblhlQzFCUnZlN2NvUFlJdzF2emdmYzVyTXNKMk9meU81ClFYYk9jMWZ5OFVhUEc1aW01azdvQkM1VzRuNTZUMXVybzFhUnlrNkF5TlRaUFhlSVhoSThQa2FYKzlkWHQ3WlkKSmRnWHh6T2JweldPZDg2d0xpc05lUHQwZmJYbkNjaWNuWEVCeWtER2RVV244b0g4ZXRmcG4vWWJIaDYyL1NqZApaZFlxWHFoZ292R1lnS2UvUk1tTjlxQ1k5N1hRblZ4aHZwY0tnN2ZXMWo1WFV5TlNSdHRwQ0JKdnQ5RUhyVjl2CmtWSWFTQ0tJbm9VdEV3N2phQmpSZVpVdEVUdXRmK1Z3dG5DY09VUUVaRDZRbTN2ajMyOHVWWVMvbVJJYnVBTkgKd25sdnYzampmeHVpV05mZUhXbG5vOS9PemhmeEVLTFZXa2hoY3dJREFRQUJBb0lCQVFDdlhTaXZzUnhxSTdtcApEcWU1RElzaWJndXVRbGdlWFh0dlRTNmtra0J5WkJwKzV0V2Zta2VvczY1Z2NValZ1QWNWTFZrRzJHc2plYXlyCnNIUlpYeGdUdysxSWROUW5sMDNVTGwrLzBYMXYxWlcyN2htVC9yS0t2bzZTUCs4MVRuNkFmUVlGWXlEc0p0RnYKaG85ZzBsTkc3ZTlXaUNFRTY1MVI4V1ZQaElsQy9naUw0M2xNWTB2Y201L1FXbWZrdlFwZ0REZWVrb2xyQ25QVQpRdXFadzc4MFMwR1RhSHI4TTJ0ckdGalNxVlhWUmo0TytqRERUK3NsZEtHSDlPNVVPWDQwQUdvalBCSk5wTEcvCjFBOHVaMUl2L3JJVzBQckYxdi9oelBGRGFHU29DT0VpcithQy92SkhLTU9YWmF3alAxVDQ4U3Fucm9lVnpYSkgKdmU5UjhpOFJBb0dCQVBiKzNoL2hFQjg2ZVMwd0dwd1ppZlY1R09venh3d2xRYkxobWNKdzkwT3pVN0YrSDNrawptM0JkUUF4cUt6Z0hadTRlWGoyS2VvMUNaTTIxSjRjWVFYdG1Ydk1VcHZzNStVbTJSWUF6K05EUUU0WVhrTDk3CjFBSTFTL3FUR1hROVdBL0Yyb3FjUlZwOUlHcTBuZkVHTC9LTjFPVmFqMktZcG82NTJWTmc3Q2twQW9HQkFPY3oKOE1TNVlzSitCMWE2UHZwTTNjT2I2QmY3eURhOUtHR3huRExvemZLQ2h1MnZVdFhLZkdxUUx3YkNrbytSOGZKTQpkS1hicGo0aW1LbWZQa09CblBGbklkZFhHZUlTaUdFSVFnN2JhR2N5bGx2NkpxcVErTE9CUjVCYmJuZ1p4SUZYCmtya3dpQXBSTmxFMVZiWHQ3TlQrOTFFRUcyeHpXWURocjJ2RGoxMDdBb0dCQUxUbTlzbGlqZXhSWjI4eFRFd0kKYUlMaHJ0M2FEbTlXMmtlcDlIUDFTU1RNc3YvTTRFQmFEMzY4emF4S0ZsMXpEbkJZemExRlAzMDJvNTRHa0d6aAoxeFFLWm9Dakg2bmhURFF3eTdhYVdpS1dRN1p5akJHeklCUjk5S2dTRlJLTjIzR3g5OTZObGo0d1p3M0FPKzNNCkdsSU1qMkZzY3BoRU5ibFRaVmtzSTh3QkFvR0JBTXhpWnpLUks5UUJjMTFnMGJHVlorbTNGa3ExWXIyNUpFeVEKcFNPQUdDZU02ZGlPUjYwRkRrMXAzcGljUXRHMlUrczlXVlVSd25sbFBnMmMzMzd2d3B6STdlcWViaHdqQS9xNwpRU0kvSmFFczRDeTVDNXQzQXRRMHNkM1VaZWkzNXJYc2c2RkFYTks2RGtsbDI3b3pkVXlwaEZwVFJpYnVKYTVBClZFSHdvL2puQW9HQUdBNDd4SWxIVVZYRHJYbVNtVlkrbVBlYVNDRGQwTElEUnE4bzFOSXcycGdxTldHdlJrVWMKYXV6aVd5bG1IdkJsUWdmSUYzdEE2Sm9ocFdnSWpMaVJrb3Z0T1kwUFZ5RjVYb3diMlBCeUc4NzZuT1pPeFY3LwpjTkdOVkFuK0YrMWkyREYvU00xc3IwYW9qcEozV0Z4alV6cUFpZzk5cGp4QTc1RjdrODl0OXVNPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo="
            },
            {
                "Filename": "tls/service-account.pub",
                "Data": "LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBM3hJWGdjS3N6WWc0VDVVblhlQzEKQlJ2ZTdjb1BZSXcxdnpnZmM1ck1zSjJPZnlPNVFYYk9jMWZ5OFVhUEc1aW01azdvQkM1VzRuNTZUMXVybzFhUgp5azZBeU5UWlBYZUlYaEk4UGthWCs5ZFh0N1pZSmRnWHh6T2JweldPZDg2d0xpc05lUHQwZmJYbkNjaWNuWEVCCnlrREdkVVduOG9IOGV0ZnBuL1liSGg2Mi9TamRaZFlxWHFoZ292R1lnS2UvUk1tTjlxQ1k5N1hRblZ4aHZwY0sKZzdmVzFqNVhVeU5TUnR0cENCSnZ0OUVIclY5dmtWSWFTQ0tJbm9VdEV3N2phQmpSZVpVdEVUdXRmK1Z3dG5DYwpPVVFFWkQ2UW0zdmozMjh1VllTL21SSWJ1QU5Id25sdnYzampmeHVpV05mZUhXbG5vOS9PemhmeEVLTFZXa2hoCmN3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K"
            }
        ]
    }
}